"use strict";
var vue = require("vue");
var serverRenderer$1 = require("@vue/server-renderer");
var inertiaVue3 = require("@inertiajs/inertia-vue3");
var createServer = require("@inertiajs/server");
var moment = require("moment");
var serverRenderer = require("vue/server-renderer");
var vue$1 = require("@headlessui/vue");
var solid = require("@heroicons/vue/solid");
var outline = require("@heroicons/vue/outline");
var _debounce = require("lodash/debounce");
var inertia = require("@inertiajs/inertia");
var EditIcon = require("@heroicons/vue/outline/PencilIcon");
var ChevronLeftIcon = require("@heroicons/vue/outline/ChevronLeftIcon");
var ChevronRightIcon = require("@heroicons/vue/outline/ChevronRightIcon");
var axios$1 = require("axios");
var TrashIcon = require("@heroicons/vue/outline/TrashIcon");
var Check = require("@heroicons/vue/outline/CheckIcon");
var RemoveIcon = require("@heroicons/vue/outline/DocumentRemoveIcon");
var draggable = require("vuedraggable");
var SearchIcon = require("@heroicons/vue/solid/SearchIcon");
function _interopDefaultLegacy(e2) {
  return e2 && typeof e2 === "object" && "default" in e2 ? e2 : { "default": e2 };
}
var createServer__default = /* @__PURE__ */ _interopDefaultLegacy(createServer);
var moment__default = /* @__PURE__ */ _interopDefaultLegacy(moment);
var _debounce__default = /* @__PURE__ */ _interopDefaultLegacy(_debounce);
var EditIcon__default = /* @__PURE__ */ _interopDefaultLegacy(EditIcon);
var ChevronLeftIcon__default = /* @__PURE__ */ _interopDefaultLegacy(ChevronLeftIcon);
var ChevronRightIcon__default = /* @__PURE__ */ _interopDefaultLegacy(ChevronRightIcon);
var axios__default = /* @__PURE__ */ _interopDefaultLegacy(axios$1);
var TrashIcon__default = /* @__PURE__ */ _interopDefaultLegacy(TrashIcon);
var Check__default = /* @__PURE__ */ _interopDefaultLegacy(Check);
var RemoveIcon__default = /* @__PURE__ */ _interopDefaultLegacy(RemoveIcon);
var draggable__default = /* @__PURE__ */ _interopDefaultLegacy(draggable);
var SearchIcon__default = /* @__PURE__ */ _interopDefaultLegacy(SearchIcon);
async function resolvePageComponent(path, pages) {
  const page = pages[path];
  if (typeof page === "undefined") {
    throw new Error(`Page not found: ${path}`);
  }
  return typeof page === "function" ? page() : page;
}
function t(t4, r2) {
  for (var n2 = 0; n2 < r2.length; n2++) {
    var e2 = r2[n2];
    e2.enumerable = e2.enumerable || false, e2.configurable = true, "value" in e2 && (e2.writable = true), Object.defineProperty(t4, e2.key, e2);
  }
}
function r(r2, n2, e2) {
  return n2 && t(r2.prototype, n2), e2 && t(r2, e2), Object.defineProperty(r2, "prototype", { writable: false }), r2;
}
function n() {
  return n = Object.assign || function(t4) {
    for (var r2 = 1; r2 < arguments.length; r2++) {
      var n2 = arguments[r2];
      for (var e2 in n2)
        Object.prototype.hasOwnProperty.call(n2, e2) && (t4[e2] = n2[e2]);
    }
    return t4;
  }, n.apply(this, arguments);
}
function e(t4) {
  return e = Object.setPrototypeOf ? Object.getPrototypeOf : function(t5) {
    return t5.__proto__ || Object.getPrototypeOf(t5);
  }, e(t4);
}
function o(t4, r2) {
  return o = Object.setPrototypeOf || function(t5, r3) {
    return t5.__proto__ = r3, t5;
  }, o(t4, r2);
}
function i() {
  if ("undefined" == typeof Reflect || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if ("function" == typeof Proxy)
    return true;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), true;
  } catch (t4) {
    return false;
  }
}
function u(t4, r2, n2) {
  return u = i() ? Reflect.construct : function(t5, r3, n3) {
    var e2 = [null];
    e2.push.apply(e2, r3);
    var i2 = new (Function.bind.apply(t5, e2))();
    return n3 && o(i2, n3.prototype), i2;
  }, u.apply(null, arguments);
}
function f(t4) {
  var r2 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
  return f = function(t5) {
    if (null === t5 || -1 === Function.toString.call(t5).indexOf("[native code]"))
      return t5;
    if ("function" != typeof t5)
      throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== r2) {
      if (r2.has(t5))
        return r2.get(t5);
      r2.set(t5, n2);
    }
    function n2() {
      return u(t5, arguments, e(this).constructor);
    }
    return n2.prototype = Object.create(t5.prototype, { constructor: { value: n2, enumerable: false, writable: true, configurable: true } }), o(n2, t5);
  }, f(t4);
}
var a = String.prototype.replace, c = /%20/g, l = { default: "RFC3986", formatters: { RFC1738: function(t4) {
  return a.call(t4, c, "+");
}, RFC3986: function(t4) {
  return String(t4);
} }, RFC1738: "RFC1738", RFC3986: "RFC3986" }, s = Object.prototype.hasOwnProperty, v = Array.isArray, p = function() {
  for (var t4 = [], r2 = 0; r2 < 256; ++r2)
    t4.push("%" + ((r2 < 16 ? "0" : "") + r2.toString(16)).toUpperCase());
  return t4;
}(), y = function(t4, r2) {
  for (var n2 = r2 && r2.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, e2 = 0; e2 < t4.length; ++e2)
    void 0 !== t4[e2] && (n2[e2] = t4[e2]);
  return n2;
}, d = { arrayToObject: y, assign: function(t4, r2) {
  return Object.keys(r2).reduce(function(t5, n2) {
    return t5[n2] = r2[n2], t5;
  }, t4);
}, combine: function(t4, r2) {
  return [].concat(t4, r2);
}, compact: function(t4) {
  for (var r2 = [{ obj: { o: t4 }, prop: "o" }], n2 = [], e2 = 0; e2 < r2.length; ++e2)
    for (var o2 = r2[e2], i2 = o2.obj[o2.prop], u2 = Object.keys(i2), f2 = 0; f2 < u2.length; ++f2) {
      var a2 = u2[f2], c2 = i2[a2];
      "object" == typeof c2 && null !== c2 && -1 === n2.indexOf(c2) && (r2.push({ obj: i2, prop: a2 }), n2.push(c2));
    }
  return function(t5) {
    for (; t5.length > 1; ) {
      var r3 = t5.pop(), n3 = r3.obj[r3.prop];
      if (v(n3)) {
        for (var e3 = [], o3 = 0; o3 < n3.length; ++o3)
          void 0 !== n3[o3] && e3.push(n3[o3]);
        r3.obj[r3.prop] = e3;
      }
    }
  }(r2), t4;
}, decode: function(t4, r2, n2) {
  var e2 = t4.replace(/\+/g, " ");
  if ("iso-8859-1" === n2)
    return e2.replace(/%[0-9a-f]{2}/gi, unescape);
  try {
    return decodeURIComponent(e2);
  } catch (t5) {
    return e2;
  }
}, encode: function(t4, r2, n2, e2, o2) {
  if (0 === t4.length)
    return t4;
  var i2 = t4;
  if ("symbol" == typeof t4 ? i2 = Symbol.prototype.toString.call(t4) : "string" != typeof t4 && (i2 = String(t4)), "iso-8859-1" === n2)
    return escape(i2).replace(/%u[0-9a-f]{4}/gi, function(t5) {
      return "%26%23" + parseInt(t5.slice(2), 16) + "%3B";
    });
  for (var u2 = "", f2 = 0; f2 < i2.length; ++f2) {
    var a2 = i2.charCodeAt(f2);
    45 === a2 || 46 === a2 || 95 === a2 || 126 === a2 || a2 >= 48 && a2 <= 57 || a2 >= 65 && a2 <= 90 || a2 >= 97 && a2 <= 122 || o2 === l.RFC1738 && (40 === a2 || 41 === a2) ? u2 += i2.charAt(f2) : a2 < 128 ? u2 += p[a2] : a2 < 2048 ? u2 += p[192 | a2 >> 6] + p[128 | 63 & a2] : a2 < 55296 || a2 >= 57344 ? u2 += p[224 | a2 >> 12] + p[128 | a2 >> 6 & 63] + p[128 | 63 & a2] : (a2 = 65536 + ((1023 & a2) << 10 | 1023 & i2.charCodeAt(f2 += 1)), u2 += p[240 | a2 >> 18] + p[128 | a2 >> 12 & 63] + p[128 | a2 >> 6 & 63] + p[128 | 63 & a2]);
  }
  return u2;
}, isBuffer: function(t4) {
  return !(!t4 || "object" != typeof t4 || !(t4.constructor && t4.constructor.isBuffer && t4.constructor.isBuffer(t4)));
}, isRegExp: function(t4) {
  return "[object RegExp]" === Object.prototype.toString.call(t4);
}, maybeMap: function(t4, r2) {
  if (v(t4)) {
    for (var n2 = [], e2 = 0; e2 < t4.length; e2 += 1)
      n2.push(r2(t4[e2]));
    return n2;
  }
  return r2(t4);
}, merge: function t2(r2, n2, e2) {
  if (!n2)
    return r2;
  if ("object" != typeof n2) {
    if (v(r2))
      r2.push(n2);
    else {
      if (!r2 || "object" != typeof r2)
        return [r2, n2];
      (e2 && (e2.plainObjects || e2.allowPrototypes) || !s.call(Object.prototype, n2)) && (r2[n2] = true);
    }
    return r2;
  }
  if (!r2 || "object" != typeof r2)
    return [r2].concat(n2);
  var o2 = r2;
  return v(r2) && !v(n2) && (o2 = y(r2, e2)), v(r2) && v(n2) ? (n2.forEach(function(n3, o3) {
    if (s.call(r2, o3)) {
      var i2 = r2[o3];
      i2 && "object" == typeof i2 && n3 && "object" == typeof n3 ? r2[o3] = t2(i2, n3, e2) : r2.push(n3);
    } else
      r2[o3] = n3;
  }), r2) : Object.keys(n2).reduce(function(r3, o3) {
    var i2 = n2[o3];
    return r3[o3] = s.call(r3, o3) ? t2(r3[o3], i2, e2) : i2, r3;
  }, o2);
} }, b = Object.prototype.hasOwnProperty, h = { brackets: function(t4) {
  return t4 + "[]";
}, comma: "comma", indices: function(t4, r2) {
  return t4 + "[" + r2 + "]";
}, repeat: function(t4) {
  return t4;
} }, m = Array.isArray, g = String.prototype.split, j = Array.prototype.push, w = function(t4, r2) {
  j.apply(t4, m(r2) ? r2 : [r2]);
}, O = Date.prototype.toISOString, E = l.default, R = { addQueryPrefix: false, allowDots: false, charset: "utf-8", charsetSentinel: false, delimiter: "&", encode: true, encoder: d.encode, encodeValuesOnly: false, format: E, formatter: l.formatters[E], indices: false, serializeDate: function(t4) {
  return O.call(t4);
}, skipNulls: false, strictNullHandling: false }, S = function t3(r2, n2, e2, o2, i2, u2, f2, a2, c2, l2, s2, v2, p2, y2) {
  var b2, h2 = r2;
  if ("function" == typeof f2 ? h2 = f2(n2, h2) : h2 instanceof Date ? h2 = l2(h2) : "comma" === e2 && m(h2) && (h2 = d.maybeMap(h2, function(t4) {
    return t4 instanceof Date ? l2(t4) : t4;
  })), null === h2) {
    if (o2)
      return u2 && !p2 ? u2(n2, R.encoder, y2, "key", s2) : n2;
    h2 = "";
  }
  if ("string" == typeof (b2 = h2) || "number" == typeof b2 || "boolean" == typeof b2 || "symbol" == typeof b2 || "bigint" == typeof b2 || d.isBuffer(h2)) {
    if (u2) {
      var j2 = p2 ? n2 : u2(n2, R.encoder, y2, "key", s2);
      if ("comma" === e2 && p2) {
        for (var O2 = g.call(String(h2), ","), E2 = "", S2 = 0; S2 < O2.length; ++S2)
          E2 += (0 === S2 ? "" : ",") + v2(u2(O2[S2], R.encoder, y2, "value", s2));
        return [v2(j2) + "=" + E2];
      }
      return [v2(j2) + "=" + v2(u2(h2, R.encoder, y2, "value", s2))];
    }
    return [v2(n2) + "=" + v2(String(h2))];
  }
  var k2, x2 = [];
  if (void 0 === h2)
    return x2;
  if ("comma" === e2 && m(h2))
    k2 = [{ value: h2.length > 0 ? h2.join(",") || null : void 0 }];
  else if (m(f2))
    k2 = f2;
  else {
    var C2 = Object.keys(h2);
    k2 = a2 ? C2.sort(a2) : C2;
  }
  for (var N2 = 0; N2 < k2.length; ++N2) {
    var T2 = k2[N2], F2 = "object" == typeof T2 && void 0 !== T2.value ? T2.value : h2[T2];
    if (!i2 || null !== F2) {
      var D2 = m(h2) ? "function" == typeof e2 ? e2(n2, T2) : n2 : n2 + (c2 ? "." + T2 : "[" + T2 + "]");
      w(x2, t3(F2, D2, e2, o2, i2, u2, f2, a2, c2, l2, s2, v2, p2, y2));
    }
  }
  return x2;
}, k = Object.prototype.hasOwnProperty, x = Array.isArray, C = { allowDots: false, allowPrototypes: false, arrayLimit: 20, charset: "utf-8", charsetSentinel: false, comma: false, decoder: d.decode, delimiter: "&", depth: 5, ignoreQueryPrefix: false, interpretNumericEntities: false, parameterLimit: 1e3, parseArrays: true, plainObjects: false, strictNullHandling: false }, N = function(t4) {
  return t4.replace(/&#(\d+);/g, function(t5, r2) {
    return String.fromCharCode(parseInt(r2, 10));
  });
}, T = function(t4, r2) {
  return t4 && "string" == typeof t4 && r2.comma && t4.indexOf(",") > -1 ? t4.split(",") : t4;
}, F = function(t4, r2, n2, e2) {
  if (t4) {
    var o2 = n2.allowDots ? t4.replace(/\.([^.[]+)/g, "[$1]") : t4, i2 = /(\[[^[\]]*])/g, u2 = n2.depth > 0 && /(\[[^[\]]*])/.exec(o2), f2 = u2 ? o2.slice(0, u2.index) : o2, a2 = [];
    if (f2) {
      if (!n2.plainObjects && k.call(Object.prototype, f2) && !n2.allowPrototypes)
        return;
      a2.push(f2);
    }
    for (var c2 = 0; n2.depth > 0 && null !== (u2 = i2.exec(o2)) && c2 < n2.depth; ) {
      if (c2 += 1, !n2.plainObjects && k.call(Object.prototype, u2[1].slice(1, -1)) && !n2.allowPrototypes)
        return;
      a2.push(u2[1]);
    }
    return u2 && a2.push("[" + o2.slice(u2.index) + "]"), function(t5, r3, n3, e3) {
      for (var o3 = e3 ? r3 : T(r3, n3), i3 = t5.length - 1; i3 >= 0; --i3) {
        var u3, f3 = t5[i3];
        if ("[]" === f3 && n3.parseArrays)
          u3 = [].concat(o3);
        else {
          u3 = n3.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
          var a3 = "[" === f3.charAt(0) && "]" === f3.charAt(f3.length - 1) ? f3.slice(1, -1) : f3, c3 = parseInt(a3, 10);
          n3.parseArrays || "" !== a3 ? !isNaN(c3) && f3 !== a3 && String(c3) === a3 && c3 >= 0 && n3.parseArrays && c3 <= n3.arrayLimit ? (u3 = [])[c3] = o3 : "__proto__" !== a3 && (u3[a3] = o3) : u3 = { 0: o3 };
        }
        o3 = u3;
      }
      return o3;
    }(a2, r2, n2, e2);
  }
}, D = function(t4, r2) {
  var n2 = function(t5) {
    if (!t5)
      return C;
    if (null != t5.decoder && "function" != typeof t5.decoder)
      throw new TypeError("Decoder has to be a function.");
    if (void 0 !== t5.charset && "utf-8" !== t5.charset && "iso-8859-1" !== t5.charset)
      throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
    return { allowDots: void 0 === t5.allowDots ? C.allowDots : !!t5.allowDots, allowPrototypes: "boolean" == typeof t5.allowPrototypes ? t5.allowPrototypes : C.allowPrototypes, arrayLimit: "number" == typeof t5.arrayLimit ? t5.arrayLimit : C.arrayLimit, charset: void 0 === t5.charset ? C.charset : t5.charset, charsetSentinel: "boolean" == typeof t5.charsetSentinel ? t5.charsetSentinel : C.charsetSentinel, comma: "boolean" == typeof t5.comma ? t5.comma : C.comma, decoder: "function" == typeof t5.decoder ? t5.decoder : C.decoder, delimiter: "string" == typeof t5.delimiter || d.isRegExp(t5.delimiter) ? t5.delimiter : C.delimiter, depth: "number" == typeof t5.depth || false === t5.depth ? +t5.depth : C.depth, ignoreQueryPrefix: true === t5.ignoreQueryPrefix, interpretNumericEntities: "boolean" == typeof t5.interpretNumericEntities ? t5.interpretNumericEntities : C.interpretNumericEntities, parameterLimit: "number" == typeof t5.parameterLimit ? t5.parameterLimit : C.parameterLimit, parseArrays: false !== t5.parseArrays, plainObjects: "boolean" == typeof t5.plainObjects ? t5.plainObjects : C.plainObjects, strictNullHandling: "boolean" == typeof t5.strictNullHandling ? t5.strictNullHandling : C.strictNullHandling };
  }(r2);
  if ("" === t4 || null == t4)
    return n2.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
  for (var e2 = "string" == typeof t4 ? function(t5, r3) {
    var n3, e3 = {}, o3 = (r3.ignoreQueryPrefix ? t5.replace(/^\?/, "") : t5).split(r3.delimiter, Infinity === r3.parameterLimit ? void 0 : r3.parameterLimit), i3 = -1, u3 = r3.charset;
    if (r3.charsetSentinel)
      for (n3 = 0; n3 < o3.length; ++n3)
        0 === o3[n3].indexOf("utf8=") && ("utf8=%E2%9C%93" === o3[n3] ? u3 = "utf-8" : "utf8=%26%2310003%3B" === o3[n3] && (u3 = "iso-8859-1"), i3 = n3, n3 = o3.length);
    for (n3 = 0; n3 < o3.length; ++n3)
      if (n3 !== i3) {
        var f3, a3, c2 = o3[n3], l2 = c2.indexOf("]="), s2 = -1 === l2 ? c2.indexOf("=") : l2 + 1;
        -1 === s2 ? (f3 = r3.decoder(c2, C.decoder, u3, "key"), a3 = r3.strictNullHandling ? null : "") : (f3 = r3.decoder(c2.slice(0, s2), C.decoder, u3, "key"), a3 = d.maybeMap(T(c2.slice(s2 + 1), r3), function(t6) {
          return r3.decoder(t6, C.decoder, u3, "value");
        })), a3 && r3.interpretNumericEntities && "iso-8859-1" === u3 && (a3 = N(a3)), c2.indexOf("[]=") > -1 && (a3 = x(a3) ? [a3] : a3), e3[f3] = k.call(e3, f3) ? d.combine(e3[f3], a3) : a3;
      }
    return e3;
  }(t4, n2) : t4, o2 = n2.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, i2 = Object.keys(e2), u2 = 0; u2 < i2.length; ++u2) {
    var f2 = i2[u2], a2 = F(f2, e2[f2], n2, "string" == typeof t4);
    o2 = d.merge(o2, a2, n2);
  }
  return d.compact(o2);
}, $ = /* @__PURE__ */ function() {
  function t4(t5, r2, n3) {
    var e2, o2;
    this.name = t5, this.definition = r2, this.bindings = null != (e2 = r2.bindings) ? e2 : {}, this.wheres = null != (o2 = r2.wheres) ? o2 : {}, this.config = n3;
  }
  var n2 = t4.prototype;
  return n2.matchesUrl = function(t5) {
    var r2 = this;
    if (!this.definition.methods.includes("GET"))
      return false;
    var n3 = this.template.replace(/(\/?){([^}?]*)(\??)}/g, function(t6, n4, e3, o3) {
      var i3, u3 = "(?<" + e3 + ">" + ((null == (i3 = r2.wheres[e3]) ? void 0 : i3.replace(/(^\^)|(\$$)/g, "")) || "[^/?]+") + ")";
      return o3 ? "(" + n4 + u3 + ")?" : "" + n4 + u3;
    }).replace(/^\w+:\/\//, ""), e2 = t5.replace(/^\w+:\/\//, "").split("?"), o2 = e2[0], i2 = e2[1], u2 = new RegExp("^" + n3 + "/?$").exec(o2);
    return !!u2 && { params: u2.groups, query: D(i2) };
  }, n2.compile = function(t5) {
    var r2 = this, n3 = this.parameterSegments;
    return n3.length ? this.template.replace(/{([^}?]+)(\??)}/g, function(e2, o2, i2) {
      var u2, f2, a2;
      if (!i2 && [null, void 0].includes(t5[o2]))
        throw new Error("Ziggy error: '" + o2 + "' parameter is required for route '" + r2.name + "'.");
      if (n3[n3.length - 1].name === o2 && ".*" === r2.wheres[o2])
        return encodeURIComponent(null != (a2 = t5[o2]) ? a2 : "").replace(/%2F/g, "/");
      if (r2.wheres[o2] && !new RegExp("^" + (i2 ? "(" + r2.wheres[o2] + ")?" : r2.wheres[o2]) + "$").test(null != (u2 = t5[o2]) ? u2 : ""))
        throw new Error("Ziggy error: '" + o2 + "' parameter does not match required format '" + r2.wheres[o2] + "' for route '" + r2.name + "'.");
      return encodeURIComponent(null != (f2 = t5[o2]) ? f2 : "");
    }).replace(/\/+$/, "") : this.template;
  }, r(t4, [{ key: "template", get: function() {
    return ((this.config.absolute ? this.definition.domain ? "" + this.config.url.match(/^\w+:\/\//)[0] + this.definition.domain + (this.config.port ? ":" + this.config.port : "") : this.config.url : "") + "/" + this.definition.uri).replace(/\/+$/, "");
  } }, { key: "parameterSegments", get: function() {
    var t5, r2;
    return null != (t5 = null == (r2 = this.template.match(/{[^}?]+\??}/g)) ? void 0 : r2.map(function(t6) {
      return { name: t6.replace(/{|\??}/g, ""), required: !/\?}$/.test(t6) };
    })) ? t5 : [];
  } }]), t4;
}(), A = /* @__PURE__ */ function(t4) {
  var e2, i2;
  function u2(r2, e3, o2, i3) {
    var u3;
    if (void 0 === o2 && (o2 = true), (u3 = t4.call(this) || this).t = null != i3 ? i3 : "undefined" != typeof Ziggy ? Ziggy : null == globalThis ? void 0 : globalThis.Ziggy, u3.t = n({}, u3.t, { absolute: o2 }), r2) {
      if (!u3.t.routes[r2])
        throw new Error("Ziggy error: route '" + r2 + "' is not in the route list.");
      u3.i = new $(r2, u3.t.routes[r2], u3.t), u3.u = u3.l(e3);
    }
    return u3;
  }
  i2 = t4, (e2 = u2).prototype = Object.create(i2.prototype), e2.prototype.constructor = e2, o(e2, i2);
  var f2 = u2.prototype;
  return f2.toString = function() {
    var t5 = this, r2 = Object.keys(this.u).filter(function(r3) {
      return !t5.i.parameterSegments.some(function(t6) {
        return t6.name === r3;
      });
    }).filter(function(t6) {
      return "_query" !== t6;
    }).reduce(function(r3, e3) {
      var o2;
      return n({}, r3, ((o2 = {})[e3] = t5.u[e3], o2));
    }, {});
    return this.i.compile(this.u) + function(t6, r3) {
      var n2, e3 = t6, o2 = function(t7) {
        if (!t7)
          return R;
        if (null != t7.encoder && "function" != typeof t7.encoder)
          throw new TypeError("Encoder has to be a function.");
        var r4 = t7.charset || R.charset;
        if (void 0 !== t7.charset && "utf-8" !== t7.charset && "iso-8859-1" !== t7.charset)
          throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        var n3 = l.default;
        if (void 0 !== t7.format) {
          if (!b.call(l.formatters, t7.format))
            throw new TypeError("Unknown format option provided.");
          n3 = t7.format;
        }
        var e4 = l.formatters[n3], o3 = R.filter;
        return ("function" == typeof t7.filter || m(t7.filter)) && (o3 = t7.filter), { addQueryPrefix: "boolean" == typeof t7.addQueryPrefix ? t7.addQueryPrefix : R.addQueryPrefix, allowDots: void 0 === t7.allowDots ? R.allowDots : !!t7.allowDots, charset: r4, charsetSentinel: "boolean" == typeof t7.charsetSentinel ? t7.charsetSentinel : R.charsetSentinel, delimiter: void 0 === t7.delimiter ? R.delimiter : t7.delimiter, encode: "boolean" == typeof t7.encode ? t7.encode : R.encode, encoder: "function" == typeof t7.encoder ? t7.encoder : R.encoder, encodeValuesOnly: "boolean" == typeof t7.encodeValuesOnly ? t7.encodeValuesOnly : R.encodeValuesOnly, filter: o3, format: n3, formatter: e4, serializeDate: "function" == typeof t7.serializeDate ? t7.serializeDate : R.serializeDate, skipNulls: "boolean" == typeof t7.skipNulls ? t7.skipNulls : R.skipNulls, sort: "function" == typeof t7.sort ? t7.sort : null, strictNullHandling: "boolean" == typeof t7.strictNullHandling ? t7.strictNullHandling : R.strictNullHandling };
      }(r3);
      "function" == typeof o2.filter ? e3 = (0, o2.filter)("", e3) : m(o2.filter) && (n2 = o2.filter);
      var i3 = [];
      if ("object" != typeof e3 || null === e3)
        return "";
      var u3 = h[r3 && r3.arrayFormat in h ? r3.arrayFormat : r3 && "indices" in r3 ? r3.indices ? "indices" : "repeat" : "indices"];
      n2 || (n2 = Object.keys(e3)), o2.sort && n2.sort(o2.sort);
      for (var f3 = 0; f3 < n2.length; ++f3) {
        var a2 = n2[f3];
        o2.skipNulls && null === e3[a2] || w(i3, S(e3[a2], a2, u3, o2.strictNullHandling, o2.skipNulls, o2.encode ? o2.encoder : null, o2.filter, o2.sort, o2.allowDots, o2.serializeDate, o2.format, o2.formatter, o2.encodeValuesOnly, o2.charset));
      }
      var c2 = i3.join(o2.delimiter), s2 = true === o2.addQueryPrefix ? "?" : "";
      return o2.charsetSentinel && (s2 += "iso-8859-1" === o2.charset ? "utf8=%26%2310003%3B&" : "utf8=%E2%9C%93&"), c2.length > 0 ? s2 + c2 : "";
    }(n({}, r2, this.u._query), { addQueryPrefix: true, arrayFormat: "indices", encodeValuesOnly: true, skipNulls: true, encoder: function(t6, r3) {
      return "boolean" == typeof t6 ? Number(t6) : r3(t6);
    } });
  }, f2.v = function(t5) {
    var r2 = this;
    t5 ? this.t.absolute && t5.startsWith("/") && (t5 = this.p().host + t5) : t5 = this.h();
    var e3 = {}, o2 = Object.entries(this.t.routes).find(function(n2) {
      return e3 = new $(n2[0], n2[1], r2.t).matchesUrl(t5);
    }) || [void 0, void 0];
    return n({ name: o2[0] }, e3, { route: o2[1] });
  }, f2.h = function() {
    var t5 = this.p(), r2 = t5.pathname, n2 = t5.search;
    return (this.t.absolute ? t5.host + r2 : r2.replace(this.t.url.replace(/^\w*:\/\/[^/]+/, ""), "").replace(/^\/+/, "/")) + n2;
  }, f2.current = function(t5, r2) {
    var e3 = this.v(), o2 = e3.name, i3 = e3.params, u3 = e3.query, f3 = e3.route;
    if (!t5)
      return o2;
    var a2 = new RegExp("^" + t5.replace(/\./g, "\\.").replace(/\*/g, ".*") + "$").test(o2);
    if ([null, void 0].includes(r2) || !a2)
      return a2;
    var c2 = new $(o2, f3, this.t);
    r2 = this.l(r2, c2);
    var l2 = n({}, i3, u3);
    return !(!Object.values(r2).every(function(t6) {
      return !t6;
    }) || Object.values(l2).some(function(t6) {
      return void 0 !== t6;
    })) || Object.entries(r2).every(function(t6) {
      return l2[t6[0]] == t6[1];
    });
  }, f2.p = function() {
    var t5, r2, n2, e3, o2, i3, u3 = "undefined" != typeof window ? window.location : {}, f3 = u3.host, a2 = u3.pathname, c2 = u3.search;
    return { host: null != (t5 = null == (r2 = this.t.location) ? void 0 : r2.host) ? t5 : void 0 === f3 ? "" : f3, pathname: null != (n2 = null == (e3 = this.t.location) ? void 0 : e3.pathname) ? n2 : void 0 === a2 ? "" : a2, search: null != (o2 = null == (i3 = this.t.location) ? void 0 : i3.search) ? o2 : void 0 === c2 ? "" : c2 };
  }, f2.has = function(t5) {
    return Object.keys(this.t.routes).includes(t5);
  }, f2.l = function(t5, r2) {
    var e3 = this;
    void 0 === t5 && (t5 = {}), void 0 === r2 && (r2 = this.i), t5 = ["string", "number"].includes(typeof t5) ? [t5] : t5;
    var o2 = r2.parameterSegments.filter(function(t6) {
      return !e3.t.defaults[t6.name];
    });
    if (Array.isArray(t5))
      t5 = t5.reduce(function(t6, r3, e4) {
        var i4, u3;
        return n({}, t6, o2[e4] ? ((i4 = {})[o2[e4].name] = r3, i4) : "object" == typeof r3 ? r3 : ((u3 = {})[r3] = "", u3));
      }, {});
    else if (1 === o2.length && !t5[o2[0].name] && (t5.hasOwnProperty(Object.values(r2.bindings)[0]) || t5.hasOwnProperty("id"))) {
      var i3;
      (i3 = {})[o2[0].name] = t5, t5 = i3;
    }
    return n({}, this.m(r2), this.g(t5, r2));
  }, f2.m = function(t5) {
    var r2 = this;
    return t5.parameterSegments.filter(function(t6) {
      return r2.t.defaults[t6.name];
    }).reduce(function(t6, e3, o2) {
      var i3, u3 = e3.name;
      return n({}, t6, ((i3 = {})[u3] = r2.t.defaults[u3], i3));
    }, {});
  }, f2.g = function(t5, r2) {
    var e3 = r2.bindings, o2 = r2.parameterSegments;
    return Object.entries(t5).reduce(function(t6, r3) {
      var i3, u3, f3 = r3[0], a2 = r3[1];
      if (!a2 || "object" != typeof a2 || Array.isArray(a2) || !o2.some(function(t7) {
        return t7.name === f3;
      }))
        return n({}, t6, ((u3 = {})[f3] = a2, u3));
      if (!a2.hasOwnProperty(e3[f3])) {
        if (!a2.hasOwnProperty("id"))
          throw new Error("Ziggy error: object passed as '" + f3 + "' parameter is missing route model binding key '" + e3[f3] + "'.");
        e3[f3] = "id";
      }
      return n({}, t6, ((i3 = {})[f3] = a2[e3[f3]], i3));
    }, {});
  }, f2.valueOf = function() {
    return this.toString();
  }, f2.check = function(t5) {
    return this.has(t5);
  }, r(u2, [{ key: "params", get: function() {
    var t5 = this.v();
    return n({}, t5.params, t5.query);
  } }]), u2;
}(/* @__PURE__ */ f(String)), I = { install: function(t4, r2) {
  var n2 = function(t5, n3, e2, o2) {
    return void 0 === o2 && (o2 = r2), function(t6, r3, n4, e3) {
      var o3 = new A(t6, r3, n4, e3);
      return t6 ? o3.toString() : o3;
    }(t5, n3, e2, o2);
  };
  t4.mixin({ methods: { route: n2 } }), parseInt(t4.version) > 2 && t4.provide("route", n2);
} };
var date = {
  methods: {
    formatDate: (value) => moment__default["default"](value).format("MM/DD/YYYY")
  }
};
var money = {
  methods: {
    formatMoney(value, currency = "USD") {
      let formatter = new Intl.NumberFormat(["en-US"], {
        style: "currency",
        currency,
        minimumFractionDigits: 2
      });
      return formatter.format(value);
    }
  }
};
var popup = {
  methods: {
    showPopup(href, title, width = 1024, height = 768) {
      let params = `popup,width=${width},height=${height}`;
      window.open(href, title, params);
    }
  }
};
var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const _sfc_main$4c = {
  props: ["value"]
};
function _sfc_ssrRender$4a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<label${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "label" }, _attrs))}>`);
  if ($props.value) {
    _push(`<span class="label-text">${serverRenderer.ssrInterpolate($props.value)}</span>`);
  } else {
    _push(`<span class="label-text">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</span>`);
  }
  _push(`</label>`);
}
const _sfc_setup$4c = _sfc_main$4c.setup;
_sfc_main$4c.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Label.vue");
  return _sfc_setup$4c ? _sfc_setup$4c(props, ctx) : void 0;
};
var JetLabel = /* @__PURE__ */ _export_sfc(_sfc_main$4c, [["ssrRender", _sfc_ssrRender$4a]]);
const _sfc_main$4b = {
  props: {
    modelValue: { type: [String, Boolean, Number] },
    error: { type: Boolean, default: false },
    min: { type: [Number, String] },
    max: { type: [Number, String] }
  },
  emits: ["update:modelValue"],
  methods: {
    focus() {
      this.$refs.input.focus();
    }
  }
};
function _sfc_ssrRender$49(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<input${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: ["input input-bordered", {
      " input-error": $props.error
    }]
  }, _ctx.$attrs, {
    min: $props.min,
    max: $props.max,
    value: $props.modelValue,
    ref: "input"
  }, _attrs))}>`);
}
const _sfc_setup$4b = _sfc_main$4b.setup;
_sfc_main$4b.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Input.vue");
  return _sfc_setup$4b ? _sfc_setup$4b(props, ctx) : void 0;
};
var JetInput = /* @__PURE__ */ _export_sfc(_sfc_main$4b, [["ssrRender", _sfc_ssrRender$49]]);
const _sfc_main$4a = {
  props: ["message"]
};
function _sfc_ssrRender$48(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    style: $props.message ? null : { display: "none" }
  }, _attrs))}><p class="text-sm text-red-600">${serverRenderer.ssrInterpolate($props.message)}</p></div>`);
}
const _sfc_setup$4a = _sfc_main$4a.setup;
_sfc_main$4a.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/InputError.vue");
  return _sfc_setup$4a ? _sfc_setup$4a(props, ctx) : void 0;
};
var JetInputError = /* @__PURE__ */ _export_sfc(_sfc_main$4a, [["ssrRender", _sfc_ssrRender$48]]);
const _sfc_main$49 = {
  emits: ["update:checked"],
  props: {
    color: {
      default: "green",
      type: String
    },
    checked: {
      type: [Array, Boolean],
      default: false
    },
    disabled: {
      type: Boolean,
      default: false
    },
    value: {
      default: null
    }
  },
  computed: {
    proxyChecked: {
      get() {
        return this.checked;
      },
      set(val) {
        this.$emit("update:checked", val);
      }
    }
  }
};
function _sfc_ssrRender$47(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  let _temp0;
  _push(`<input${serverRenderer.ssrRenderAttrs((_temp0 = vue.mergeProps({
    type: "checkbox",
    value: $props.value,
    disabled: $props.disabled,
    checked: $props.checked,
    class: "checkbox checkbox-sm"
  }, _attrs), vue.mergeProps(_temp0, serverRenderer.ssrGetDynamicModelProps(_temp0, $options.proxyChecked))))}>`);
}
const _sfc_setup$49 = _sfc_main$49.setup;
_sfc_main$49.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Checkbox.vue");
  return _sfc_setup$49 ? _sfc_setup$49(props, ctx) : void 0;
};
var JetCheckBox = /* @__PURE__ */ _export_sfc(_sfc_main$49, [["ssrRender", _sfc_ssrRender$47]]);
const _sfc_main$48 = {
  props: {
    showBorder: {
      type: Boolean,
      default: true
    }
  }
};
function _sfc_ssrRender$46(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: [
      $props.showBorder ? "border-b border-gray-100 mb-4" : "",
      "flex justify-between items-center space-x-4  pb-2"
    ]
  }, _attrs))}><div><h3 class="text-2xl font-bold card-title">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push, _parent);
  _push(`</h3><p class="mt-1 text-sm text-base-content">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "description", {}, null, _push, _parent);
  _push(`</p></div><div>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "aside", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$48 = _sfc_main$48.setup;
_sfc_main$48.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/SectionTitle.vue");
  return _sfc_setup$48 ? _sfc_setup$48(props, ctx) : void 0;
};
var SectionTitle = /* @__PURE__ */ _export_sfc(_sfc_main$48, [["ssrRender", _sfc_ssrRender$46]]);
const _sfc_main$47 = {
  props: {
    type: {
      type: String,
      default: "submit"
    }
  }
};
function _sfc_ssrRender$45(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    type: $props.type,
    class: "btn"
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$47 = _sfc_main$47.setup;
_sfc_main$47.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Button.vue");
  return _sfc_setup$47 ? _sfc_setup$47(props, ctx) : void 0;
};
var JetButton = /* @__PURE__ */ _export_sfc(_sfc_main$47, [["ssrRender", _sfc_ssrRender$45]]);
const _sfc_main$46 = {
  props: {
    type: {
      type: String,
      default: "button"
    }
  }
};
function _sfc_ssrRender$44(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    type: $props.type,
    class: "btn btn-secondary"
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$46 = _sfc_main$46.setup;
_sfc_main$46.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/SecondaryButton.vue");
  return _sfc_setup$46 ? _sfc_setup$46(props, ctx) : void 0;
};
var JetSecondaryButton = /* @__PURE__ */ _export_sfc(_sfc_main$46, [["ssrRender", _sfc_ssrRender$44]]);
const _sfc_main$45 = {
  props: {
    type: {
      type: String,
      default: "button"
    }
  }
};
function _sfc_ssrRender$43(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    type: $props.type,
    class: "btn btn-error"
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$45 = _sfc_main$45.setup;
_sfc_main$45.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/DangerButton.vue");
  return _sfc_setup$45 ? _sfc_setup$45(props, ctx) : void 0;
};
var JetDangerButton = /* @__PURE__ */ _export_sfc(_sfc_main$45, [["ssrRender", _sfc_ssrRender$43]]);
const _sfc_main$44 = {
  props: ["modelValue"],
  emits: ["update:modelValue"],
  methods: {
    focus() {
      this.$refs.input.focus();
    }
  }
};
function _sfc_ssrRender$42(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  let _temp0;
  _push(`<textarea${serverRenderer.ssrRenderAttrs(_temp0 = vue.mergeProps({
    class: "textarea textarea-bordered",
    value: $props.modelValue,
    ref: "input"
  }, _attrs), "textarea")}>${serverRenderer.ssrInterpolate("value" in _temp0 ? _temp0.value : "")}</textarea>`);
}
const _sfc_setup$44 = _sfc_main$44.setup;
_sfc_main$44.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Forms/TextAreaInput.vue");
  return _sfc_setup$44 ? _sfc_setup$44(props, ctx) : void 0;
};
var TextAreaInput = /* @__PURE__ */ _export_sfc(_sfc_main$44, [["ssrRender", _sfc_ssrRender$42]]);
const _sfc_main$43 = {
  components: {
    Listbox: vue$1.Listbox,
    ListboxButton: vue$1.ListboxButton,
    ListboxLabel: vue$1.ListboxLabel,
    ListboxOption: vue$1.ListboxOption,
    ListboxOptions: vue$1.ListboxOptions,
    CheckIcon: solid.CheckIcon,
    SelectorIcon: solid.SelectorIcon
  },
  props: {
    items: Array,
    selectedItem: Object | Boolean,
    labelValue: { type: String, default: "Select Option" },
    showLabel: { type: Boolean, default: true },
    nameValue: { type: String, default: "name" }
  },
  data: function() {
    return {
      selected: this.selectedItem
    };
  },
  watch: {
    selectedItem() {
      this.selected = this.selectedItem;
    }
  }
};
function _sfc_ssrRender$41(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Listbox = vue.resolveComponent("Listbox");
  const _component_ListboxLabel = vue.resolveComponent("ListboxLabel");
  const _component_ListboxButton = vue.resolveComponent("ListboxButton");
  const _component_SelectorIcon = vue.resolveComponent("SelectorIcon");
  const _component_ListboxOptions = vue.resolveComponent("ListboxOptions");
  const _component_ListboxOption = vue.resolveComponent("ListboxOption");
  const _component_CheckIcon = vue.resolveComponent("CheckIcon");
  _push(serverRenderer.ssrRenderComponent(_component_Listbox, vue.mergeProps({
    as: "div",
    class: "form-control",
    modelValue: _ctx.selected,
    "onUpdate:modelValue": ($event) => _ctx.selected = $event
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($props.showLabel) {
          _push2(serverRenderer.ssrRenderComponent(_component_ListboxLabel, { class: "label" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<span class="label-text"${_scopeId2}>${serverRenderer.ssrInterpolate($props.labelValue)}</span>`);
              } else {
                return [
                  vue.createVNode("span", { class: "label-text" }, vue.toDisplayString($props.labelValue), 1)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="relative w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_ListboxButton, { class: "input input-bordered w-full text-left" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (_ctx.selected) {
                _push3(`<span${_scopeId2}>${serverRenderer.ssrInterpolate(_ctx.selected[$props.nameValue])}</span>`);
              } else {
                _push3(`<span${_scopeId2}>Select</span>`);
              }
              _push3(`<span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SelectorIcon, {
                class: "h-5 w-5 text-gray-400",
                "aria-hidden": "true"
              }, null, _parent3, _scopeId2));
              _push3(`</span>`);
            } else {
              return [
                _ctx.selected ? (vue.openBlock(), vue.createBlock("span", { key: 0 }, vue.toDisplayString(_ctx.selected[$props.nameValue]), 1)) : (vue.openBlock(), vue.createBlock("span", { key: 1 }, "Select")),
                vue.createVNode("span", { class: "absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none" }, [
                  vue.createVNode(_component_SelectorIcon, {
                    class: "h-5 w-5 text-gray-400",
                    "aria-hidden": "true"
                  })
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_ListboxOptions, { class: "absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_ListboxOption, { as: "template" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<li class="text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9"${_scopeId3}><span class="font-normal block truncate"${_scopeId3}> Clear selected </span></li>`);
                  } else {
                    return [
                      vue.createVNode("li", { class: "text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9" }, [
                        vue.createVNode("span", { class: "font-normal block truncate" }, " Clear selected ")
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<!--[-->`);
              serverRenderer.ssrRenderList($props.items, (item) => {
                _push3(serverRenderer.ssrRenderComponent(_component_ListboxOption, {
                  as: "template",
                  key: item.id,
                  value: item
                }, {
                  default: vue.withCtx(({ active, selected }, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`<li class="${serverRenderer.ssrRenderClass([
                        active ? "text-white bg-gray-600" : "text-gray-900",
                        "cursor-default select-none relative py-2 pl-3 pr-9"
                      ])}"${_scopeId3}><span class="${serverRenderer.ssrRenderClass([
                        selected ? "font-semibold" : "font-normal",
                        "block truncate"
                      ])}"${_scopeId3}>${serverRenderer.ssrInterpolate(item[$props.nameValue])}</span>`);
                      if (selected) {
                        _push4(`<span class="${serverRenderer.ssrRenderClass([
                          active ? "text-white" : "text-gray-600",
                          "absolute inset-y-0 right-0 flex items-center pr-4"
                        ])}"${_scopeId3}>`);
                        _push4(serverRenderer.ssrRenderComponent(_component_CheckIcon, {
                          class: "h-5 w-5",
                          "aria-hidden": "true"
                        }, null, _parent4, _scopeId3));
                        _push4(`</span>`);
                      } else {
                        _push4(`<!---->`);
                      }
                      _push4(`</li>`);
                    } else {
                      return [
                        vue.createVNode("li", {
                          class: [
                            active ? "text-white bg-gray-600" : "text-gray-900",
                            "cursor-default select-none relative py-2 pl-3 pr-9"
                          ]
                        }, [
                          vue.createVNode("span", {
                            class: [
                              selected ? "font-semibold" : "font-normal",
                              "block truncate"
                            ]
                          }, vue.toDisplayString(item[$props.nameValue]), 3),
                          selected ? (vue.openBlock(), vue.createBlock("span", {
                            key: 0,
                            class: [
                              active ? "text-white" : "text-gray-600",
                              "absolute inset-y-0 right-0 flex items-center pr-4"
                            ]
                          }, [
                            vue.createVNode(_component_CheckIcon, {
                              class: "h-5 w-5",
                              "aria-hidden": "true"
                            })
                          ], 2)) : vue.createCommentVNode("", true)
                        ], 2)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
              });
              _push3(`<!--]-->`);
            } else {
              return [
                vue.createVNode(_component_ListboxOption, { as: "template" }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("li", { class: "text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9" }, [
                      vue.createVNode("span", { class: "font-normal block truncate" }, " Clear selected ")
                    ])
                  ]),
                  _: 1
                }),
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.items, (item) => {
                  return vue.openBlock(), vue.createBlock(_component_ListboxOption, {
                    as: "template",
                    key: item.id,
                    value: item
                  }, {
                    default: vue.withCtx(({ active, selected }) => [
                      vue.createVNode("li", {
                        class: [
                          active ? "text-white bg-gray-600" : "text-gray-900",
                          "cursor-default select-none relative py-2 pl-3 pr-9"
                        ]
                      }, [
                        vue.createVNode("span", {
                          class: [
                            selected ? "font-semibold" : "font-normal",
                            "block truncate"
                          ]
                        }, vue.toDisplayString(item[$props.nameValue]), 3),
                        selected ? (vue.openBlock(), vue.createBlock("span", {
                          key: 0,
                          class: [
                            active ? "text-white" : "text-gray-600",
                            "absolute inset-y-0 right-0 flex items-center pr-4"
                          ]
                        }, [
                          vue.createVNode(_component_CheckIcon, {
                            class: "h-5 w-5",
                            "aria-hidden": "true"
                          })
                        ], 2)) : vue.createCommentVNode("", true)
                      ], 2)
                    ]),
                    _: 2
                  }, 1032, ["value"]);
                }), 128))
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          $props.showLabel ? (vue.openBlock(), vue.createBlock(_component_ListboxLabel, {
            key: 0,
            class: "label"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode("span", { class: "label-text" }, vue.toDisplayString($props.labelValue), 1)
            ]),
            _: 1
          })) : vue.createCommentVNode("", true),
          vue.createVNode("div", { class: "relative w-full" }, [
            vue.createVNode(_component_ListboxButton, { class: "input input-bordered w-full text-left" }, {
              default: vue.withCtx(() => [
                _ctx.selected ? (vue.openBlock(), vue.createBlock("span", { key: 0 }, vue.toDisplayString(_ctx.selected[$props.nameValue]), 1)) : (vue.openBlock(), vue.createBlock("span", { key: 1 }, "Select")),
                vue.createVNode("span", { class: "absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none" }, [
                  vue.createVNode(_component_SelectorIcon, {
                    class: "h-5 w-5 text-gray-400",
                    "aria-hidden": "true"
                  })
                ])
              ]),
              _: 1
            }),
            vue.createVNode(vue.Transition, {
              "leave-active-class": "transition ease-in duration-100",
              "leave-from-class": "opacity-100",
              "leave-to-class": "opacity-0"
            }, {
              default: vue.withCtx(() => [
                vue.createVNode(_component_ListboxOptions, { class: "absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm" }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_ListboxOption, { as: "template" }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("li", { class: "text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9" }, [
                          vue.createVNode("span", { class: "font-normal block truncate" }, " Clear selected ")
                        ])
                      ]),
                      _: 1
                    }),
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.items, (item) => {
                      return vue.openBlock(), vue.createBlock(_component_ListboxOption, {
                        as: "template",
                        key: item.id,
                        value: item
                      }, {
                        default: vue.withCtx(({ active, selected }) => [
                          vue.createVNode("li", {
                            class: [
                              active ? "text-white bg-gray-600" : "text-gray-900",
                              "cursor-default select-none relative py-2 pl-3 pr-9"
                            ]
                          }, [
                            vue.createVNode("span", {
                              class: [
                                selected ? "font-semibold" : "font-normal",
                                "block truncate"
                              ]
                            }, vue.toDisplayString(item[$props.nameValue]), 3),
                            selected ? (vue.openBlock(), vue.createBlock("span", {
                              key: 0,
                              class: [
                                active ? "text-white" : "text-gray-600",
                                "absolute inset-y-0 right-0 flex items-center pr-4"
                              ]
                            }, [
                              vue.createVNode(_component_CheckIcon, {
                                class: "h-5 w-5",
                                "aria-hidden": "true"
                              })
                            ], 2)) : vue.createCommentVNode("", true)
                          ], 2)
                        ]),
                        _: 2
                      }, 1032, ["value"]);
                    }), 128))
                  ]),
                  _: 1
                })
              ]),
              _: 1
            })
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$43 = _sfc_main$43.setup;
_sfc_main$43.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Forms/SelectBox.vue");
  return _sfc_setup$43 ? _sfc_setup$43(props, ctx) : void 0;
};
var SelectBox = /* @__PURE__ */ _export_sfc(_sfc_main$43, [["ssrRender", _sfc_ssrRender$41]]);
const _sfc_main$42 = {
  components: {
    JetSectionTitle: SectionTitle
  },
  props: {
    showTitleBorder: {
      type: Boolean,
      default: true
    },
    link: {
      type: String,
      default: null
    }
  },
  computed: {
    hasActions() {
      return !!this.$slots.actions;
    },
    hasTitle() {
      return !!this.$slots.title;
    }
  }
};
function _sfc_ssrRender$40(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><div class="${serverRenderer.ssrRenderClass([
    $options.hasActions ? "sm:rounded-tl-md sm:rounded-tr-md" : "sm:rounded-md",
    "px-4 py-5 bg-white sm:p-6 shadow"
  ])}">`);
  if ($options.hasTitle) {
    _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, {
      class: "mb-4",
      showBorder: $props.showTitleBorder
    }, {
      title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "title")
          ];
        }
      }),
      description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "description", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "description")
          ];
        }
      }),
      aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "aside", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "aside")
          ];
        }
      }),
      _: 3
    }, _parent));
  } else {
    _push(`<!---->`);
  }
  _push(`<div class="grid gap-4">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
  if ($options.hasActions) {
    _push(`<div class="flex items-center justify-end px-4 py-3 bg-gray-50 text-right sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "actions", {}, null, _push, _parent);
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$42 = _sfc_main$42.setup;
_sfc_main$42.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/DetailsSection.vue");
  return _sfc_setup$42 ? _sfc_setup$42(props, ctx) : void 0;
};
var DetailsSection = /* @__PURE__ */ _export_sfc(_sfc_main$42, [["ssrRender", _sfc_ssrRender$40]]);
const _sfc_main$41 = {
  props: {
    modelValue: {
      type: [Number, String],
      default: 0
    }
  },
  emits: ["update:modelValue"],
  data() {
    return {
      isInputFocused: false
    };
  },
  computed: {
    displayValue: {
      get: function() {
        var _a;
        if (this.isInputFocused) {
          return (_a = this.modelValue) == null ? void 0 : _a.toString();
        } else {
          return this.modelValue ? this.formatDecimal(this.modelValue) : 0;
        }
      },
      set: function(modifiedValue) {
        let newValue = parseFloat(
          modifiedValue.replace(/[^\d\.]/g, "")
        );
        if (isNaN(newValue)) {
          newValue = 0;
        }
        this.$emit("update:modelValue", newValue);
      }
    }
  },
  methods: {
    formatDecimal(value) {
      return parseFloat(value).toFixed(2);
    }
  }
};
function _sfc_ssrRender$3$(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_input = vue.resolveComponent("jet-input");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "relative" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_input, vue.mergeProps({
    type: "number",
    modelValue: $options.displayValue,
    "onUpdate:modelValue": ($event) => $options.displayValue = $event,
    onFocus: ($event) => $data.isInputFocused = true,
    onBlur: ($event) => $data.isInputFocused = false
  }, _ctx.$attrs, {
    ref: "input",
    class: "pl-6 w-full"
  }), null, _parent));
  _push(`<div class="absolute top-0 bottom-0 left-0 pl-2 flex items-center"> $ </div></div>`);
}
const _sfc_setup$41 = _sfc_main$41.setup;
_sfc_main$41.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Forms/MoneyInput.vue");
  return _sfc_setup$41 ? _sfc_setup$41(props, ctx) : void 0;
};
var MoneyInput = /* @__PURE__ */ _export_sfc(_sfc_main$41, [["ssrRender", _sfc_ssrRender$3$]]);
const _sfc_main$40 = {
  props: {
    modelValue: {
      type: [Number, String],
      default: 0
    }
  },
  emits: ["update:modelValue"],
  data() {
    return {
      isInputFocused: false
    };
  },
  computed: {
    displayValue: {
      get: function() {
        var _a;
        if (this.isInputFocused) {
          return (_a = this.modelValue) == null ? void 0 : _a.toString();
        } else {
          return this.modelValue ? this.formatDecimal(this.modelValue) : 0;
        }
      },
      set: function(modifiedValue) {
        let newValue = parseFloat(
          modifiedValue.replace(/[^\d\.]/g, "")
        );
        if (isNaN(newValue)) {
          newValue = 0;
        }
        this.$emit("update:modelValue", newValue);
      }
    }
  },
  methods: {
    formatDecimal(value) {
      return parseFloat(value).toFixed(2);
    }
  }
};
function _sfc_ssrRender$3_(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_input = vue.resolveComponent("jet-input");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "relative" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_input, vue.mergeProps({
    type: "number",
    modelValue: $options.displayValue,
    "onUpdate:modelValue": ($event) => $options.displayValue = $event,
    onFocus: ($event) => $data.isInputFocused = true,
    onBlur: ($event) => $data.isInputFocused = false
  }, _ctx.$attrs, {
    ref: "input",
    class: "pr-6 w-full"
  }), null, _parent));
  _push(`<div class="absolute top-0 bottom-0 right-0 pr-2 flex items-center"> % </div></div>`);
}
const _sfc_setup$40 = _sfc_main$40.setup;
_sfc_main$40.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Forms/PercentageInput.vue");
  return _sfc_setup$40 ? _sfc_setup$40(props, ctx) : void 0;
};
var PercentageInput = /* @__PURE__ */ _export_sfc(_sfc_main$40, [["ssrRender", _sfc_ssrRender$3_]]);
createServer__default["default"](
  (page) => inertiaVue3.createInertiaApp({
    page,
    render: serverRenderer$1.renderToString,
    resolve: (name) => resolvePageComponent(
      `./Pages/${name}.vue`,
      { "./Pages/Dashboard.vue": () => Promise.resolve().then(function() {
        return Dashboard$1;
      }), "./Pages/PrivacyPolicy.vue": () => Promise.resolve().then(function() {
        return PrivacyPolicy$1;
      }), "./Pages/TermsOfService.vue": () => Promise.resolve().then(function() {
        return TermsOfService$1;
      }), "./Pages/Welcome.vue": () => Promise.resolve().then(function() {
        return Welcome$1;
      }), "./Pages/API/ApiTokenManager.vue": () => Promise.resolve().then(function() {
        return ApiTokenManager$1;
      }), "./Pages/API/Index.vue": () => Promise.resolve().then(function() {
        return Index$x;
      }), "./Pages/Auth/ConfirmPassword.vue": () => Promise.resolve().then(function() {
        return ConfirmPassword$1;
      }), "./Pages/Auth/ForgotPassword.vue": () => Promise.resolve().then(function() {
        return ForgotPassword$1;
      }), "./Pages/Auth/Login.vue": () => Promise.resolve().then(function() {
        return Login$1;
      }), "./Pages/Auth/Register.vue": () => Promise.resolve().then(function() {
        return Register$1;
      }), "./Pages/Auth/ResetPassword.vue": () => Promise.resolve().then(function() {
        return ResetPassword$1;
      }), "./Pages/Auth/TwoFactorChallenge.vue": () => Promise.resolve().then(function() {
        return TwoFactorChallenge$1;
      }), "./Pages/Auth/VerifyEmail.vue": () => Promise.resolve().then(function() {
        return VerifyEmail$1;
      }), "./Pages/Blocks/BlocksAside.vue": () => Promise.resolve().then(function() {
        return BlocksAside$1;
      }), "./Pages/Blocks/BlocksLayout.vue": () => Promise.resolve().then(function() {
        return BlocksLayout$1;
      }), "./Pages/Blocks/Create.vue": () => Promise.resolve().then(function() {
        return Create$p;
      }), "./Pages/Blocks/CreateBlockForm.vue": () => Promise.resolve().then(function() {
        return CreateBlockForm$1;
      }), "./Pages/Blocks/DeleteBlockForm.vue": () => Promise.resolve().then(function() {
        return DeleteBlockForm$1;
      }), "./Pages/Blocks/Edit.vue": () => Promise.resolve().then(function() {
        return Edit$3;
      }), "./Pages/Blocks/Index.vue": () => Promise.resolve().then(function() {
        return Index$v;
      }), "./Pages/Blocks/UpdateBlockForm.vue": () => Promise.resolve().then(function() {
        return UpdateBlockForm$1;
      }), "./Pages/Categories/CategoriesAside.vue": () => Promise.resolve().then(function() {
        return CategoriesAside$1;
      }), "./Pages/Categories/CategoriesLayout.vue": () => Promise.resolve().then(function() {
        return CategoriesLayout$1;
      }), "./Pages/Categories/Create.vue": () => Promise.resolve().then(function() {
        return Create$n;
      }), "./Pages/Categories/CreateCategoryForm.vue": () => Promise.resolve().then(function() {
        return CreateCategoryForm$1;
      }), "./Pages/Categories/DeleteCategoryForm.vue": () => Promise.resolve().then(function() {
        return DeleteCategoryForm$1;
      }), "./Pages/Categories/Index.vue": () => Promise.resolve().then(function() {
        return Index$t;
      }), "./Pages/Categories/Show.vue": () => Promise.resolve().then(function() {
        return Show$r;
      }), "./Pages/Categories/UpdateCategoryForm.vue": () => Promise.resolve().then(function() {
        return UpdateCategoryForm$1;
      }), "./Pages/ClearLocations/Index.vue": () => Promise.resolve().then(function() {
        return Index$r;
      }), "./Pages/Contacts/ContactAside.vue": () => Promise.resolve().then(function() {
        return ContactAside$1;
      }), "./Pages/Contacts/CreateContactComponent.vue": () => Promise.resolve().then(function() {
        return CreateContactComponent$1;
      }), "./Pages/Contacts/DeleteContactComponent.vue": () => Promise.resolve().then(function() {
        return DeleteContactComponent$1;
      }), "./Pages/Contacts/UpdateContactComponent.vue": () => Promise.resolve().then(function() {
        return UpdateContactComponent$1;
      }), "./Pages/Customers/ArchivedShow.vue": () => Promise.resolve().then(function() {
        return ArchivedShow$5;
      }), "./Pages/Customers/Create.vue": () => Promise.resolve().then(function() {
        return Create$l;
      }), "./Pages/Customers/CreateCustomerForm.vue": () => Promise.resolve().then(function() {
        return CreateCustomerForm$1;
      }), "./Pages/Customers/CustomersAside.vue": () => Promise.resolve().then(function() {
        return CustomersAside$1;
      }), "./Pages/Customers/CustomersLayout.vue": () => Promise.resolve().then(function() {
        return CustomersLayout$1;
      }), "./Pages/Customers/DeleteCustomerForm.vue": () => Promise.resolve().then(function() {
        return DeleteCustomerForm$1;
      }), "./Pages/Customers/Index.vue": () => Promise.resolve().then(function() {
        return Index$p;
      }), "./Pages/Customers/RestoreCustomerForm.vue": () => Promise.resolve().then(function() {
        return RestoreCustomerForm$1;
      }), "./Pages/Customers/Show.vue": () => Promise.resolve().then(function() {
        return Show$p;
      }), "./Pages/Customers/UpdateCustomerForm.vue": () => Promise.resolve().then(function() {
        return UpdateCustomerForm$1;
      }), "./Pages/Features/Create.vue": () => Promise.resolve().then(function() {
        return Create$j;
      }), "./Pages/Features/CreateFeatureForm.vue": () => Promise.resolve().then(function() {
        return CreateFeatureForm$1;
      }), "./Pages/Features/DeleteFeatureForm.vue": () => Promise.resolve().then(function() {
        return DeleteFeatureForm$1;
      }), "./Pages/Features/FeaturesAside.vue": () => Promise.resolve().then(function() {
        return FeaturesAside$1;
      }), "./Pages/Features/FeaturesLayout.vue": () => Promise.resolve().then(function() {
        return FeaturesLayout$1;
      }), "./Pages/Features/Index.vue": () => Promise.resolve().then(function() {
        return Index$n;
      }), "./Pages/Features/Show.vue": () => Promise.resolve().then(function() {
        return Show$n;
      }), "./Pages/Features/UpdateFeatureForm.vue": () => Promise.resolve().then(function() {
        return UpdateFeatureForm$1;
      }), "./Pages/Inventory/Index.vue": () => Promise.resolve().then(function() {
        return Index$l;
      }), "./Pages/Inventory/Show.vue": () => Promise.resolve().then(function() {
        return Show$l;
      }), "./Pages/NurseryLocations/Create.vue": () => Promise.resolve().then(function() {
        return Create$h;
      }), "./Pages/NurseryLocations/CreateLocationForm.vue": () => Promise.resolve().then(function() {
        return CreateLocationForm$1;
      }), "./Pages/NurseryLocations/DeleteLocationForm.vue": () => Promise.resolve().then(function() {
        return DeleteLocationForm$1;
      }), "./Pages/NurseryLocations/Edit.vue": () => Promise.resolve().then(function() {
        return Edit$1;
      }), "./Pages/NurseryLocations/Index.vue": () => Promise.resolve().then(function() {
        return Index$j;
      }), "./Pages/NurseryLocations/LocationDetails.vue": () => Promise.resolve().then(function() {
        return LocationDetails$1;
      }), "./Pages/NurseryLocations/LocationsAside.vue": () => Promise.resolve().then(function() {
        return LocationsAside$1;
      }), "./Pages/NurseryLocations/LocationsLayout.vue": () => Promise.resolve().then(function() {
        return LocationsLayout$1;
      }), "./Pages/NurseryLocations/Show.vue": () => Promise.resolve().then(function() {
        return Show$j;
      }), "./Pages/NurseryLocations/UpdateLocationForm.vue": () => Promise.resolve().then(function() {
        return UpdateLocationForm$1;
      }), "./Pages/Orders/Create.vue": () => Promise.resolve().then(function() {
        return Create$f;
      }), "./Pages/Orders/Index.vue": () => Promise.resolve().then(function() {
        return Index$h;
      }), "./Pages/Orders/OrdersLayout.vue": () => Promise.resolve().then(function() {
        return OrdersLayout$1;
      }), "./Pages/Orders/Show.vue": () => Promise.resolve().then(function() {
        return Show$h;
      }), "./Pages/PriceLevels/Create.vue": () => Promise.resolve().then(function() {
        return Create$d;
      }), "./Pages/PriceLevels/CreatePriceLevelForm.vue": () => Promise.resolve().then(function() {
        return CreatePriceLevelForm;
      }), "./Pages/PriceLevels/DeletePriceLevelForm.vue": () => Promise.resolve().then(function() {
        return DeletePriceLevelForm$1;
      }), "./Pages/PriceLevels/Index.vue": () => Promise.resolve().then(function() {
        return Index$f;
      }), "./Pages/PriceLevels/PriceLevelsAside.vue": () => Promise.resolve().then(function() {
        return PriceLevelsAside$1;
      }), "./Pages/PriceLevels/PriceLevelsLayout.vue": () => Promise.resolve().then(function() {
        return PriceLevelsLayout$1;
      }), "./Pages/PriceLevels/Show.vue": () => Promise.resolve().then(function() {
        return Show$f;
      }), "./Pages/PriceLevels/UpdatePriceLevelForm.vue": () => Promise.resolve().then(function() {
        return UpdatePriceLevelForm$1;
      }), "./Pages/Pricing/CreatePrice.vue": () => Promise.resolve().then(function() {
        return CreatePrice$1;
      }), "./Pages/Pricing/DeletePrice.vue": () => Promise.resolve().then(function() {
        return DeletePrice$1;
      }), "./Pages/Pricing/PriceTable.vue": () => Promise.resolve().then(function() {
        return PriceTable$1;
      }), "./Pages/Pricing/ProductPricing.vue": () => Promise.resolve().then(function() {
        return ProductPricing$1;
      }), "./Pages/Pricing/UpdatePrice.vue": () => Promise.resolve().then(function() {
        return UpdatePrice$1;
      }), "./Pages/Products/ArchivedShow.vue": () => Promise.resolve().then(function() {
        return ArchivedShow$3;
      }), "./Pages/Products/CategorySelector.vue": () => Promise.resolve().then(function() {
        return CategorySelector$1;
      }), "./Pages/Products/Create.vue": () => Promise.resolve().then(function() {
        return Create$b;
      }), "./Pages/Products/CreateProductForm.vue": () => Promise.resolve().then(function() {
        return CreateProductForm$1;
      }), "./Pages/Products/DeleteProductForm.vue": () => Promise.resolve().then(function() {
        return DeleteProductForm$1;
      }), "./Pages/Products/Index.vue": () => Promise.resolve().then(function() {
        return Index$d;
      }), "./Pages/Products/PlantFeatures.vue": () => Promise.resolve().then(function() {
        return PlantFeatures$1;
      }), "./Pages/Products/ProductsAside.vue": () => Promise.resolve().then(function() {
        return ProductsAside$1;
      }), "./Pages/Products/ProductsLayout.vue": () => Promise.resolve().then(function() {
        return ProductsLayout$1;
      }), "./Pages/Products/RestoreProductForm.vue": () => Promise.resolve().then(function() {
        return RestoreProductForm$1;
      }), "./Pages/Products/Show.vue": () => Promise.resolve().then(function() {
        return Show$d;
      }), "./Pages/Products/UpdateProductForm.vue": () => Promise.resolve().then(function() {
        return UpdateProductForm$1;
      }), "./Pages/Profile/DeleteUserForm.vue": () => Promise.resolve().then(function() {
        return DeleteUserForm$1;
      }), "./Pages/Profile/LogoutOtherBrowserSessionsForm.vue": () => Promise.resolve().then(function() {
        return LogoutOtherBrowserSessionsForm$1;
      }), "./Pages/Profile/Show.vue": () => Promise.resolve().then(function() {
        return Show$b;
      }), "./Pages/Profile/TwoFactorAuthenticationForm.vue": () => Promise.resolve().then(function() {
        return TwoFactorAuthenticationForm$1;
      }), "./Pages/Profile/UpdatePasswordForm.vue": () => Promise.resolve().then(function() {
        return UpdatePasswordForm$1;
      }), "./Pages/Profile/UpdateProfileInformationForm.vue": () => Promise.resolve().then(function() {
        return UpdateProfileInformationForm$1;
      }), "./Pages/Purchases/Create.vue": () => Promise.resolve().then(function() {
        return Create$9;
      }), "./Pages/Purchases/Index.vue": () => Promise.resolve().then(function() {
        return Index$b;
      }), "./Pages/Purchases/PurchasesLayout.vue": () => Promise.resolve().then(function() {
        return PurchasesLayout$1;
      }), "./Pages/Purchases/Show.vue": () => Promise.resolve().then(function() {
        return Show$9;
      }), "./Pages/Quotes/Create.vue": () => Promise.resolve().then(function() {
        return Create$7;
      }), "./Pages/Quotes/Index.vue": () => Promise.resolve().then(function() {
        return Index$9;
      }), "./Pages/Quotes/QuotesLayout.vue": () => Promise.resolve().then(function() {
        return QuotesLayout$1;
      }), "./Pages/Quotes/Show.vue": () => Promise.resolve().then(function() {
        return Show$7;
      }), "./Pages/ReprintQueue/Index.vue": () => Promise.resolve().then(function() {
        return Index$7;
      }), "./Pages/ReprintQueue/QueueLayout.vue": () => Promise.resolve().then(function() {
        return QueueLayout$1;
      }), "./Pages/Sizes/Create.vue": () => Promise.resolve().then(function() {
        return Create$5;
      }), "./Pages/Sizes/CreateSizeForm.vue": () => Promise.resolve().then(function() {
        return CreateSizeForm$1;
      }), "./Pages/Sizes/DeleteSizeComponent.vue": () => Promise.resolve().then(function() {
        return DeleteSizeComponent$1;
      }), "./Pages/Sizes/Index.vue": () => Promise.resolve().then(function() {
        return Index$5;
      }), "./Pages/Sizes/SizeList.vue": () => Promise.resolve().then(function() {
        return SizeList$1;
      }), "./Pages/Sizes/UpdateSizeForm.vue": () => Promise.resolve().then(function() {
        return UpdateSizeForm$1;
      }), "./Pages/Teams/ConnectAccounting.vue": () => Promise.resolve().then(function() {
        return ConnectAccounting;
      }), "./Pages/Teams/Create.vue": () => Promise.resolve().then(function() {
        return Create$3;
      }), "./Pages/Teams/CreateTeamForm.vue": () => Promise.resolve().then(function() {
        return CreateTeamForm$1;
      }), "./Pages/Teams/DeleteTeamForm.vue": () => Promise.resolve().then(function() {
        return DeleteTeamForm$1;
      }), "./Pages/Teams/Show.vue": () => Promise.resolve().then(function() {
        return Show$5;
      }), "./Pages/Teams/TeamMemberManager.vue": () => Promise.resolve().then(function() {
        return TeamMemberManager$1;
      }), "./Pages/Teams/UpdateTeamForm.vue": () => Promise.resolve().then(function() {
        return UpdateTeamForm$1;
      }), "./Pages/Vendors/ArchivedShow.vue": () => Promise.resolve().then(function() {
        return ArchivedShow$1;
      }), "./Pages/Vendors/Create.vue": () => Promise.resolve().then(function() {
        return Create$1;
      }), "./Pages/Vendors/CreateVendorForm.vue": () => Promise.resolve().then(function() {
        return CreateVendorForm$1;
      }), "./Pages/Vendors/DeleteVendorForm.vue": () => Promise.resolve().then(function() {
        return DeleteVendorForm$1;
      }), "./Pages/Vendors/Index.vue": () => Promise.resolve().then(function() {
        return Index$3;
      }), "./Pages/Vendors/RestoreVendorForm.vue": () => Promise.resolve().then(function() {
        return RestoreVendorForm$1;
      }), "./Pages/Vendors/Show.vue": () => Promise.resolve().then(function() {
        return Show$3;
      }), "./Pages/Vendors/UpdateVendorForm.vue": () => Promise.resolve().then(function() {
        return UpdateVendorForm$1;
      }), "./Pages/Vendors/VendorsAside.vue": () => Promise.resolve().then(function() {
        return VendorsAside$1;
      }), "./Pages/Vendors/VendorsLayout.vue": () => Promise.resolve().then(function() {
        return VendorsLayout$1;
      }), "./Pages/View/Index.vue": () => Promise.resolve().then(function() {
        return Index$1;
      }), "./Pages/View/Show.vue": () => Promise.resolve().then(function() {
        return Show$1;
      }), "./Pages/View/ViewAside.vue": () => Promise.resolve().then(function() {
        return ViewAside$1;
      }), "./Pages/View/ViewLayout.vue": () => Promise.resolve().then(function() {
        return ViewLayout$1;
      }), "./Pages/Blocks/Places/BlockPlaces.vue": () => Promise.resolve().then(function() {
        return BlockPlaces$1;
      }), "./Pages/Blocks/Places/ChangeNumPlacesInRowForm.vue": () => Promise.resolve().then(function() {
        return ChangeNumPlacesInRowForm$1;
      }), "./Pages/Blocks/Places/CreatePlacesForm.vue": () => Promise.resolve().then(function() {
        return CreatePlacesForm$1;
      }), "./Pages/Inventory/Components/InventoryLineItem.vue": () => Promise.resolve().then(function() {
        return InventoryLineItem$1;
      }), "./Pages/Inventory/Components/InventoryList.vue": () => Promise.resolve().then(function() {
        return InventoryList$1;
      }), "./Pages/Inventory/Components/InventoryLocationUpdate.vue": () => Promise.resolve().then(function() {
        return InventoryLocationUpdate$1;
      }), "./Pages/Inventory/Components/InventoryQuantityUpdate.vue": () => Promise.resolve().then(function() {
        return InventoryQuantityUpdate$1;
      }), "./Pages/Inventory/Components/InventorySizeUpdate.vue": () => Promise.resolve().then(function() {
        return InventorySizeUpdate$1;
      }), "./Pages/Inventory/Components/InventoryView.vue": () => Promise.resolve().then(function() {
        return InventoryView$1;
      }), "./Pages/Inventory/Components/ReprintTag.vue": () => Promise.resolve().then(function() {
        return ReprintTag$1;
      }), "./Pages/Inventory/Components/SearchInventory.vue": () => Promise.resolve().then(function() {
        return SearchInventory$1;
      }), "./Pages/Orders/Components/ActionCard.vue": () => Promise.resolve().then(function() {
        return ActionCard$1;
      }), "./Pages/Orders/Components/CompanyOpenOrders.vue": () => Promise.resolve().then(function() {
        return CompanyOpenOrders$1;
      }), "./Pages/Orders/Components/CompletedOrdersCard.vue": () => Promise.resolve().then(function() {
        return CompletedOrdersCard$1;
      }), "./Pages/Orders/Components/ConvertSale.vue": () => Promise.resolve().then(function() {
        return ConvertSale$1;
      }), "./Pages/Orders/Components/DiscountCreate.vue": () => Promise.resolve().then(function() {
        return DiscountCreate;
      }), "./Pages/Orders/Components/DiscountDelete.vue": () => Promise.resolve().then(function() {
        return DiscountDelete$1;
      }), "./Pages/Orders/Components/DiscountEdit.vue": () => Promise.resolve().then(function() {
        return DiscountEdit;
      }), "./Pages/Orders/Components/DiscountItem.vue": () => Promise.resolve().then(function() {
        return DiscountItem$1;
      }), "./Pages/Orders/Components/Discounts.vue": () => Promise.resolve().then(function() {
        return Discounts$1;
      }), "./Pages/Orders/Components/InventoryAdd.vue": () => Promise.resolve().then(function() {
        return InventoryAdd$1;
      }), "./Pages/Orders/Components/InventoryDetail.vue": () => Promise.resolve().then(function() {
        return InventoryDetail$3;
      }), "./Pages/Orders/Components/InventoryItem.vue": () => Promise.resolve().then(function() {
        return InventoryItem$1;
      }), "./Pages/Orders/Components/InventoryMatchedList.vue": () => Promise.resolve().then(function() {
        return InventoryMatchedList$1;
      }), "./Pages/Orders/Components/ItemConfirmQuantity.vue": () => Promise.resolve().then(function() {
        return ItemConfirmQuantity$1;
      }), "./Pages/Orders/Components/ItemCreate.vue": () => Promise.resolve().then(function() {
        return ItemCreate;
      }), "./Pages/Orders/Components/ItemDelete.vue": () => Promise.resolve().then(function() {
        return ItemDelete;
      }), "./Pages/Orders/Components/ItemEdit.vue": () => Promise.resolve().then(function() {
        return ItemEdit;
      }), "./Pages/Orders/Components/ItemLine.vue": () => Promise.resolve().then(function() {
        return ItemLine;
      }), "./Pages/Orders/Components/Items.vue": () => Promise.resolve().then(function() {
        return Items;
      }), "./Pages/Orders/Components/LinkedQuoteCard.vue": () => Promise.resolve().then(function() {
        return LinkedQuoteCard$1;
      }), "./Pages/Orders/Components/OrderCreate.vue": () => Promise.resolve().then(function() {
        return OrderCreate$1;
      }), "./Pages/Orders/Components/OrderDelete.vue": () => Promise.resolve().then(function() {
        return OrderDelete$1;
      }), "./Pages/Orders/Components/OrderUpdate.vue": () => Promise.resolve().then(function() {
        return OrderUpdate$1;
      }), "./Pages/Orders/Components/OrdersList.vue": () => Promise.resolve().then(function() {
        return OrdersList$1;
      }), "./Pages/Orders/Components/OrdersTableList.vue": () => Promise.resolve().then(function() {
        return OrdersTableList$1;
      }), "./Pages/Orders/Components/OrdersView.vue": () => Promise.resolve().then(function() {
        return OrdersView;
      }), "./Pages/Orders/Components/ProductHoldItem.vue": () => Promise.resolve().then(function() {
        return ProductHoldItem$1;
      }), "./Pages/Orders/Components/ProductHoldView.vue": () => Promise.resolve().then(function() {
        return ProductHoldView$1;
      }), "./Pages/Orders/Components/QuoteHoldInventoryCheckmark.vue": () => Promise.resolve().then(function() {
        return QuoteHoldInventoryCheckmark$1;
      }), "./Pages/Orders/Components/RelatedOrdersCard.vue": () => Promise.resolve().then(function() {
        return RelatedOrdersCard$1;
      }), "./Pages/Orders/Components/Totals.vue": () => Promise.resolve().then(function() {
        return Totals$1;
      }), "./Pages/Products/Components/ProductDetails.vue": () => Promise.resolve().then(function() {
        return ProductDetails$1;
      }), "./Pages/Purchases/Components/AddPurchaseItemsToInventory.vue": () => Promise.resolve().then(function() {
        return AddPurchaseItemsToInventory$1;
      }), "./Pages/Purchases/Components/CreatePurchaseForm.vue": () => Promise.resolve().then(function() {
        return CreatePurchaseForm$1;
      }), "./Pages/Purchases/Components/CreatePurchaseItem.vue": () => Promise.resolve().then(function() {
        return CreatePurchaseItem$1;
      }), "./Pages/Purchases/Components/DeletePurchaseForm.vue": () => Promise.resolve().then(function() {
        return DeletePurchaseForm$1;
      }), "./Pages/Purchases/Components/DeletePurchaseItem.vue": () => Promise.resolve().then(function() {
        return DeletePurchaseItem$1;
      }), "./Pages/Purchases/Components/EditPurchaseItem.vue": () => Promise.resolve().then(function() {
        return EditPurchaseItem$1;
      }), "./Pages/Purchases/Components/PrintPurchaseItemsInventory.vue": () => Promise.resolve().then(function() {
        return PrintPurchaseItemsInventory$1;
      }), "./Pages/Purchases/Components/PurchaseItems.vue": () => Promise.resolve().then(function() {
        return PurchaseItems$1;
      }), "./Pages/Purchases/Components/PurchaseLineItem.vue": () => Promise.resolve().then(function() {
        return PurchaseLineItem$1;
      }), "./Pages/Purchases/Components/PurchasesAside.vue": () => Promise.resolve().then(function() {
        return PurchasesAside$1;
      }), "./Pages/Purchases/Components/RemoveItemFromInventory.vue": () => Promise.resolve().then(function() {
        return RemoveItemFromInventory$1;
      }), "./Pages/Purchases/Components/UpdatePurchaseForm.vue": () => Promise.resolve().then(function() {
        return UpdatePurchaseForm$1;
      }), "./Pages/Quotes/Components/ActiveQuotesCard.vue": () => Promise.resolve().then(function() {
        return ActiveQuotesCard$1;
      }), "./Pages/Quotes/Components/LinkedOrdersCard.vue": () => Promise.resolve().then(function() {
        return LinkedOrdersCard$1;
      }), "./Pages/ReprintQueue/Components/AddToQueue.vue": () => Promise.resolve().then(function() {
        return AddToQueue$1;
      }), "./Pages/ReprintQueue/Components/QueueItem.vue": () => Promise.resolve().then(function() {
        return QueueItem$1;
      }), "./Pages/ReprintQueue/Components/QueueView.vue": () => Promise.resolve().then(function() {
        return QueueView$1;
      }), "./Pages/ReprintQueue/Components/ReprintTagsButton.vue": () => Promise.resolve().then(function() {
        return ReprintTagsButton$1;
      }), "./Pages/View/Components/AvailabilitySection.vue": () => Promise.resolve().then(function() {
        return AvailabilitySection$1;
      }), "./Pages/View/Components/InventoryDetail.vue": () => Promise.resolve().then(function() {
        return InventoryDetail$1;
      }), "./Pages/View/Components/InventoryLocationsSection.vue": () => Promise.resolve().then(function() {
        return InventoryLocationsSection$1;
      }), "./Pages/View/Components/PricingSection.vue": () => Promise.resolve().then(function() {
        return PricingSection$1;
      }), "./Pages/View/Components/ProductOrdersSection.vue": () => Promise.resolve().then(function() {
        return ProductOrdersSection$1;
      }) }
    ),
    setup({ app, props, plugin }) {
      return vue.createSSRApp({ render: () => vue.h(app, props) }).use(plugin).mixin({
        components: {
          Link: inertiaVue3.Link,
          JetLabel,
          JetInput,
          JetInputError,
          JetCheckbox: JetCheckBox,
          JetSectionTitle: SectionTitle,
          JetButton,
          JetSecondaryButton,
          JetDangerButton,
          TextAreaInput,
          SelectBox,
          DetailsSection,
          MoneyInput,
          PercentageInput
        }
      }).mixin(date).mixin(money).mixin(popup).use(I, {
        ...page.props.ziggy,
        location: new URL(page.props.ziggy.location)
      });
    }
  })
);
const _sfc_main$3$ = {};
function _sfc_ssrRender$3Z(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "pb-2" }, _attrs))}><img src="/logos/awia-for-nurseries-zoomed.png" alt="Awia for Nurseries" class="h-12 w-auto"></div>`);
}
const _sfc_setup$3$ = _sfc_main$3$.setup;
_sfc_main$3$.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ApplicationMark.vue");
  return _sfc_setup$3$ ? _sfc_setup$3$(props, ctx) : void 0;
};
var JetApplicationMark = /* @__PURE__ */ _export_sfc(_sfc_main$3$, [["ssrRender", _sfc_ssrRender$3Z]]);
const _sfc_main$3_ = {
  data() {
    return {
      show: true
    };
  },
  computed: {
    style() {
      var _a;
      return ((_a = this.$page.props.jetstream.flash) == null ? void 0 : _a.bannerStyle) || "success";
    },
    requestDate() {
      return this.$page.props.requestDate;
    },
    message() {
      var _a;
      return ((_a = this.$page.props.jetstream.flash) == null ? void 0 : _a.banner) || "";
    }
  },
  methods: {
    hideBanner() {
      setTimeout(() => this.show = false, 4e3);
    }
  },
  watch: {
    requestDate() {
      this.show = true;
      this.hideBanner();
    }
  },
  mounted() {
    this.hideBanner();
  }
};
function _sfc_ssrRender$3Y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "fixed bottom-0 z-50 right-0 left-0 w-full" }, _attrs))}>`);
  if ($data.show && $options.message) {
    _push(`<div class="${serverRenderer.ssrRenderClass({
      "bg-green-500": $options.style == "success",
      "bg-red-700": $options.style == "danger"
    })}"><div class="py-2 px-3 sm:px-6 lg:px-8"><div class="flex items-center justify-between flex-wrap"><div class="w-0 flex-1 flex items-center min-w-0"><span class="${serverRenderer.ssrRenderClass([{
      "bg-green-600": $options.style == "success",
      "bg-red-600": $options.style == "danger"
    }, "flex p-2 rounded-lg"])}">`);
    if ($options.style == "success") {
      _push(`<svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>`);
    } else {
      _push(`<!---->`);
    }
    if ($options.style == "danger") {
      _push(`<svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</span><p class="ml-3 text-sm text-white truncate">${serverRenderer.ssrInterpolate($options.message)}</p></div><div class="flex-shrink-0 sm:ml-3"><button type="button" class="${serverRenderer.ssrRenderClass([{
      "hover:bg-green-600 focus:bg-green-600": $options.style == "success",
      "hover:bg-red-600 focus:bg-red-600": $options.style == "danger"
    }, "-mr-1 flex p-2 rounded-md focus:outline-none sm:-mr-2 transition"])}" aria-label="Dismiss"><svg class="h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg></button></div></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$3_ = _sfc_main$3_.setup;
_sfc_main$3_.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Banner.vue");
  return _sfc_setup$3_ ? _sfc_setup$3_(props, ctx) : void 0;
};
var JetBanner = /* @__PURE__ */ _export_sfc(_sfc_main$3_, [["ssrRender", _sfc_ssrRender$3Y]]);
const _sfc_main$3Z = {
  props: {
    align: {
      default: "right"
    },
    width: {
      default: "48"
    },
    contentClasses: {
      default: () => ["py-1", "bg-white"]
    }
  },
  setup() {
    let open = vue.ref(false);
    const closeOnEscape = (e2) => {
      if (open.value && e2.keyCode === 27) {
        open.value = false;
      }
    };
    vue.onMounted(() => document.addEventListener("keydown", closeOnEscape));
    vue.onUnmounted(() => document.removeEventListener("keydown", closeOnEscape));
    return {
      open
    };
  },
  computed: {
    widthClass() {
      return {
        "48": "w-48"
      }[this.width.toString()];
    },
    alignmentClasses() {
      if (this.align === "left") {
        return "origin-top-left left-0";
      } else if (this.align === "right") {
        return "origin-top-right right-0";
      } else {
        return "origin-top";
      }
    }
  }
};
function _sfc_ssrRender$3X(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "relative" }, _attrs))}><div>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "trigger", {}, null, _push, _parent);
  _push(`</div><div style="${serverRenderer.ssrRenderStyle($setup.open ? null : { display: "none" })}" class="fixed inset-0 z-40"></div><div style="${serverRenderer.ssrRenderStyle([
    $setup.open ? null : { display: "none" },
    { "display": "none" }
  ])}" class="${serverRenderer.ssrRenderClass([[$options.widthClass, $options.alignmentClasses], "absolute z-50 mt-2 rounded-md shadow-lg"])}"><div class="${serverRenderer.ssrRenderClass([$props.contentClasses, "rounded-md ring-1 ring-black ring-opacity-5"])}">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "content", {}, null, _push, _parent);
  _push(`</div></div></div>`);
}
const _sfc_setup$3Z = _sfc_main$3Z.setup;
_sfc_main$3Z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Dropdown.vue");
  return _sfc_setup$3Z ? _sfc_setup$3Z(props, ctx) : void 0;
};
var JetDropdown = /* @__PURE__ */ _export_sfc(_sfc_main$3Z, [["ssrRender", _sfc_ssrRender$3X]]);
const _sfc_main$3Y = {
  props: ["href", "as"]
};
function _sfc_ssrRender$3W(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = vue.resolveComponent("Link");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  if ($props.as == "button") {
    _push(`<button type="submit" class="block w-full px-4 py-2 text-sm leading-5 text-gray-700 text-left hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</button>`);
  } else if ($props.as == "a") {
    _push(`<a${serverRenderer.ssrRenderAttr("href", $props.href)} class="block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</a>`);
  } else {
    _push(serverRenderer.ssrRenderComponent(_component_Link, {
      href: $props.href,
      class: "block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition"
    }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "default")
          ];
        }
      }),
      _: 3
    }, _parent));
  }
  _push(`</div>`);
}
const _sfc_setup$3Y = _sfc_main$3Y.setup;
_sfc_main$3Y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/DropdownLink.vue");
  return _sfc_setup$3Y ? _sfc_setup$3Y(props, ctx) : void 0;
};
var JetDropdownLink = /* @__PURE__ */ _export_sfc(_sfc_main$3Y, [["ssrRender", _sfc_ssrRender$3W]]);
const _sfc_main$3X = {
  props: ["href", "active"],
  computed: {
    classes() {
      return this.active ? "inline-flex items-center px-1 pt-1 border-b-2 border-gray-400 text-sm  leading-5 text-gray-900 focus:outline-none focus:border-gray-700 transition" : "inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm leading-5 text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition";
    }
  }
};
function _sfc_ssrRender$3V(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = vue.resolveComponent("Link");
  _push(serverRenderer.ssrRenderComponent(_component_Link, vue.mergeProps({
    href: $props.href,
    class: $options.classes
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$3X = _sfc_main$3X.setup;
_sfc_main$3X.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/NavLink.vue");
  return _sfc_setup$3X ? _sfc_setup$3X(props, ctx) : void 0;
};
var JetNavLink = /* @__PURE__ */ _export_sfc(_sfc_main$3X, [["ssrRender", _sfc_ssrRender$3V]]);
const _sfc_main$3W = {
  props: ["active", "href", "as"],
  computed: {
    classes() {
      return this.active ? "block pl-3 pr-4 py-2 border-l-4 border-green-400 text-base text-green-700 bg-green-50 focus:outline-none focus:text-green-800 focus:bg-green-100 focus:border-green-700 transition" : "block pl-3 pr-4 py-2 border-l-4 border-transparent text-base text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 focus:outline-none focus:text-gray-800 focus:bg-gray-50 focus:border-gray-300 transition";
    }
  }
};
function _sfc_ssrRender$3U(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = vue.resolveComponent("Link");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  if ($props.as == "button") {
    _push(`<button class="${serverRenderer.ssrRenderClass([$options.classes, "w-full text-left"])}">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</button>`);
  } else {
    _push(serverRenderer.ssrRenderComponent(_component_Link, {
      href: $props.href,
      class: $options.classes
    }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "default")
          ];
        }
      }),
      _: 3
    }, _parent));
  }
  _push(`</div>`);
}
const _sfc_setup$3W = _sfc_main$3W.setup;
_sfc_main$3W.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ResponsiveNavLink.vue");
  return _sfc_setup$3W ? _sfc_setup$3W(props, ctx) : void 0;
};
var JetResponsiveNavLink = /* @__PURE__ */ _export_sfc(_sfc_main$3W, [["ssrRender", _sfc_ssrRender$3U]]);
const _sfc_main$3V = {
  props: ["href", "current"]
};
function _sfc_ssrRender$3T(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = vue.resolveComponent("Link");
  _push(serverRenderer.ssrRenderComponent(_component_Link, vue.mergeProps({
    href: $props.href,
    class: [
      $props.current ? "bg-gray-50" : "hover:bg-gray-50 hover:text-gray-900",
      "text-gray-600 text-large group flex items-center px-2 py-2 text-base rounded-md"
    ]
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$3V = _sfc_main$3V.setup;
_sfc_main$3V.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Links/NavLink.vue");
  return _sfc_setup$3V ? _sfc_setup$3V(props, ctx) : void 0;
};
var NavLink = /* @__PURE__ */ _export_sfc(_sfc_main$3V, [["ssrRender", _sfc_ssrRender$3T]]);
const _sfc_main$3U = {
  components: {
    Disclosure: vue$1.Disclosure,
    DisclosureButton: vue$1.DisclosureButton,
    DisclosurePanel: vue$1.DisclosurePanel
  },
  props: ["dropdown_text", "current"]
};
function _sfc_ssrRender$3S(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Disclosure = vue.resolveComponent("Disclosure");
  const _component_DisclosureButton = vue.resolveComponent("DisclosureButton");
  const _component_DisclosurePanel = vue.resolveComponent("DisclosurePanel");
  _push(serverRenderer.ssrRenderComponent(_component_Disclosure, vue.mergeProps({
    as: "div",
    class: "space-y-1",
    defaultOpen: $props.current
  }, _attrs), {
    default: vue.withCtx(({ open }, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_DisclosureButton, {
          class: [
            $props.current ? "bg-gray-50" : "hover:bg-gray-50 hover:text-gray-900",
            "text-gray-600 text-large group flex justify-between items-center px-2 py-2 text-base rounded-md w-full"
          ]
        }, {
          default: vue.withCtx((_, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${serverRenderer.ssrInterpolate($props.dropdown_text)} <svg class="${serverRenderer.ssrRenderClass([
                open ? "text-gray-400 rotate-90" : "text-gray-300",
                "mr-2 flex-shrink-0 h-5 w-5 transform group-hover:text-gray-400 transition-colors ease-in-out duration-150"
              ])}" viewBox="0 0 20 20" aria-hidden="true"${_scopeId2}><path d="M6 6L14 10L6 14V6Z" fill="currentColor"${_scopeId2}></path></svg>`);
            } else {
              return [
                vue.createTextVNode(vue.toDisplayString($props.dropdown_text) + " ", 1),
                (vue.openBlock(), vue.createBlock("svg", {
                  class: [
                    open ? "text-gray-400 rotate-90" : "text-gray-300",
                    "mr-2 flex-shrink-0 h-5 w-5 transform group-hover:text-gray-400 transition-colors ease-in-out duration-150"
                  ],
                  viewBox: "0 0 20 20",
                  "aria-hidden": "true"
                }, [
                  vue.createVNode("path", {
                    d: "M6 6L14 10L6 14V6Z",
                    fill: "currentColor"
                  })
                ], 2))
              ];
            }
          }),
          _: 2
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_DisclosurePanel, { class: "space-y-1 pl-4" }, {
          default: vue.withCtx((_, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "default")
              ];
            }
          }),
          _: 2
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_DisclosureButton, {
            class: [
              $props.current ? "bg-gray-50" : "hover:bg-gray-50 hover:text-gray-900",
              "text-gray-600 text-large group flex justify-between items-center px-2 py-2 text-base rounded-md w-full"
            ]
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(vue.toDisplayString($props.dropdown_text) + " ", 1),
              (vue.openBlock(), vue.createBlock("svg", {
                class: [
                  open ? "text-gray-400 rotate-90" : "text-gray-300",
                  "mr-2 flex-shrink-0 h-5 w-5 transform group-hover:text-gray-400 transition-colors ease-in-out duration-150"
                ],
                viewBox: "0 0 20 20",
                "aria-hidden": "true"
              }, [
                vue.createVNode("path", {
                  d: "M6 6L14 10L6 14V6Z",
                  fill: "currentColor"
                })
              ], 2))
            ]),
            _: 2
          }, 1032, ["class"]),
          vue.createVNode(_component_DisclosurePanel, { class: "space-y-1 pl-4" }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          })
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$3U = _sfc_main$3U.setup;
_sfc_main$3U.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/SidebarDropdown.vue");
  return _sfc_setup$3U ? _sfc_setup$3U(props, ctx) : void 0;
};
var SidebarDropdown = /* @__PURE__ */ _export_sfc(_sfc_main$3U, [["ssrRender", _sfc_ssrRender$3S]]);
const _sfc_main$3T = {
  components: {
    NavLink,
    SidebarDropdown
  }
};
function _sfc_ssrRender$3R(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_nav_link = vue.resolveComponent("nav-link");
  const _component_sidebar_dropdown = vue.resolveComponent("sidebar-dropdown");
  _push(`<nav${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "flex-1 px-2 bg-white space-y-1" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_nav_link, {
    href: _ctx.route("dashboard"),
    current: _ctx.route().current("dashboard")
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Dashboard`);
      } else {
        return [
          vue.createTextVNode("Dashboard")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_sidebar_dropdown, {
    dropdown_text: "Orders & Quotes",
    current: _ctx.route().current("orders.*") || _ctx.route().current("quotes.*")
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("orders.index"),
          current: _ctx.route().current("orders.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Orders`);
            } else {
              return [
                vue.createTextVNode("Orders")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("quotes.index"),
          current: _ctx.route().current("quotes.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Quotes`);
            } else {
              return [
                vue.createTextVNode("Quotes")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("orders.index"),
            current: _ctx.route().current("orders.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Orders")
            ]),
            _: 1
          }, 8, ["href", "current"]),
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("quotes.index"),
            current: _ctx.route().current("quotes.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Quotes")
            ]),
            _: 1
          }, 8, ["href", "current"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_sidebar_dropdown, {
    dropdown_text: "Customers",
    current: _ctx.route().current("customers.*") || _ctx.route().current("archived-customers.*") || _ctx.route().current("customer-price-levels.*")
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("customers.index"),
          current: _ctx.route().current("customers.*") || _ctx.route().current("archived-customers.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Customer Directory`);
            } else {
              return [
                vue.createTextVNode("Customer Directory")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("customer-price-levels.index"),
          current: _ctx.route().current("customer-price-levels.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Customer Price Levels`);
            } else {
              return [
                vue.createTextVNode("Customer Price Levels")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("customers.index"),
            current: _ctx.route().current("customers.*") || _ctx.route().current("archived-customers.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Customer Directory")
            ]),
            _: 1
          }, 8, ["href", "current"]),
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("customer-price-levels.index"),
            current: _ctx.route().current("customer-price-levels.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Customer Price Levels")
            ]),
            _: 1
          }, 8, ["href", "current"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_sidebar_dropdown, {
    dropdown_text: "Products & Pricing",
    current: _ctx.route().current("products.*") || _ctx.route().current("plants.*") || _ctx.route().current("features.*") || _ctx.route().current("categories.*") || _ctx.route().current("sizes.*")
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("products.index"),
          current: _ctx.route().current("products.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Products`);
            } else {
              return [
                vue.createTextVNode("Products")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("sizes.index"),
          current: _ctx.route().current("sizes.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Sizes`);
            } else {
              return [
                vue.createTextVNode("Sizes")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("categories.index"),
          current: _ctx.route().current("categories.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Categories`);
            } else {
              return [
                vue.createTextVNode("Categories")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("features.index"),
          current: _ctx.route().current("features.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Plant Features`);
            } else {
              return [
                vue.createTextVNode("Plant Features")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("products.index"),
            current: _ctx.route().current("products.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Products")
            ]),
            _: 1
          }, 8, ["href", "current"]),
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("sizes.index"),
            current: _ctx.route().current("sizes.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Sizes")
            ]),
            _: 1
          }, 8, ["href", "current"]),
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("categories.index"),
            current: _ctx.route().current("categories.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Categories")
            ]),
            _: 1
          }, 8, ["href", "current"]),
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("features.index"),
            current: _ctx.route().current("features.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Plant Features")
            ]),
            _: 1
          }, 8, ["href", "current"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_sidebar_dropdown, {
    dropdown_text: "Inventory In",
    current: _ctx.route().current("vendors.*") || _ctx.route().current("archived-vendors.*") || _ctx.route().current("purchases.*")
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("purchases.index"),
          current: _ctx.route().current("purchases.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Purchases`);
            } else {
              return [
                vue.createTextVNode("Purchases")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("vendors.index"),
          current: _ctx.route().current("vendors.*") || _ctx.route().current("archived-vendors.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Vendors`);
            } else {
              return [
                vue.createTextVNode("Vendors")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("purchases.index"),
            current: _ctx.route().current("purchases.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Purchases")
            ]),
            _: 1
          }, 8, ["href", "current"]),
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("vendors.index"),
            current: _ctx.route().current("vendors.*") || _ctx.route().current("archived-vendors.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Vendors")
            ]),
            _: 1
          }, 8, ["href", "current"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_sidebar_dropdown, {
    dropdown_text: "Locations",
    current: _ctx.route().current("locations.*") || _ctx.route().current("blocks.*")
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("locations.index"),
          current: _ctx.route().current("locations.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Nursery Locations`);
            } else {
              return [
                vue.createTextVNode("Nursery Locations")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("blocks.index"),
          current: _ctx.route().current("blocks.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Blocks`);
            } else {
              return [
                vue.createTextVNode("Blocks")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("locations.index"),
            current: _ctx.route().current("locations.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Nursery Locations")
            ]),
            _: 1
          }, 8, ["href", "current"]),
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("blocks.index"),
            current: _ctx.route().current("blocks.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Blocks")
            ]),
            _: 1
          }, 8, ["href", "current"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_sidebar_dropdown, {
    dropdown_text: "Inventory",
    current: _ctx.route().current("inventory.*") || _ctx.route().current("view.*") || _ctx.route().current("reprint-queue.*")
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("inventory.index"),
          current: _ctx.route().current("inventory.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Inventory Editor`);
            } else {
              return [
                vue.createTextVNode("Inventory Editor")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("view.index"),
          current: _ctx.route().current("view.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`View Inventory`);
            } else {
              return [
                vue.createTextVNode("View Inventory")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_nav_link, {
          href: _ctx.route("reprint-queue.index"),
          current: _ctx.route().current("reprint-queue.*")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Reprint Labels`);
            } else {
              return [
                vue.createTextVNode("Reprint Labels")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("inventory.index"),
            current: _ctx.route().current("inventory.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Inventory Editor")
            ]),
            _: 1
          }, 8, ["href", "current"]),
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("view.index"),
            current: _ctx.route().current("view.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("View Inventory")
            ]),
            _: 1
          }, 8, ["href", "current"]),
          vue.createVNode(_component_nav_link, {
            href: _ctx.route("reprint-queue.index"),
            current: _ctx.route().current("reprint-queue.*")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Reprint Labels")
            ]),
            _: 1
          }, 8, ["href", "current"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</nav>`);
}
const _sfc_setup$3T = _sfc_main$3T.setup;
_sfc_main$3T.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/SidebarNavlinks.vue");
  return _sfc_setup$3T ? _sfc_setup$3T(props, ctx) : void 0;
};
var SidebarNavlinks = /* @__PURE__ */ _export_sfc(_sfc_main$3T, [["ssrRender", _sfc_ssrRender$3R]]);
const _sfc_main$3S = {
  components: {
    Dialog: vue$1.Dialog,
    DialogOverlay: vue$1.DialogOverlay,
    Menu: vue$1.Menu,
    MenuButton: vue$1.MenuButton,
    MenuItem: vue$1.MenuItem,
    MenuItems: vue$1.MenuItems,
    TransitionChild: vue$1.TransitionChild,
    TransitionRoot: vue$1.TransitionRoot,
    BellIcon: outline.BellIcon,
    MenuAlt2Icon: outline.MenuAlt2Icon,
    SearchIcon: solid.SearchIcon,
    XIcon: outline.XIcon,
    JetApplicationMark,
    JetBanner,
    JetDropdown,
    JetDropdownLink,
    JetNavLink,
    JetResponsiveNavLink,
    SidebarNavlinks
  },
  data() {
    return {
      sidebarOpen: false
    };
  },
  methods: {
    switchToTeam(team) {
      this.$inertia.put(
        route("current-team.update"),
        {
          team_id: team.id
        },
        {
          preserveState: false
        }
      );
    },
    logout() {
      this.$inertia.post(route("logout"));
    }
  }
};
function _sfc_ssrRender$3Q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TransitionRoot = vue.resolveComponent("TransitionRoot");
  const _component_Dialog = vue.resolveComponent("Dialog");
  const _component_TransitionChild = vue.resolveComponent("TransitionChild");
  const _component_DialogOverlay = vue.resolveComponent("DialogOverlay");
  const _component_XIcon = vue.resolveComponent("XIcon");
  const _component_Link = vue.resolveComponent("Link");
  const _component_jet_application_mark = vue.resolveComponent("jet-application-mark");
  const _component_sidebar_navlinks = vue.resolveComponent("sidebar-navlinks");
  const _component_MenuAlt2Icon = vue.resolveComponent("MenuAlt2Icon");
  const _component_jet_dropdown = vue.resolveComponent("jet-dropdown");
  const _component_jet_dropdown_link = vue.resolveComponent("jet-dropdown-link");
  const _component_jet_banner = vue.resolveComponent("jet-banner");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "h-screen flex overflow-hidden bg-gray-50" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_TransitionRoot, {
    as: "template",
    show: $data.sidebarOpen
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_Dialog, {
          as: "div",
          static: "",
          class: "fixed inset-0 flex z-40 md:hidden",
          onClose: ($event) => $data.sidebarOpen = false,
          open: $data.sidebarOpen
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "transition-opacity ease-linear duration-300",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "transition-opacity ease-linear duration-300",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_DialogOverlay, { class: "fixed inset-0 bg-gray-600 bg-opacity-75" }, null, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_DialogOverlay, { class: "fixed inset-0 bg-gray-600 bg-opacity-75" })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "transition ease-in-out duration-300 transform",
                "enter-from": "-translate-x-full",
                "enter-to": "translate-x-0",
                leave: "transition ease-in-out duration-300 transform",
                "leave-from": "translate-x-0",
                "leave-to": "-translate-x-full"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white"${_scopeId3}>`);
                    _push4(serverRenderer.ssrRenderComponent(_component_TransitionChild, {
                      as: "template",
                      enter: "ease-in-out duration-300",
                      "enter-from": "opacity-0",
                      "enter-to": "opacity-100",
                      leave: "ease-in-out duration-300",
                      "leave-from": "opacity-100",
                      "leave-to": "opacity-0"
                    }, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="absolute top-0 right-0 -mr-12 pt-2"${_scopeId4}><button class="ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white"${_scopeId4}><span class="sr-only"${_scopeId4}>Close sidebar</span>`);
                          _push5(serverRenderer.ssrRenderComponent(_component_XIcon, {
                            class: "h-6 w-6 text-white",
                            "aria-hidden": "true"
                          }, null, _parent5, _scopeId4));
                          _push5(`</button></div>`);
                        } else {
                          return [
                            vue.createVNode("div", { class: "absolute top-0 right-0 -mr-12 pt-2" }, [
                              vue.createVNode("button", {
                                class: "ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white",
                                onClick: ($event) => $data.sidebarOpen = false
                              }, [
                                vue.createVNode("span", { class: "sr-only" }, "Close sidebar"),
                                vue.createVNode(_component_XIcon, {
                                  class: "h-6 w-6 text-white",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(`<div class="flex-shrink-0 flex items-center px-4"${_scopeId3}>`);
                    _push4(serverRenderer.ssrRenderComponent(_component_Link, {
                      href: _ctx.route("dashboard")
                    }, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(serverRenderer.ssrRenderComponent(_component_jet_application_mark, { class: "block h-9 w-auto" }, null, _parent5, _scopeId4));
                        } else {
                          return [
                            vue.createVNode(_component_jet_application_mark, { class: "block h-9 w-auto" })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(`</div><div class="mt-5 flex-1 h-0 overflow-y-auto"${_scopeId3}>`);
                    _push4(serverRenderer.ssrRenderComponent(_component_sidebar_navlinks, null, null, _parent4, _scopeId3));
                    _push4(`</div></div>`);
                  } else {
                    return [
                      vue.createVNode("div", { class: "relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white" }, [
                        vue.createVNode(_component_TransitionChild, {
                          as: "template",
                          enter: "ease-in-out duration-300",
                          "enter-from": "opacity-0",
                          "enter-to": "opacity-100",
                          leave: "ease-in-out duration-300",
                          "leave-from": "opacity-100",
                          "leave-to": "opacity-0"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createVNode("div", { class: "absolute top-0 right-0 -mr-12 pt-2" }, [
                              vue.createVNode("button", {
                                class: "ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white",
                                onClick: ($event) => $data.sidebarOpen = false
                              }, [
                                vue.createVNode("span", { class: "sr-only" }, "Close sidebar"),
                                vue.createVNode(_component_XIcon, {
                                  class: "h-6 w-6 text-white",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          _: 1
                        }),
                        vue.createVNode("div", { class: "flex-shrink-0 flex items-center px-4" }, [
                          vue.createVNode(_component_Link, {
                            href: _ctx.route("dashboard")
                          }, {
                            default: vue.withCtx(() => [
                              vue.createVNode(_component_jet_application_mark, { class: "block h-9 w-auto" })
                            ]),
                            _: 1
                          }, 8, ["href"])
                        ]),
                        vue.createVNode("div", { class: "mt-5 flex-1 h-0 overflow-y-auto" }, [
                          vue.createVNode(_component_sidebar_navlinks)
                        ])
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<div class="flex-shrink-0 w-14" aria-hidden="true"${_scopeId2}></div>`);
            } else {
              return [
                vue.createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "transition-opacity ease-linear duration-300",
                  "enter-from": "opacity-0",
                  "enter-to": "opacity-100",
                  leave: "transition-opacity ease-linear duration-300",
                  "leave-from": "opacity-100",
                  "leave-to": "opacity-0"
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_DialogOverlay, { class: "fixed inset-0 bg-gray-600 bg-opacity-75" })
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "transition ease-in-out duration-300 transform",
                  "enter-from": "-translate-x-full",
                  "enter-to": "translate-x-0",
                  leave: "transition ease-in-out duration-300 transform",
                  "leave-from": "translate-x-0",
                  "leave-to": "-translate-x-full"
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("div", { class: "relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white" }, [
                      vue.createVNode(_component_TransitionChild, {
                        as: "template",
                        enter: "ease-in-out duration-300",
                        "enter-from": "opacity-0",
                        "enter-to": "opacity-100",
                        leave: "ease-in-out duration-300",
                        "leave-from": "opacity-100",
                        "leave-to": "opacity-0"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createVNode("div", { class: "absolute top-0 right-0 -mr-12 pt-2" }, [
                            vue.createVNode("button", {
                              class: "ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white",
                              onClick: ($event) => $data.sidebarOpen = false
                            }, [
                              vue.createVNode("span", { class: "sr-only" }, "Close sidebar"),
                              vue.createVNode(_component_XIcon, {
                                class: "h-6 w-6 text-white",
                                "aria-hidden": "true"
                              })
                            ], 8, ["onClick"])
                          ])
                        ]),
                        _: 1
                      }),
                      vue.createVNode("div", { class: "flex-shrink-0 flex items-center px-4" }, [
                        vue.createVNode(_component_Link, {
                          href: _ctx.route("dashboard")
                        }, {
                          default: vue.withCtx(() => [
                            vue.createVNode(_component_jet_application_mark, { class: "block h-9 w-auto" })
                          ]),
                          _: 1
                        }, 8, ["href"])
                      ]),
                      vue.createVNode("div", { class: "mt-5 flex-1 h-0 overflow-y-auto" }, [
                        vue.createVNode(_component_sidebar_navlinks)
                      ])
                    ])
                  ]),
                  _: 1
                }),
                vue.createVNode("div", {
                  class: "flex-shrink-0 w-14",
                  "aria-hidden": "true"
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_Dialog, {
            as: "div",
            static: "",
            class: "fixed inset-0 flex z-40 md:hidden",
            onClose: ($event) => $data.sidebarOpen = false,
            open: $data.sidebarOpen
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_TransitionChild, {
                as: "template",
                enter: "transition-opacity ease-linear duration-300",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "transition-opacity ease-linear duration-300",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_DialogOverlay, { class: "fixed inset-0 bg-gray-600 bg-opacity-75" })
                ]),
                _: 1
              }),
              vue.createVNode(_component_TransitionChild, {
                as: "template",
                enter: "transition ease-in-out duration-300 transform",
                "enter-from": "-translate-x-full",
                "enter-to": "translate-x-0",
                leave: "transition ease-in-out duration-300 transform",
                "leave-from": "translate-x-0",
                "leave-to": "-translate-x-full"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode("div", { class: "relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white" }, [
                    vue.createVNode(_component_TransitionChild, {
                      as: "template",
                      enter: "ease-in-out duration-300",
                      "enter-from": "opacity-0",
                      "enter-to": "opacity-100",
                      leave: "ease-in-out duration-300",
                      "leave-from": "opacity-100",
                      "leave-to": "opacity-0"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", { class: "absolute top-0 right-0 -mr-12 pt-2" }, [
                          vue.createVNode("button", {
                            class: "ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white",
                            onClick: ($event) => $data.sidebarOpen = false
                          }, [
                            vue.createVNode("span", { class: "sr-only" }, "Close sidebar"),
                            vue.createVNode(_component_XIcon, {
                              class: "h-6 w-6 text-white",
                              "aria-hidden": "true"
                            })
                          ], 8, ["onClick"])
                        ])
                      ]),
                      _: 1
                    }),
                    vue.createVNode("div", { class: "flex-shrink-0 flex items-center px-4" }, [
                      vue.createVNode(_component_Link, {
                        href: _ctx.route("dashboard")
                      }, {
                        default: vue.withCtx(() => [
                          vue.createVNode(_component_jet_application_mark, { class: "block h-9 w-auto" })
                        ]),
                        _: 1
                      }, 8, ["href"])
                    ]),
                    vue.createVNode("div", { class: "mt-5 flex-1 h-0 overflow-y-auto" }, [
                      vue.createVNode(_component_sidebar_navlinks)
                    ])
                  ])
                ]),
                _: 1
              }),
              vue.createVNode("div", {
                class: "flex-shrink-0 w-14",
                "aria-hidden": "true"
              })
            ]),
            _: 1
          }, 8, ["onClose", "open"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="hidden md:flex md:flex-shrink-0"><div class="flex flex-col w-72"><div class="flex flex-col flex-grow border-r border-gray-200 pt-5 pb-4 bg-white overflow-y-auto"><div class="flex items-center flex-shrink-0 px-4">`);
  _push(serverRenderer.ssrRenderComponent(_component_Link, {
    href: _ctx.route("dashboard")
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_application_mark, { class: "block w-auto" }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_application_mark, { class: "block w-auto" })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="mt-5 flex-grow flex flex-col">`);
  _push(serverRenderer.ssrRenderComponent(_component_sidebar_navlinks, null, null, _parent));
  _push(`</div></div></div></div><div class="flex flex-col w-0 flex-1 overflow-hidden"><nav class="relative z-10 flex-shrink-0 flex justify-between md:justify-end h-16 bg-white shadow"><button class="px-4 border-r border-gray-200 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-green-500 md:hidden"><span class="sr-only">Open sidebar</span>`);
  _push(serverRenderer.ssrRenderComponent(_component_MenuAlt2Icon, {
    class: "h-6 w-6",
    "aria-hidden": "true"
  }, null, _parent));
  _push(`</button><div class="flex justify-between h-16 px-4"><div class="flex items-center sm:ml-6"><div class="ml-3 relative">`);
  if (_ctx.$page.props.jetstream.hasTeamFeatures) {
    _push(serverRenderer.ssrRenderComponent(_component_jet_dropdown, {
      align: "right",
      width: "60"
    }, {
      trigger: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<span class="inline-flex rounded-md"${_scopeId}><button type="button" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:bg-gray-50 hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition"${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.$page.props.user.current_team.name)} <svg class="ml-2 -mr-0.5 h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"${_scopeId}><path fill-rule="evenodd" d="M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd"${_scopeId}></path></svg></button></span>`);
        } else {
          return [
            vue.createVNode("span", { class: "inline-flex rounded-md" }, [
              vue.createVNode("button", {
                type: "button",
                class: "inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:bg-gray-50 hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition"
              }, [
                vue.createTextVNode(vue.toDisplayString(_ctx.$page.props.user.current_team.name) + " ", 1),
                (vue.openBlock(), vue.createBlock("svg", {
                  class: "ml-2 -mr-0.5 h-4 w-4",
                  xmlns: "http://www.w3.org/2000/svg",
                  viewBox: "0 0 20 20",
                  fill: "currentColor"
                }, [
                  vue.createVNode("path", {
                    "fill-rule": "evenodd",
                    d: "M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z",
                    "clip-rule": "evenodd"
                  })
                ]))
              ])
            ])
          ];
        }
      }),
      content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="w-60"${_scopeId}>`);
          if (_ctx.$page.props.jetstream.hasTeamFeatures) {
            _push2(`<!--[--><div class="block px-4 py-2 text-xs text-gray-400"${_scopeId}> Admin </div>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_dropdown_link, {
              href: _ctx.route(
                "teams.show",
                _ctx.$page.props.user.current_team
              )
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Company Settings `);
                } else {
                  return [
                    vue.createTextVNode(" Company Settings ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            if (_ctx.$page.props.jetstream.canCreateTeams) {
              _push2(serverRenderer.ssrRenderComponent(_component_jet_dropdown_link, {
                href: _ctx.route("teams.create")
              }, {
                default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Create New Company `);
                  } else {
                    return [
                      vue.createTextVNode(" Create New Company ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="border-t border-gray-100"${_scopeId}></div><div class="block px-4 py-2 text-xs text-gray-400"${_scopeId}> Switch Company </div><!--[-->`);
            serverRenderer.ssrRenderList(_ctx.$page.props.user.all_teams, (team) => {
              _push2(`<form${_scopeId}>`);
              _push2(serverRenderer.ssrRenderComponent(_component_jet_dropdown_link, { as: "button" }, {
                default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<div class="flex items-center"${_scopeId2}>`);
                    if (team.id == _ctx.$page.props.user.current_team_id) {
                      _push3(`<svg class="mr-2 h-5 w-5 text-green-400" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="currentColor" viewBox="0 0 24 24"${_scopeId2}><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId2}></path></svg>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(`<div${_scopeId2}>${serverRenderer.ssrInterpolate(team.name)}</div></div>`);
                  } else {
                    return [
                      vue.createVNode("div", { class: "flex items-center" }, [
                        team.id == _ctx.$page.props.user.current_team_id ? (vue.openBlock(), vue.createBlock("svg", {
                          key: 0,
                          class: "mr-2 h-5 w-5 text-green-400",
                          fill: "none",
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          "stroke-width": "2",
                          stroke: "currentColor",
                          viewBox: "0 0 24 24"
                        }, [
                          vue.createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                        ])) : vue.createCommentVNode("", true),
                        vue.createVNode("div", null, vue.toDisplayString(team.name), 1)
                      ])
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</form>`);
            });
            _push2(`<!--]--><!--]-->`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          return [
            vue.createVNode("div", { class: "w-60" }, [
              _ctx.$page.props.jetstream.hasTeamFeatures ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 0 }, [
                vue.createVNode("div", { class: "block px-4 py-2 text-xs text-gray-400" }, " Admin "),
                vue.createVNode(_component_jet_dropdown_link, {
                  href: _ctx.route(
                    "teams.show",
                    _ctx.$page.props.user.current_team
                  )
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Company Settings ")
                  ]),
                  _: 1
                }, 8, ["href"]),
                _ctx.$page.props.jetstream.canCreateTeams ? (vue.openBlock(), vue.createBlock(_component_jet_dropdown_link, {
                  key: 0,
                  href: _ctx.route("teams.create")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Create New Company ")
                  ]),
                  _: 1
                }, 8, ["href"])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "border-t border-gray-100" }),
                vue.createVNode("div", { class: "block px-4 py-2 text-xs text-gray-400" }, " Switch Company "),
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.$page.props.user.all_teams, (team) => {
                  return vue.openBlock(), vue.createBlock("form", {
                    key: team.id,
                    onSubmit: vue.withModifiers(($event) => $options.switchToTeam(team), ["prevent"])
                  }, [
                    vue.createVNode(_component_jet_dropdown_link, { as: "button" }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", { class: "flex items-center" }, [
                          team.id == _ctx.$page.props.user.current_team_id ? (vue.openBlock(), vue.createBlock("svg", {
                            key: 0,
                            class: "mr-2 h-5 w-5 text-green-400",
                            fill: "none",
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round",
                            "stroke-width": "2",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24"
                          }, [
                            vue.createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                          ])) : vue.createCommentVNode("", true),
                          vue.createVNode("div", null, vue.toDisplayString(team.name), 1)
                        ])
                      ]),
                      _: 2
                    }, 1024)
                  ], 40, ["onSubmit"]);
                }), 128))
              ], 64)) : vue.createCommentVNode("", true)
            ])
          ];
        }
      }),
      _: 1
    }, _parent));
  } else {
    _push(`<!---->`);
  }
  _push(`</div><div class="ml-3 relative">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_dropdown, {
    align: "right",
    width: "48"
  }, {
    trigger: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (_ctx.$page.props.jetstream.managesProfilePhotos) {
          _push2(`<button class="flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition"${_scopeId}><img class="h-8 w-8 rounded-full object-cover"${serverRenderer.ssrRenderAttr(
            "src",
            _ctx.$page.props.user.profile_photo_url
          )}${serverRenderer.ssrRenderAttr("alt", _ctx.$page.props.user.name)}${_scopeId}></button>`);
        } else {
          _push2(`<span class="inline-flex rounded-md"${_scopeId}><button type="button" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition"${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.$page.props.user.name)} <svg class="ml-2 -mr-0.5 h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"${_scopeId}><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"${_scopeId}></path></svg></button></span>`);
        }
      } else {
        return [
          _ctx.$page.props.jetstream.managesProfilePhotos ? (vue.openBlock(), vue.createBlock("button", {
            key: 0,
            class: "flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition"
          }, [
            vue.createVNode("img", {
              class: "h-8 w-8 rounded-full object-cover",
              src: _ctx.$page.props.user.profile_photo_url,
              alt: _ctx.$page.props.user.name
            }, null, 8, ["src", "alt"])
          ])) : (vue.openBlock(), vue.createBlock("span", {
            key: 1,
            class: "inline-flex rounded-md"
          }, [
            vue.createVNode("button", {
              type: "button",
              class: "inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition"
            }, [
              vue.createTextVNode(vue.toDisplayString(_ctx.$page.props.user.name) + " ", 1),
              (vue.openBlock(), vue.createBlock("svg", {
                class: "ml-2 -mr-0.5 h-4 w-4",
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 20 20",
                fill: "currentColor"
              }, [
                vue.createVNode("path", {
                  "fill-rule": "evenodd",
                  d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",
                  "clip-rule": "evenodd"
                })
              ]))
            ])
          ]))
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="block px-4 py-2 text-xs text-gray-400"${_scopeId}> Manage Account </div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_dropdown_link, {
          href: _ctx.route("profile.show")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Profile `);
            } else {
              return [
                vue.createTextVNode(" Profile ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        if (_ctx.$page.props.jetstream.hasApiFeatures) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_dropdown_link, {
            href: _ctx.route("api-tokens.index")
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` API Tokens `);
              } else {
                return [
                  vue.createTextVNode(" API Tokens ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="border-t border-gray-100"${_scopeId}></div><form${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_dropdown_link, { as: "button" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log Out `);
            } else {
              return [
                vue.createTextVNode(" Log Out ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</form>`);
      } else {
        return [
          vue.createVNode("div", { class: "block px-4 py-2 text-xs text-gray-400" }, " Manage Account "),
          vue.createVNode(_component_jet_dropdown_link, {
            href: _ctx.route("profile.show")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Profile ")
            ]),
            _: 1
          }, 8, ["href"]),
          _ctx.$page.props.jetstream.hasApiFeatures ? (vue.openBlock(), vue.createBlock(_component_jet_dropdown_link, {
            key: 0,
            href: _ctx.route("api-tokens.index")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" API Tokens ")
            ]),
            _: 1
          }, 8, ["href"])) : vue.createCommentVNode("", true),
          vue.createVNode("div", { class: "border-t border-gray-100" }),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.logout, ["prevent"])
          }, [
            vue.createVNode(_component_jet_dropdown_link, { as: "button" }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Log Out ")
              ]),
              _: 1
            })
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div></div></div></nav>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_banner, null, null, _parent));
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$3S = _sfc_main$3S.setup;
_sfc_main$3S.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/AppLayout.vue");
  return _sfc_setup$3S ? _sfc_setup$3S(props, ctx) : void 0;
};
var AppLayout = /* @__PURE__ */ _export_sfc(_sfc_main$3S, [["ssrRender", _sfc_ssrRender$3Q]]);
const _sfc_main$3R = {};
function _sfc_ssrRender$3P(_ctx, _push, _parent, _attrs) {
  _push(`<h1${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "text-4xl font-bold" }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</h1>`);
}
const _sfc_setup$3R = _sfc_main$3R.setup;
_sfc_main$3R.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Headings/HeadingOne.vue");
  return _sfc_setup$3R ? _sfc_setup$3R(props, ctx) : void 0;
};
var HeadingOne = /* @__PURE__ */ _export_sfc(_sfc_main$3R, [["ssrRender", _sfc_ssrRender$3P]]);
const _sfc_main$3Q = {
  props: {
    href: {
      type: String,
      default: "#"
    }
  }
};
function _sfc_ssrRender$3O(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = vue.resolveComponent("Link");
  _push(serverRenderer.ssrRenderComponent(_component_Link, vue.mergeProps({
    href: $props.href,
    class: "btn"
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$3Q = _sfc_main$3Q.setup;
_sfc_main$3Q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Links/ButtonLink.vue");
  return _sfc_setup$3Q ? _sfc_setup$3Q(props, ctx) : void 0;
};
var ButtonLink = /* @__PURE__ */ _export_sfc(_sfc_main$3Q, [["ssrRender", _sfc_ssrRender$3O]]);
const _sfc_main$3P = {
  components: {
    DetailsSection,
    ButtonLink
  },
  props: {
    thirtyDaysCompletedOrders: {
      type: Number,
      required: true
    },
    thirtyDaysCompletedSales: {
      type: Number,
      required: true
    }
  }
};
function _sfc_ssrRender$3N(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_button_link = vue.resolveComponent("button-link");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Completed Orders, 30 Days`);
      } else {
        return [
          vue.createTextVNode("Completed Orders, 30 Days")
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_button_link, {
          href: _ctx.route("orders.index")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`View Orders`);
            } else {
              return [
                vue.createTextVNode("View Orders")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_button_link, {
            href: _ctx.route("orders.index")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("View Orders")
            ]),
            _: 1
          }, 8, ["href"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><p class="text-lg mb-2"${_scopeId}>${serverRenderer.ssrInterpolate($props.thirtyDaysCompletedOrders)} Completed Orders </p><p${_scopeId}>$${serverRenderer.ssrInterpolate($props.thirtyDaysCompletedSales)} in completed sales</p></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("p", { class: "text-lg mb-2" }, vue.toDisplayString($props.thirtyDaysCompletedOrders) + " Completed Orders ", 1),
            vue.createVNode("p", null, "$" + vue.toDisplayString($props.thirtyDaysCompletedSales) + " in completed sales", 1)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3P = _sfc_main$3P.setup;
_sfc_main$3P.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/CompletedOrdersCard.vue");
  return _sfc_setup$3P ? _sfc_setup$3P(props, ctx) : void 0;
};
var CompletedOrdersCard = /* @__PURE__ */ _export_sfc(_sfc_main$3P, [["ssrRender", _sfc_ssrRender$3N]]);
var CompletedOrdersCard$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CompletedOrdersCard
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3O = {
  components: {
    DetailsSection,
    ExternalLinkIcon: outline.ExternalLinkIcon,
    ButtonLink
  },
  data() {
    return {
      activeQuotes: []
    };
  },
  mounted() {
    this.getActiveQuotes();
  },
  computed: {
    numActiveQuotes() {
      return this.activeQuotes.length;
    },
    totalActiveQuotes() {
      return this.formatMoney(
        this.activeQuotes.reduce(
          (total, quote) => total + quote.grand_total,
          0
        )
      );
    }
  },
  methods: {
    getActiveQuotes() {
      axios.get(route("api.quotes.active")).then((response) => {
        this.activeQuotes = response.data;
      });
    }
  }
};
function _sfc_ssrRender$3M(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_button_link = vue.resolveComponent("button-link");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Quotes`);
      } else {
        return [
          vue.createTextVNode("Quotes")
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_button_link, {
          href: _ctx.route("quotes.index")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`View Quotes`);
            } else {
              return [
                vue.createTextVNode("View Quotes")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_button_link, {
            href: _ctx.route("quotes.index")
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("View Quotes")
            ]),
            _: 1
          }, 8, ["href"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><p class="text-lg mb-2"${_scopeId}>${serverRenderer.ssrInterpolate($options.numActiveQuotes)} Active quotes</p><p${_scopeId}>${serverRenderer.ssrInterpolate($options.totalActiveQuotes)} in active quotes</p></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("p", { class: "text-lg mb-2" }, vue.toDisplayString($options.numActiveQuotes) + " Active quotes", 1),
            vue.createVNode("p", null, vue.toDisplayString($options.totalActiveQuotes) + " in active quotes", 1)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3O = _sfc_main$3O.setup;
_sfc_main$3O.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Quotes/Components/ActiveQuotesCard.vue");
  return _sfc_setup$3O ? _sfc_setup$3O(props, ctx) : void 0;
};
var ActiveQuotesCard = /* @__PURE__ */ _export_sfc(_sfc_main$3O, [["ssrRender", _sfc_ssrRender$3M]]);
var ActiveQuotesCard$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ActiveQuotesCard
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3N = {
  components: {
    AppLayout,
    HeadingOne,
    ButtonLink,
    CompletedOrdersCard,
    ActiveQuotesCard
  }
};
function _sfc_ssrRender$3L(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_heading_one = vue.resolveComponent("heading-one");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_completed_orders_card = vue.resolveComponent("completed-orders-card");
  const _component_active_quotes_card = vue.resolveComponent("active-quotes-card");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="py-4"${_scopeId}><div class="flex justify-between items-center w-full pb-9 px-4 lg:px-8"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_heading_one, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Dashboard`);
            } else {
              return [
                vue.createTextVNode("Dashboard")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_button_link, {
          href: _ctx.route("orders.create")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`New Order`);
            } else {
              return [
                vue.createTextVNode("New Order")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div class="grid gap-6 lg:gap-8"${_scopeId}><div class="sm:px-6 lg:px-8"${_scopeId}><div class="grid gap-4 lg:gap-6 md:grid-cols-3 text-gray-900"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_completed_orders_card, {
          thirtyDaysCompletedOrders: 0,
          thirtyDaysCompletedSales: 0
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_active_quotes_card, null, null, _parent2, _scopeId));
        _push2(`</div></div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "py-4" }, [
            vue.createVNode("div", { class: "flex justify-between items-center w-full pb-9 px-4 lg:px-8" }, [
              vue.createVNode(_component_heading_one, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Dashboard")
                ]),
                _: 1
              }),
              vue.createVNode(_component_button_link, {
                href: _ctx.route("orders.create")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New Order")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            vue.createVNode("div", { class: "grid gap-6 lg:gap-8" }, [
              vue.createVNode("div", { class: "sm:px-6 lg:px-8" }, [
                vue.createVNode("div", { class: "grid gap-4 lg:gap-6 md:grid-cols-3 text-gray-900" }, [
                  vue.createVNode(_component_completed_orders_card, {
                    thirtyDaysCompletedOrders: 0,
                    thirtyDaysCompletedSales: 0
                  }),
                  vue.createVNode(_component_active_quotes_card)
                ])
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3N = _sfc_main$3N.setup;
_sfc_main$3N.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Dashboard.vue");
  return _sfc_setup$3N ? _sfc_setup$3N(props, ctx) : void 0;
};
var Dashboard = /* @__PURE__ */ _export_sfc(_sfc_main$3N, [["ssrRender", _sfc_ssrRender$3L]]);
var Dashboard$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Dashboard
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3M = {};
function _sfc_ssrRender$3K(_ctx, _push, _parent, _attrs) {
  _push(`<img${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    src: "/logos/awia-for-nurseries-zoomed.png",
    alt: "Awia for Nurseries",
    class: "h-20 mb-4 w-auto"
  }, _attrs))}>`);
}
const _sfc_setup$3M = _sfc_main$3M.setup;
_sfc_main$3M.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/AuthenticationCardLogo.vue");
  return _sfc_setup$3M ? _sfc_setup$3M(props, ctx) : void 0;
};
var JetAuthenticationCardLogo = /* @__PURE__ */ _export_sfc(_sfc_main$3M, [["ssrRender", _sfc_ssrRender$3K]]);
const _sfc_main$3L = {
  props: ["policy"],
  components: {
    JetAuthenticationCardLogo
  }
};
function _sfc_ssrRender$3J(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "font-sans text-gray-900 antialiased" }, _attrs))}><div class="pt-4 bg-gray-100"><div class="min-h-screen flex flex-col items-center pt-6 sm:pt-0"><div>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent));
  _push(`</div><div class="w-full sm:max-w-2xl mt-6 p-6 bg-white shadow-md overflow-hidden sm:rounded-lg prose">${$props.policy}</div></div></div></div>`);
}
const _sfc_setup$3L = _sfc_main$3L.setup;
_sfc_main$3L.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/PrivacyPolicy.vue");
  return _sfc_setup$3L ? _sfc_setup$3L(props, ctx) : void 0;
};
var PrivacyPolicy = /* @__PURE__ */ _export_sfc(_sfc_main$3L, [["ssrRender", _sfc_ssrRender$3J]]);
var PrivacyPolicy$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": PrivacyPolicy
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3K = {
  props: ["terms"],
  components: {
    JetAuthenticationCardLogo
  }
};
function _sfc_ssrRender$3I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "font-sans text-gray-900 antialiased" }, _attrs))}><div class="pt-4 bg-gray-100"><div class="min-h-screen flex flex-col items-center pt-6 sm:pt-0"><div>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent));
  _push(`</div><div class="w-full sm:max-w-2xl mt-6 p-6 bg-white shadow-md overflow-hidden sm:rounded-lg prose">${$props.terms}</div></div></div></div>`);
}
const _sfc_setup$3K = _sfc_main$3K.setup;
_sfc_main$3K.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/TermsOfService.vue");
  return _sfc_setup$3K ? _sfc_setup$3K(props, ctx) : void 0;
};
var TermsOfService = /* @__PURE__ */ _export_sfc(_sfc_main$3K, [["ssrRender", _sfc_ssrRender$3I]]);
var TermsOfService$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": TermsOfService
}, Symbol.toStringTag, { value: "Module" }));
var Welcome_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$3J = {
  props: {
    canLogin: Boolean,
    canRegister: Boolean,
    laravelVersion: String,
    phpVersion: String
  }
};
function _sfc_ssrRender$3H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = vue.resolveComponent("Link");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "relative flex items-top justify-center min-h-screen bg-gray-100 dark:bg-gray-900 sm:items-center sm:pt-0" }, _attrs))} data-v-7b6d435c>`);
  if ($props.canLogin) {
    _push(`<div class="fixed top-0 right-0 px-6 py-4 block" data-v-7b6d435c>`);
    if (_ctx.$page.props.user) {
      _push(serverRenderer.ssrRenderComponent(_component_Link, {
        href: "/dashboard",
        class: "text-sm text-gray-700 underline"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Dashboard `);
          } else {
            return [
              vue.createTextVNode(" Dashboard ")
            ];
          }
        }),
        _: 1
      }, _parent));
    } else {
      _push(`<!--[-->`);
      _push(serverRenderer.ssrRenderComponent(_component_Link, {
        href: _ctx.route("login"),
        class: "text-sm text-gray-700 underline"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Log in `);
          } else {
            return [
              vue.createTextVNode(" Log in ")
            ];
          }
        }),
        _: 1
      }, _parent));
      if ($props.canRegister) {
        _push(serverRenderer.ssrRenderComponent(_component_Link, {
          href: _ctx.route("register"),
          class: "ml-4 text-sm text-gray-700 underline"
        }, {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(` Register `);
            } else {
              return [
                vue.createTextVNode(" Register ")
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`<!--]-->`);
    }
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<div class="max-w-6xl mx-auto sm:px-6 lg:px-8" data-v-7b6d435c><div class="flex justify-center pt-8 sm:justify-start sm:pt-0" data-v-7b6d435c><svg viewBox="0 0 651 192" fill="none" xmlns="http://www.w3.org/2000/svg" class="h-16 w-auto text-gray-700 sm:h-20" data-v-7b6d435c><g clip-path="url(#clip0)" fill="#EF3B2D" data-v-7b6d435c><path d="M248.032 44.676h-16.466v100.23h47.394v-14.748h-30.928V44.676zM337.091 87.202c-2.101-3.341-5.083-5.965-8.949-7.875-3.865-1.909-7.756-2.864-11.669-2.864-5.062 0-9.69.931-13.89 2.792-4.201 1.861-7.804 4.417-10.811 7.661-3.007 3.246-5.347 6.993-7.016 11.239-1.672 4.249-2.506 8.713-2.506 13.389 0 4.774.834 9.26 2.506 13.459 1.669 4.202 4.009 7.925 7.016 11.169 3.007 3.246 6.609 5.799 10.811 7.66 4.199 1.861 8.828 2.792 13.89 2.792 3.913 0 7.804-.955 11.669-2.863 3.866-1.908 6.849-4.533 8.949-7.875v9.021h15.607V78.182h-15.607v9.02zm-1.431 32.503c-.955 2.578-2.291 4.821-4.009 6.73-1.719 1.91-3.795 3.437-6.229 4.582-2.435 1.146-5.133 1.718-8.091 1.718-2.96 0-5.633-.572-8.019-1.718-2.387-1.146-4.438-2.672-6.156-4.582-1.719-1.909-3.032-4.152-3.938-6.73-.909-2.577-1.36-5.298-1.36-8.161 0-2.864.451-5.585 1.36-8.162.905-2.577 2.219-4.819 3.938-6.729 1.718-1.908 3.77-3.437 6.156-4.582 2.386-1.146 5.059-1.718 8.019-1.718 2.958 0 5.656.572 8.091 1.718 2.434 1.146 4.51 2.674 6.229 4.582 1.718 1.91 3.054 4.152 4.009 6.729.953 2.577 1.432 5.298 1.432 8.162-.001 2.863-.479 5.584-1.432 8.161zM463.954 87.202c-2.101-3.341-5.083-5.965-8.949-7.875-3.865-1.909-7.756-2.864-11.669-2.864-5.062 0-9.69.931-13.89 2.792-4.201 1.861-7.804 4.417-10.811 7.661-3.007 3.246-5.347 6.993-7.016 11.239-1.672 4.249-2.506 8.713-2.506 13.389 0 4.774.834 9.26 2.506 13.459 1.669 4.202 4.009 7.925 7.016 11.169 3.007 3.246 6.609 5.799 10.811 7.66 4.199 1.861 8.828 2.792 13.89 2.792 3.913 0 7.804-.955 11.669-2.863 3.866-1.908 6.849-4.533 8.949-7.875v9.021h15.607V78.182h-15.607v9.02zm-1.432 32.503c-.955 2.578-2.291 4.821-4.009 6.73-1.719 1.91-3.795 3.437-6.229 4.582-2.435 1.146-5.133 1.718-8.091 1.718-2.96 0-5.633-.572-8.019-1.718-2.387-1.146-4.438-2.672-6.156-4.582-1.719-1.909-3.032-4.152-3.938-6.73-.909-2.577-1.36-5.298-1.36-8.161 0-2.864.451-5.585 1.36-8.162.905-2.577 2.219-4.819 3.938-6.729 1.718-1.908 3.77-3.437 6.156-4.582 2.386-1.146 5.059-1.718 8.019-1.718 2.958 0 5.656.572 8.091 1.718 2.434 1.146 4.51 2.674 6.229 4.582 1.718 1.91 3.054 4.152 4.009 6.729.953 2.577 1.432 5.298 1.432 8.162 0 2.863-.479 5.584-1.432 8.161zM650.772 44.676h-15.606v100.23h15.606V44.676zM365.013 144.906h15.607V93.538h26.776V78.182h-42.383v66.724zM542.133 78.182l-19.616 51.096-19.616-51.096h-15.808l25.617 66.724h19.614l25.617-66.724h-15.808zM591.98 76.466c-19.112 0-34.239 15.706-34.239 35.079 0 21.416 14.641 35.079 36.239 35.079 12.088 0 19.806-4.622 29.234-14.688l-10.544-8.158c-.006.008-7.958 10.449-19.832 10.449-13.802 0-19.612-11.127-19.612-16.884h51.777c2.72-22.043-11.772-40.877-33.023-40.877zm-18.713 29.28c.12-1.284 1.917-16.884 18.589-16.884 16.671 0 18.697 15.598 18.813 16.884h-37.402zM184.068 43.892c-.024-.088-.073-.165-.104-.25-.058-.157-.108-.316-.191-.46-.056-.097-.137-.176-.203-.265-.087-.117-.161-.242-.265-.345-.085-.086-.194-.148-.29-.223-.109-.085-.206-.182-.327-.252l-.002-.001-.002-.002-35.648-20.524a2.971 2.971 0 00-2.964 0l-35.647 20.522-.002.002-.002.001c-.121.07-.219.167-.327.252-.096.075-.205.138-.29.223-.103.103-.178.228-.265.345-.066.089-.147.169-.203.265-.083.144-.133.304-.191.46-.031.085-.08.162-.104.25-.067.249-.103.51-.103.776v38.979l-29.706 17.103V24.493a3 3 0 00-.103-.776c-.024-.088-.073-.165-.104-.25-.058-.157-.108-.316-.191-.46-.056-.097-.137-.176-.203-.265-.087-.117-.161-.242-.265-.345-.085-.086-.194-.148-.29-.223-.109-.085-.206-.182-.327-.252l-.002-.001-.002-.002L40.098 1.396a2.971 2.971 0 00-2.964 0L1.487 21.919l-.002.002-.002.001c-.121.07-.219.167-.327.252-.096.075-.205.138-.29.223-.103.103-.178.228-.265.345-.066.089-.147.169-.203.265-.083.144-.133.304-.191.46-.031.085-.08.162-.104.25-.067.249-.103.51-.103.776v122.09c0 1.063.568 2.044 1.489 2.575l71.293 41.045c.156.089.324.143.49.202.078.028.15.074.23.095a2.98 2.98 0 001.524 0c.069-.018.132-.059.2-.083.176-.061.354-.119.519-.214l71.293-41.045a2.971 2.971 0 001.489-2.575v-38.979l34.158-19.666a2.971 2.971 0 001.489-2.575V44.666a3.075 3.075 0 00-.106-.774zM74.255 143.167l-29.648-16.779 31.136-17.926.001-.001 34.164-19.669 29.674 17.084-21.772 12.428-43.555 24.863zm68.329-76.259v33.841l-12.475-7.182-17.231-9.92V49.806l12.475 7.182 17.231 9.92zm2.97-39.335l29.693 17.095-29.693 17.095-29.693-17.095 29.693-17.095zM54.06 114.089l-12.475 7.182V46.733l17.231-9.92 12.475-7.182v74.537l-17.231 9.921zM38.614 7.398l29.693 17.095-29.693 17.095L8.921 24.493 38.614 7.398zM5.938 29.632l12.475 7.182 17.231 9.92v79.676l.001.005-.001.006c0 .114.032.221.045.333.017.146.021.294.059.434l.002.007c.032.117.094.222.14.334.051.124.088.255.156.371a.036.036 0 00.004.009c.061.105.149.191.222.288.081.105.149.22.244.314l.008.01c.084.083.19.142.284.215.106.083.202.178.32.247l.013.005.011.008 34.139 19.321v34.175L5.939 144.867V29.632h-.001zm136.646 115.235l-65.352 37.625V148.31l48.399-27.628 16.953-9.677v33.862zm35.646-61.22l-29.706 17.102V66.908l17.231-9.92 12.475-7.182v33.841z" data-v-7b6d435c></path></g></svg></div><div class="mt-8 bg-white dark:bg-gray-800 overflow-hidden shadow sm:rounded-lg" data-v-7b6d435c><div class="grid grid-cols-1 md:grid-cols-2" data-v-7b6d435c><div class="p-6" data-v-7b6d435c><div class="flex items-center" data-v-7b6d435c><svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" class="w-8 h-8 text-gray-500" data-v-7b6d435c><path d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" data-v-7b6d435c></path></svg><div class="ml-4 text-lg leading-7 font-semibold" data-v-7b6d435c><a href="https://laravel.com/docs" class="underline text-gray-900 dark:text-white" data-v-7b6d435c>Documentation</a></div></div><div class="ml-12" data-v-7b6d435c><div class="mt-2 text-gray-600 dark:text-gray-400 text-sm" data-v-7b6d435c> Laravel has wonderful, thorough documentation covering every aspect of the framework. Whether you are new to the framework or have previous experience with Laravel, we recommend reading all of the documentation from beginning to end. </div></div></div><div class="p-6 border-t border-gray-200 dark:border-gray-700 md:border-t-0 md:border-l" data-v-7b6d435c><div class="flex items-center" data-v-7b6d435c><svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" class="w-8 h-8 text-gray-500" data-v-7b6d435c><path d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" data-v-7b6d435c></path><path d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" data-v-7b6d435c></path></svg><div class="ml-4 text-lg leading-7 font-semibold" data-v-7b6d435c><a href="https://laracasts.com" class="underline text-gray-900 dark:text-white" data-v-7b6d435c>Laracasts</a></div></div><div class="ml-12" data-v-7b6d435c><div class="mt-2 text-gray-600 dark:text-gray-400 text-sm" data-v-7b6d435c> Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process. </div></div></div><div class="p-6 border-t border-gray-200 dark:border-gray-700" data-v-7b6d435c><div class="flex items-center" data-v-7b6d435c><svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" class="w-8 h-8 text-gray-500" data-v-7b6d435c><path d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z" data-v-7b6d435c></path></svg><div class="ml-4 text-lg leading-7 font-semibold" data-v-7b6d435c><a href="https://laravel-news.com/" class="underline text-gray-900 dark:text-white" data-v-7b6d435c>Laravel News</a></div></div><div class="ml-12" data-v-7b6d435c><div class="mt-2 text-gray-600 dark:text-gray-400 text-sm" data-v-7b6d435c> Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials. </div></div></div><div class="p-6 border-t border-gray-200 dark:border-gray-700 md:border-l" data-v-7b6d435c><div class="flex items-center" data-v-7b6d435c><svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" class="w-8 h-8 text-gray-500" data-v-7b6d435c><path d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z" data-v-7b6d435c></path></svg><div class="ml-4 text-lg leading-7 font-semibold text-gray-900 dark:text-white" data-v-7b6d435c> Vibrant Ecosystem </div></div><div class="ml-12" data-v-7b6d435c><div class="mt-2 text-gray-600 dark:text-gray-400 text-sm" data-v-7b6d435c> Laravel&#39;s robust library of first-party tools and libraries, such as <a href="https://forge.laravel.com" class="underline" data-v-7b6d435c>Forge</a>, <a href="https://vapor.laravel.com" class="underline" data-v-7b6d435c>Vapor</a>, <a href="https://nova.laravel.com" class="underline" data-v-7b6d435c>Nova</a>, and <a href="https://envoyer.io" class="underline" data-v-7b6d435c>Envoyer</a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href="https://laravel.com/docs/billing" class="underline" data-v-7b6d435c>Cashier</a>, <a href="https://laravel.com/docs/dusk" class="underline" data-v-7b6d435c>Dusk</a>, <a href="https://laravel.com/docs/broadcasting" class="underline" data-v-7b6d435c>Echo</a>, <a href="https://laravel.com/docs/horizon" class="underline" data-v-7b6d435c>Horizon</a>, <a href="https://laravel.com/docs/sanctum" class="underline" data-v-7b6d435c>Sanctum</a>, <a href="https://laravel.com/docs/telescope" class="underline" data-v-7b6d435c>Telescope</a>, and more. </div></div></div></div></div><div class="flex justify-center mt-4 sm:items-center sm:justify-between" data-v-7b6d435c><div class="text-center text-sm text-gray-500 sm:text-left" data-v-7b6d435c><div class="flex items-center" data-v-7b6d435c><svg fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" stroke="currentColor" class="-mt-px w-5 h-5 text-gray-400" data-v-7b6d435c><path d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" data-v-7b6d435c></path></svg><a href="https://laravel.bigcartel.com" class="ml-1 underline" data-v-7b6d435c> Shop </a><svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" class="ml-4 -mt-px w-5 h-5 text-gray-400" data-v-7b6d435c><path d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" data-v-7b6d435c></path></svg><a href="https://github.com/sponsors/taylorotwell" class="ml-1 underline" data-v-7b6d435c> Sponsor </a></div></div></div></div></div>`);
}
const _sfc_setup$3J = _sfc_main$3J.setup;
_sfc_main$3J.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Welcome.vue");
  return _sfc_setup$3J ? _sfc_setup$3J(props, ctx) : void 0;
};
var Welcome = /* @__PURE__ */ _export_sfc(_sfc_main$3J, [["ssrRender", _sfc_ssrRender$3H], ["__scopeId", "data-v-7b6d435c"]]);
var Welcome$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Welcome
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3I = {
  props: ["on"]
};
function _sfc_ssrRender$3G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><div style="${serverRenderer.ssrRenderStyle($props.on ? null : { display: "none" })}" class="text-sm text-gray-600">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$3I = _sfc_main$3I.setup;
_sfc_main$3I.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ActionMessage.vue");
  return _sfc_setup$3I ? _sfc_setup$3I(props, ctx) : void 0;
};
var JetActionMessage = /* @__PURE__ */ _export_sfc(_sfc_main$3I, [["ssrRender", _sfc_ssrRender$3G]]);
const _sfc_main$3H = {
  components: {
    JetSectionTitle: SectionTitle
  }
};
function _sfc_ssrRender$3F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "md:grid md:gap-6" }, _attrs))}><div class="md:mt-0 md:col-span-2"><div class="px-4 py-5 sm:p-6 bg-white shadow sm:rounded-lg">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "title")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "description", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "description")
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "aside", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "aside")
        ];
      }
    }),
    _: 3
  }, _parent));
  serverRenderer.ssrRenderSlot(_ctx.$slots, "content", {}, null, _push, _parent);
  _push(`</div></div></div>`);
}
const _sfc_setup$3H = _sfc_main$3H.setup;
_sfc_main$3H.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ActionSection.vue");
  return _sfc_setup$3H ? _sfc_setup$3H(props, ctx) : void 0;
};
var JetActionSection = /* @__PURE__ */ _export_sfc(_sfc_main$3H, [["ssrRender", _sfc_ssrRender$3F]]);
const _sfc_main$3G = {
  emits: ["close"],
  props: {
    show: {
      default: false
    },
    maxWidth: {
      default: "2xl"
    },
    closeable: {
      default: true
    }
  },
  watch: {
    show: {
      immediate: true,
      handler: (show) => {
        if (show) {
          document.body.style.overflow = "hidden";
        } else {
          document.body.style.overflow = null;
        }
      }
    }
  },
  setup(props, { emit }) {
    const close = () => {
      if (props.closeable) {
        emit("close");
      }
    };
    const closeOnEscape = (e2) => {
      if (e2.key === "Escape" && props.show) {
        close();
      }
    };
    vue.onMounted(() => document.addEventListener("keydown", closeOnEscape));
    vue.onUnmounted(() => {
      document.removeEventListener("keydown", closeOnEscape);
      document.body.style.overflow = null;
    });
    return {
      close
    };
  },
  computed: {
    maxWidthClass() {
      return {
        sm: "sm:max-w-sm",
        md: "sm:max-w-md",
        lg: "sm:max-w-lg",
        xl: "sm:max-w-xl",
        "2xl": "sm:max-w-2xl",
        "3xl": "sm:max-w-3xl",
        "4xl": "sm:max-w-4xl",
        "5xl": "sm:max-w-5xl",
        "6xl": "sm:max-w-6xl",
        "7xl": "sm:max-w-7xl"
      }[this.maxWidth];
    }
  }
};
function _sfc_ssrRender$3E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderTeleport(_push, (_push2) => {
    _push2(`<div style="${serverRenderer.ssrRenderStyle($props.show ? null : { display: "none" })}" class="fixed inset-0 overflow-y-auto px-4 py-6 z-50" scroll-region><div style="${serverRenderer.ssrRenderStyle($props.show ? null : { display: "none" })}" class="fixed inset-0 transform transition-all"><div class="absolute inset-0 bg-gray-500 opacity-75"></div></div><div style="${serverRenderer.ssrRenderStyle($props.show ? null : { display: "none" })}" class="${serverRenderer.ssrRenderClass([$options.maxWidthClass, "mb-6 bg-white rounded-lg shadow-xl transform transition-all sm:w-full sm:mx-auto"])}">`);
    if ($props.show) {
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent);
    } else {
      _push2(`<!---->`);
    }
    _push2(`</div></div>`);
  }, "body", false, _parent);
}
const _sfc_setup$3G = _sfc_main$3G.setup;
_sfc_main$3G.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Modal.vue");
  return _sfc_setup$3G ? _sfc_setup$3G(props, ctx) : void 0;
};
var Modal = /* @__PURE__ */ _export_sfc(_sfc_main$3G, [["ssrRender", _sfc_ssrRender$3E]]);
const _sfc_main$3F = {
  emits: ["close"],
  components: {
    Modal
  },
  props: {
    show: {
      default: false
    },
    maxWidth: {
      default: "2xl"
    },
    closeable: {
      default: true
    }
  },
  methods: {
    close() {
      this.$emit("close");
    }
  }
};
function _sfc_ssrRender$3D(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_modal = vue.resolveComponent("modal");
  _push(serverRenderer.ssrRenderComponent(_component_modal, vue.mergeProps({
    show: $props.show,
    "max-width": $props.maxWidth,
    closeable: $props.closeable,
    onClose: $options.close
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white rounded-t-lg px-4 pt-5 pb-4 sm:p-6 sm:pb-4"${_scopeId}><div class="sm:flex sm:items-start"${_scopeId}><div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10"${_scopeId}><svg class="h-6 w-6 text-red-600" stroke="currentColor" fill="none" viewBox="0 0 24 24"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"${_scopeId}></path></svg></div><div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left"${_scopeId}><h3 class="text-lg"${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
        _push2(`</h3><div class="mt-2"${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "content", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div></div></div></div><div class="px-6 py-4 bg-gray-100 rounded-b-lg text-right"${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "footer", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "bg-white rounded-t-lg px-4 pt-5 pb-4 sm:p-6 sm:pb-4" }, [
            vue.createVNode("div", { class: "sm:flex sm:items-start" }, [
              vue.createVNode("div", { class: "mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10" }, [
                (vue.openBlock(), vue.createBlock("svg", {
                  class: "h-6 w-6 text-red-600",
                  stroke: "currentColor",
                  fill: "none",
                  viewBox: "0 0 24 24"
                }, [
                  vue.createVNode("path", {
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    "stroke-width": "2",
                    d: "M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
                  })
                ]))
              ]),
              vue.createVNode("div", { class: "mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left" }, [
                vue.createVNode("h3", { class: "text-lg" }, [
                  vue.renderSlot(_ctx.$slots, "title")
                ]),
                vue.createVNode("div", { class: "mt-2" }, [
                  vue.renderSlot(_ctx.$slots, "content")
                ])
              ])
            ])
          ]),
          vue.createVNode("div", { class: "px-6 py-4 bg-gray-100 rounded-b-lg text-right" }, [
            vue.renderSlot(_ctx.$slots, "footer")
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$3F = _sfc_main$3F.setup;
_sfc_main$3F.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ConfirmationModal.vue");
  return _sfc_setup$3F ? _sfc_setup$3F(props, ctx) : void 0;
};
var JetConfirmationModal = /* @__PURE__ */ _export_sfc(_sfc_main$3F, [["ssrRender", _sfc_ssrRender$3D]]);
const _sfc_main$3E = {
  emits: ["close"],
  components: {
    Modal,
    JetSectionTitle: SectionTitle
  },
  props: {
    show: {
      default: false
    },
    maxWidth: {
      default: "2xl"
    },
    closeable: {
      default: true
    }
  },
  methods: {
    close() {
      this.$emit("close");
    }
  }
};
function _sfc_ssrRender$3C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_modal = vue.resolveComponent("modal");
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  _push(serverRenderer.ssrRenderComponent(_component_modal, vue.mergeProps({
    show: $props.show,
    "max-width": $props.maxWidth,
    closeable: $props.closeable,
    onClose: $options.close
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="px-6 py-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_title, { class: "col-span-6" }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push3, _parent3, _scopeId2);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "title")
              ];
            }
          }),
          description: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "description", {}, null, _push3, _parent3, _scopeId2);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "description")
              ];
            }
          }),
          aside: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "aside", {}, null, _push3, _parent3, _scopeId2);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "aside")
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(`<div class="my-4"${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "content", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div></div><div class="px-6 py-4 bg-gray-100 rounded-b-lg text-right"${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "footer", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "px-6 py-4" }, [
            vue.createVNode(_component_jet_section_title, { class: "col-span-6" }, {
              title: vue.withCtx(() => [
                vue.renderSlot(_ctx.$slots, "title")
              ]),
              description: vue.withCtx(() => [
                vue.renderSlot(_ctx.$slots, "description")
              ]),
              aside: vue.withCtx(() => [
                vue.renderSlot(_ctx.$slots, "aside")
              ]),
              _: 3
            }),
            vue.createVNode("div", { class: "my-4" }, [
              vue.renderSlot(_ctx.$slots, "content")
            ])
          ]),
          vue.createVNode("div", { class: "px-6 py-4 bg-gray-100 rounded-b-lg text-right" }, [
            vue.renderSlot(_ctx.$slots, "footer")
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$3E = _sfc_main$3E.setup;
_sfc_main$3E.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/DialogModal.vue");
  return _sfc_setup$3E ? _sfc_setup$3E(props, ctx) : void 0;
};
var JetDialogModal = /* @__PURE__ */ _export_sfc(_sfc_main$3E, [["ssrRender", _sfc_ssrRender$3C]]);
const _sfc_main$3D = {
  emits: ["submitted"],
  components: {
    JetSectionTitle: SectionTitle
  },
  computed: {
    hasActions() {
      return !!this.$slots.actions;
    }
  }
};
function _sfc_ssrRender$3B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "md:grid md:gap-6" }, _attrs))}><div class="mt-5 md:mt-0 md:col-span-2"><form><div class="${serverRenderer.ssrRenderClass([
    $options.hasActions ? "sm:rounded-tl-md sm:rounded-tr-md" : "sm:rounded-md",
    "px-4 py-5 bg-white sm:p-6 shadow"
  ])}"><div class="grid grid-cols-6 gap-6">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, { class: "col-span-6" }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "title")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "description", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "description")
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "aside", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "aside")
        ];
      }
    }),
    _: 3
  }, _parent));
  serverRenderer.ssrRenderSlot(_ctx.$slots, "form", {}, null, _push, _parent);
  _push(`</div></div>`);
  if ($options.hasActions) {
    _push(`<div class="flex items-center justify-end px-4 py-3 bg-gray-50 text-right sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "actions", {}, null, _push, _parent);
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</form></div></div>`);
}
const _sfc_setup$3D = _sfc_main$3D.setup;
_sfc_main$3D.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/FormSection.vue");
  return _sfc_setup$3D ? _sfc_setup$3D(props, ctx) : void 0;
};
var JetFormSection = /* @__PURE__ */ _export_sfc(_sfc_main$3D, [["ssrRender", _sfc_ssrRender$3B]]);
const _sfc_main$3C = {};
function _sfc_ssrRender$3A(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "hidden sm:block" }, _attrs))}><div class="py-8"><div class="border-t border-gray-200"></div></div></div>`);
}
const _sfc_setup$3C = _sfc_main$3C.setup;
_sfc_main$3C.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/SectionBorder.vue");
  return _sfc_setup$3C ? _sfc_setup$3C(props, ctx) : void 0;
};
var JetSectionBorder = /* @__PURE__ */ _export_sfc(_sfc_main$3C, [["ssrRender", _sfc_ssrRender$3A]]);
const _sfc_main$3B = {
  components: {
    JetActionMessage,
    JetActionSection,
    JetButton,
    JetConfirmationModal,
    JetDangerButton,
    JetDialogModal,
    JetFormSection,
    JetInput,
    JetCheckbox: JetCheckBox,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    JetSectionBorder
  },
  props: [
    "tokens",
    "availablePermissions",
    "defaultPermissions"
  ],
  data() {
    return {
      createApiTokenForm: this.$inertia.form({
        name: "",
        permissions: this.defaultPermissions
      }),
      updateApiTokenForm: this.$inertia.form({
        permissions: []
      }),
      deleteApiTokenForm: this.$inertia.form(),
      displayingToken: false,
      managingPermissionsFor: null,
      apiTokenBeingDeleted: null
    };
  },
  methods: {
    createApiToken() {
      this.createApiTokenForm.post(route("api-tokens.store"), {
        preserveScroll: true,
        onSuccess: () => {
          this.displayingToken = true;
          this.createApiTokenForm.reset();
        }
      });
    },
    manageApiTokenPermissions(token) {
      this.updateApiTokenForm.permissions = token.abilities;
      this.managingPermissionsFor = token;
    },
    updateApiToken() {
      this.updateApiTokenForm.put(route("api-tokens.update", this.managingPermissionsFor), {
        preserveScroll: true,
        preserveState: true,
        onSuccess: () => this.managingPermissionsFor = null
      });
    },
    confirmApiTokenDeletion(token) {
      this.apiTokenBeingDeleted = token;
    },
    deleteApiToken() {
      this.deleteApiTokenForm.delete(route("api-tokens.destroy", this.apiTokenBeingDeleted), {
        preserveScroll: true,
        preserveState: true,
        onSuccess: () => this.apiTokenBeingDeleted = null
      });
    }
  }
};
function _sfc_ssrRender$3z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_jet_action_message = vue.resolveComponent("jet-action-message");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_section_border = vue.resolveComponent("jet-section-border");
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, { onSubmitted: $options.createApiToken }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create API Token `);
      } else {
        return [
          vue.createTextVNode(" Create API Token ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` API tokens allow third-party services to authenticate with our application on your behalf. `);
      } else {
        return [
          vue.createTextVNode(" API tokens allow third-party services to authenticate with our application on your behalf. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.createApiTokenForm.name,
          "onUpdate:modelValue": ($event) => $data.createApiTokenForm.name = $event,
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.createApiTokenForm.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        if ($props.availablePermissions.length > 0) {
          _push2(`<div class="col-span-6"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "permissions",
            value: "Permissions"
          }, null, _parent2, _scopeId));
          _push2(`<div class="mt-2 grid grid-cols-1 md:grid-cols-2 gap-4"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList($props.availablePermissions, (permission) => {
            _push2(`<div${_scopeId}><label class="flex items-center"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
              value: permission,
              checked: $data.createApiTokenForm.permissions,
              "onUpdate:checked": ($event) => $data.createApiTokenForm.permissions = $event
            }, null, _parent2, _scopeId));
            _push2(`<span class="ml-2 text-sm text-gray-600"${_scopeId}>${serverRenderer.ssrInterpolate(permission)}</span></label></div>`);
          });
          _push2(`<!--]--></div></div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            vue.createVNode(_component_jet_label, {
              for: "name",
              value: "Name"
            }),
            vue.createVNode(_component_jet_input, {
              id: "name",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: $data.createApiTokenForm.name,
              "onUpdate:modelValue": ($event) => $data.createApiTokenForm.name = $event,
              autofocus: ""
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input_error, {
              message: $data.createApiTokenForm.errors.name,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          $props.availablePermissions.length > 0 ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "col-span-6"
          }, [
            vue.createVNode(_component_jet_label, {
              for: "permissions",
              value: "Permissions"
            }),
            vue.createVNode("div", { class: "mt-2 grid grid-cols-1 md:grid-cols-2 gap-4" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.availablePermissions, (permission) => {
                return vue.openBlock(), vue.createBlock("div", { key: permission }, [
                  vue.createVNode("label", { class: "flex items-center" }, [
                    vue.createVNode(_component_jet_checkbox, {
                      value: permission,
                      checked: $data.createApiTokenForm.permissions,
                      "onUpdate:checked": ($event) => $data.createApiTokenForm.permissions = $event
                    }, null, 8, ["value", "checked", "onUpdate:checked"]),
                    vue.createVNode("span", { class: "ml-2 text-sm text-gray-600" }, vue.toDisplayString(permission), 1)
                  ])
                ]);
              }), 128))
            ])
          ])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_action_message, {
          on: $data.createApiTokenForm.recentlySuccessful,
          class: "mr-3"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Created. `);
            } else {
              return [
                vue.createTextVNode(" Created. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.createApiTokenForm.processing },
          disabled: $data.createApiTokenForm.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Create `);
            } else {
              return [
                vue.createTextVNode(" Create ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_action_message, {
            on: $data.createApiTokenForm.recentlySuccessful,
            class: "mr-3"
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Created. ")
            ]),
            _: 1
          }, 8, ["on"]),
          vue.createVNode(_component_jet_button, {
            class: { "opacity-25": $data.createApiTokenForm.processing },
            disabled: $data.createApiTokenForm.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Create ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  if ($props.tokens.length > 0) {
    _push(`<div>`);
    _push(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent));
    _push(`<div class="mt-10 sm:mt-0">`);
    _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, null, {
      title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Manage API Tokens `);
        } else {
          return [
            vue.createTextVNode(" Manage API Tokens ")
          ];
        }
      }),
      description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` You may delete any of your existing tokens if they are no longer needed. `);
        } else {
          return [
            vue.createTextVNode(" You may delete any of your existing tokens if they are no longer needed. ")
          ];
        }
      }),
      content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="space-y-6"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList($props.tokens, (token) => {
            _push2(`<div class="flex items-center justify-between"${_scopeId}><div${_scopeId}>${serverRenderer.ssrInterpolate(token.name)}</div><div class="flex items-center"${_scopeId}>`);
            if (token.last_used_ago) {
              _push2(`<div class="text-sm text-gray-400"${_scopeId}> Last used ${serverRenderer.ssrInterpolate(token.last_used_ago)}</div>`);
            } else {
              _push2(`<!---->`);
            }
            if ($props.availablePermissions.length > 0) {
              _push2(`<button class="cursor-pointer ml-6 text-sm text-gray-400 underline"${_scopeId}> Permissions </button>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<button class="cursor-pointer ml-6 text-sm text-red-500"${_scopeId}> Delete </button></div></div>`);
          });
          _push2(`<!--]--></div>`);
        } else {
          return [
            vue.createVNode("div", { class: "space-y-6" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.tokens, (token) => {
                return vue.openBlock(), vue.createBlock("div", {
                  class: "flex items-center justify-between",
                  key: token.id
                }, [
                  vue.createVNode("div", null, vue.toDisplayString(token.name), 1),
                  vue.createVNode("div", { class: "flex items-center" }, [
                    token.last_used_ago ? (vue.openBlock(), vue.createBlock("div", {
                      key: 0,
                      class: "text-sm text-gray-400"
                    }, " Last used " + vue.toDisplayString(token.last_used_ago), 1)) : vue.createCommentVNode("", true),
                    $props.availablePermissions.length > 0 ? (vue.openBlock(), vue.createBlock("button", {
                      key: 1,
                      class: "cursor-pointer ml-6 text-sm text-gray-400 underline",
                      onClick: ($event) => $options.manageApiTokenPermissions(token)
                    }, " Permissions ", 8, ["onClick"])) : vue.createCommentVNode("", true),
                    vue.createVNode("button", {
                      class: "cursor-pointer ml-6 text-sm text-red-500",
                      onClick: ($event) => $options.confirmApiTokenDeletion(token)
                    }, " Delete ", 8, ["onClick"])
                  ])
                ]);
              }), 128))
            ])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.displayingToken,
    onClose: ($event) => $data.displayingToken = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` API Token `);
      } else {
        return [
          vue.createTextVNode(" API Token ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}> Please copy your new API token. For your security, it won&#39;t be shown again. </div>`);
        if (_ctx.$page.props.jetstream.flash.token) {
          _push2(`<div class="mt-4 bg-gray-100 px-4 py-2 rounded font-mono text-sm text-gray-500"${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.$page.props.jetstream.flash.token)}</div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", null, " Please copy your new API token. For your security, it won't be shown again. "),
          _ctx.$page.props.jetstream.flash.token ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "mt-4 bg-gray-100 px-4 py-2 rounded font-mono text-sm text-gray-500"
          }, vue.toDisplayString(_ctx.$page.props.jetstream.flash.token), 1)) : vue.createCommentVNode("", true)
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.displayingToken = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Close `);
            } else {
              return [
                vue.createTextVNode(" Close ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.displayingToken = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Close ")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.managingPermissionsFor,
    onClose: ($event) => $data.managingPermissionsFor = null
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` API Token Permissions `);
      } else {
        return [
          vue.createTextVNode(" API Token Permissions ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid grid-cols-1 md:grid-cols-2 gap-4"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($props.availablePermissions, (permission) => {
          _push2(`<div${_scopeId}><label class="flex items-center"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
            value: permission,
            checked: $data.updateApiTokenForm.permissions,
            "onUpdate:checked": ($event) => $data.updateApiTokenForm.permissions = $event
          }, null, _parent2, _scopeId));
          _push2(`<span class="ml-2 text-sm text-gray-600"${_scopeId}>${serverRenderer.ssrInterpolate(permission)}</span></label></div>`);
        });
        _push2(`<!--]--></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid grid-cols-1 md:grid-cols-2 gap-4" }, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.availablePermissions, (permission) => {
              return vue.openBlock(), vue.createBlock("div", { key: permission }, [
                vue.createVNode("label", { class: "flex items-center" }, [
                  vue.createVNode(_component_jet_checkbox, {
                    value: permission,
                    checked: $data.updateApiTokenForm.permissions,
                    "onUpdate:checked": ($event) => $data.updateApiTokenForm.permissions = $event
                  }, null, 8, ["value", "checked", "onUpdate:checked"]),
                  vue.createVNode("span", { class: "ml-2 text-sm text-gray-600" }, vue.toDisplayString(permission), 1)
                ])
              ]);
            }), 128))
          ])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.managingPermissionsFor = null
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-2", { "opacity-25": $data.updateApiTokenForm.processing }],
          onClick: $options.updateApiToken,
          disabled: $data.updateApiTokenForm.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                vue.createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.managingPermissionsFor = null
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_button, {
            class: ["ml-2", { "opacity-25": $data.updateApiTokenForm.processing }],
            onClick: $options.updateApiToken,
            disabled: $data.updateApiTokenForm.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.apiTokenBeingDeleted,
    onClose: ($event) => $data.apiTokenBeingDeleted = null
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete API Token `);
      } else {
        return [
          vue.createTextVNode(" Delete API Token ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you would like to delete this API token? `);
      } else {
        return [
          vue.createTextVNode(" Are you sure you would like to delete this API token? ")
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.apiTokenBeingDeleted = null
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.deleteApiTokenForm.processing }],
          onClick: $options.deleteApiToken,
          disabled: $data.deleteApiTokenForm.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete `);
            } else {
              return [
                vue.createTextVNode(" Delete ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.apiTokenBeingDeleted = null
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.deleteApiTokenForm.processing }],
            onClick: $options.deleteApiToken,
            disabled: $data.deleteApiTokenForm.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Delete ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$3B = _sfc_main$3B.setup;
_sfc_main$3B.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/API/ApiTokenManager.vue");
  return _sfc_setup$3B ? _sfc_setup$3B(props, ctx) : void 0;
};
var ApiTokenManager = /* @__PURE__ */ _export_sfc(_sfc_main$3B, [["ssrRender", _sfc_ssrRender$3z]]);
var ApiTokenManager$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ApiTokenManager
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3A = {
  props: ["tokens", "availablePermissions", "defaultPermissions"],
  components: {
    ApiTokenManager,
    AppLayout
  }
};
function _sfc_ssrRender$3y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_api_token_manager = vue.resolveComponent("api-token-manager");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> API Tokens </h2>`);
      } else {
        return [
          vue.createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " API Tokens ")
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_api_token_manager, {
          tokens: $props.tokens,
          "available-permissions": $props.availablePermissions,
          "default-permissions": $props.defaultPermissions
        }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", null, [
            vue.createVNode("div", { class: "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8" }, [
              vue.createVNode(_component_api_token_manager, {
                tokens: $props.tokens,
                "available-permissions": $props.availablePermissions,
                "default-permissions": $props.defaultPermissions
              }, null, 8, ["tokens", "available-permissions", "default-permissions"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3A = _sfc_main$3A.setup;
_sfc_main$3A.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/API/Index.vue");
  return _sfc_setup$3A ? _sfc_setup$3A(props, ctx) : void 0;
};
var Index$w = /* @__PURE__ */ _export_sfc(_sfc_main$3A, [["ssrRender", _sfc_ssrRender$3y]]);
var Index$x = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$w
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3z = {};
function _sfc_ssrRender$3x(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "min-h-screen flex flex-col sm:justify-center items-center pt-6 sm:pt-0 bg-gray-100" }, _attrs))}><div class="flex flex-col items-center">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "logo", {}, null, _push, _parent);
  _push(`<div class="mt-6 text-center text-3xl font-extrabold text-gray-900">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push, _parent);
  _push(`</div></div><div class="w-full sm:max-w-md mt-6 px-6 py-4 bg-white shadow-md overflow-hidden sm:rounded-lg">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$3z = _sfc_main$3z.setup;
_sfc_main$3z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/AuthenticationCard.vue");
  return _sfc_setup$3z ? _sfc_setup$3z(props, ctx) : void 0;
};
var JetAuthenticationCard = /* @__PURE__ */ _export_sfc(_sfc_main$3z, [["ssrRender", _sfc_ssrRender$3x]]);
const _sfc_main$3y = {
  computed: {
    errors() {
      return this.$page.props.errors;
    },
    hasErrors() {
      return Object.keys(this.errors).length > 0;
    }
  }
};
function _sfc_ssrRender$3w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  if ($options.hasErrors) {
    _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><div class="font-medium text-red-600">Whoops! Something went wrong.</div><ul class="mt-3 list-disc list-inside text-sm text-red-600"><!--[-->`);
    serverRenderer.ssrRenderList($options.errors, (error, key) => {
      _push(`<li>${serverRenderer.ssrInterpolate(error)}</li>`);
    });
    _push(`<!--]--></ul></div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$3y = _sfc_main$3y.setup;
_sfc_main$3y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ValidationErrors.vue");
  return _sfc_setup$3y ? _sfc_setup$3y(props, ctx) : void 0;
};
var JetValidationErrors = /* @__PURE__ */ _export_sfc(_sfc_main$3y, [["ssrRender", _sfc_ssrRender$3w]]);
const _sfc_main$3x = {
  components: {
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  data() {
    return {
      form: this.$inertia.form({
        password: ""
      })
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("password.confirm"), {
        onFinish: () => this.form.reset()
      });
    }
  }
};
function _sfc_ssrRender$3v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, _attrs, {
    logo: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}> This is a secure area of the application. Please confirm your password before continuing. </div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          required: "",
          autocomplete: "current-password",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex justify-end mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-4", { "opacity-25": $data.form.processing }],
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Confirm `);
            } else {
              return [
                vue.createTextVNode(" Confirm ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("div", { class: "mb-4 text-sm text-gray-600" }, " This is a secure area of the application. Please confirm your password before continuing. "),
          vue.createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.submit, ["prevent"])
          }, [
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_label, {
                for: "password",
                value: "Password"
              }),
              vue.createVNode(_component_jet_input, {
                id: "password",
                type: "password",
                class: "mt-1 block w-full",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                required: "",
                autocomplete: "current-password",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "flex justify-end mt-4" }, [
              vue.createVNode(_component_jet_button, {
                class: ["ml-4", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Confirm ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3x = _sfc_main$3x.setup;
_sfc_main$3x.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/ConfirmPassword.vue");
  return _sfc_setup$3x ? _sfc_setup$3x(props, ctx) : void 0;
};
var ConfirmPassword = /* @__PURE__ */ _export_sfc(_sfc_main$3x, [["ssrRender", _sfc_ssrRender$3v]]);
var ConfirmPassword$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ConfirmPassword
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3w = {
  components: {
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  props: {
    status: String
  },
  data() {
    return {
      form: this.$inertia.form({
        email: ""
      })
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("password.email"));
    }
  }
};
function _sfc_ssrRender$3u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, _attrs, {
    logo: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}> Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one. </div>`);
        if ($props.status) {
          _push2(`<div class="mb-4 text-sm text-green-600"${_scopeId}>${serverRenderer.ssrInterpolate($props.status)}</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          class: "mt-1 block w-full",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          required: "",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex items-center justify-end mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Email Password Reset Link `);
            } else {
              return [
                vue.createTextVNode(" Email Password Reset Link ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("div", { class: "mb-4 text-sm text-gray-600" }, " Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one. "),
          $props.status ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "mb-4 text-sm text-green-600"
          }, vue.toDisplayString($props.status), 1)) : vue.createCommentVNode("", true),
          vue.createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.submit, ["prevent"])
          }, [
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_label, {
                for: "email",
                value: "Email"
              }),
              vue.createVNode(_component_jet_input, {
                id: "email",
                type: "email",
                class: "mt-1 block w-full",
                modelValue: $data.form.email,
                "onUpdate:modelValue": ($event) => $data.form.email = $event,
                required: "",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              vue.createVNode(_component_jet_button, {
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Email Password Reset Link ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3w = _sfc_main$3w.setup;
_sfc_main$3w.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/ForgotPassword.vue");
  return _sfc_setup$3w ? _sfc_setup$3w(props, ctx) : void 0;
};
var ForgotPassword = /* @__PURE__ */ _export_sfc(_sfc_main$3w, [["ssrRender", _sfc_ssrRender$3u]]);
var ForgotPassword$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ForgotPassword
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3v = {
  components: {
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetCheckbox: JetCheckBox,
    JetLabel,
    JetValidationErrors
  },
  props: {
    canResetPassword: Boolean,
    status: String
  },
  data() {
    return {
      form: this.$inertia.form({
        email: "",
        password: "",
        remember: false
      })
    };
  },
  methods: {
    submit() {
      this.form.transform((data) => ({
        ...data,
        remember: this.form.remember ? "on" : ""
      })).post(this.route("login"), {
        onFinish: () => this.form.reset("password")
      });
    }
  }
};
function _sfc_ssrRender$3t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_authentication_card_title = vue.resolveComponent("jet-authentication-card-title");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_Link = vue.resolveComponent("Link");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, _attrs, {
    logo: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_title, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="text-2xl font-bold"${_scopeId2}>Login to your account</span>`);
            } else {
              return [
                vue.createVNode("span", { class: "text-2xl font-bold" }, "Login to your account")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_title, null, {
            default: vue.withCtx(() => [
              vue.createVNode("span", { class: "text-2xl font-bold" }, "Login to your account")
            ]),
            _: 1
          })
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        if ($props.status) {
          _push2(`<div class="mb-4 text-sm text-green-600"${_scopeId}>${serverRenderer.ssrInterpolate($props.status)}</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          class: "mt-1 block w-full",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          required: "",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          required: "",
          autocomplete: "current-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="block mt-4"${_scopeId}><label class="flex items-center"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          name: "remember",
          checked: $data.form.remember,
          "onUpdate:checked": ($event) => $data.form.remember = $event
        }, null, _parent2, _scopeId));
        _push2(`<span class="ml-2 text-sm text-gray-600"${_scopeId}>Remember me</span></label></div><div class="flex items-center justify-end mt-4"${_scopeId}>`);
        if ($props.canResetPassword) {
          _push2(serverRenderer.ssrRenderComponent(_component_Link, {
            href: _ctx.route("password.request"),
            class: "underline text-sm text-gray-600 hover:text-gray-900"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Forgot your password? `);
              } else {
                return [
                  vue.createTextVNode(" Forgot your password? ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-4", { "opacity-25": $data.form.processing }],
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log in `);
            } else {
              return [
                vue.createTextVNode(" Log in ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          $props.status ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "mb-4 text-sm text-green-600"
          }, vue.toDisplayString($props.status), 1)) : vue.createCommentVNode("", true),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.submit, ["prevent"])
          }, [
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_label, {
                for: "email",
                value: "Email"
              }),
              vue.createVNode(_component_jet_input, {
                id: "email",
                type: "email",
                class: "mt-1 block w-full",
                modelValue: $data.form.email,
                "onUpdate:modelValue": ($event) => $data.form.email = $event,
                required: "",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "mt-4" }, [
              vue.createVNode(_component_jet_label, {
                for: "password",
                value: "Password"
              }),
              vue.createVNode(_component_jet_input, {
                id: "password",
                type: "password",
                class: "mt-1 block w-full",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                required: "",
                autocomplete: "current-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "block mt-4" }, [
              vue.createVNode("label", { class: "flex items-center" }, [
                vue.createVNode(_component_jet_checkbox, {
                  name: "remember",
                  checked: $data.form.remember,
                  "onUpdate:checked": ($event) => $data.form.remember = $event
                }, null, 8, ["checked", "onUpdate:checked"]),
                vue.createVNode("span", { class: "ml-2 text-sm text-gray-600" }, "Remember me")
              ])
            ]),
            vue.createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              $props.canResetPassword ? (vue.openBlock(), vue.createBlock(_component_Link, {
                key: 0,
                href: _ctx.route("password.request"),
                class: "underline text-sm text-gray-600 hover:text-gray-900"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Forgot your password? ")
                ]),
                _: 1
              }, 8, ["href"])) : vue.createCommentVNode("", true),
              vue.createVNode(_component_jet_button, {
                class: ["ml-4", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Log in ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3v = _sfc_main$3v.setup;
_sfc_main$3v.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Login.vue");
  return _sfc_setup$3v ? _sfc_setup$3v(props, ctx) : void 0;
};
var Login = /* @__PURE__ */ _export_sfc(_sfc_main$3v, [["ssrRender", _sfc_ssrRender$3t]]);
var Login$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Login
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3u = {
  components: {
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetCheckbox: JetCheckBox,
    JetLabel,
    JetValidationErrors
  },
  data() {
    return {
      form: this.$inertia.form({
        name: "",
        email: "",
        password: "",
        password_confirmation: "",
        terms: false
      })
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("register"), {
        onFinish: () => this.form.reset("password", "password_confirmation")
      });
    }
  }
};
function _sfc_ssrRender$3s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_Link = vue.resolveComponent("Link");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, _attrs, {
    logo: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autofocus: "",
          autocomplete: "name"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          class: "mt-1 block w-full",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          required: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password_confirmation",
          value: "Confirm Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password_confirmation",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: $data.form.password_confirmation,
          "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        if (_ctx.$page.props.jetstream.hasTermsAndPrivacyPolicyFeature) {
          _push2(`<div class="mt-4"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "terms" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex items-center"${_scopeId2}>`);
                _push3(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
                  name: "terms",
                  id: "terms",
                  checked: $data.form.terms,
                  "onUpdate:checked": ($event) => $data.form.terms = $event
                }, null, _parent3, _scopeId2));
                _push3(`<div class="ml-2"${_scopeId2}> I agree to the <a target="_blank"${serverRenderer.ssrRenderAttr("href", _ctx.route("terms.show"))} class="underline text-sm text-gray-600 hover:text-gray-900"${_scopeId2}>Terms of Service</a> and <a target="_blank"${serverRenderer.ssrRenderAttr("href", _ctx.route("policy.show"))} class="underline text-sm text-gray-600 hover:text-gray-900"${_scopeId2}>Privacy Policy</a></div></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode(_component_jet_checkbox, {
                      name: "terms",
                      id: "terms",
                      checked: $data.form.terms,
                      "onUpdate:checked": ($event) => $data.form.terms = $event
                    }, null, 8, ["checked", "onUpdate:checked"]),
                    vue.createVNode("div", { class: "ml-2" }, [
                      vue.createTextVNode(" I agree to the "),
                      vue.createVNode("a", {
                        target: "_blank",
                        href: _ctx.route("terms.show"),
                        class: "underline text-sm text-gray-600 hover:text-gray-900"
                      }, "Terms of Service", 8, ["href"]),
                      vue.createTextVNode(" and "),
                      vue.createVNode("a", {
                        target: "_blank",
                        href: _ctx.route("policy.show"),
                        class: "underline text-sm text-gray-600 hover:text-gray-900"
                      }, "Privacy Policy", 8, ["href"])
                    ])
                  ])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="flex items-center justify-end mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_Link, {
          href: _ctx.route("login"),
          class: "underline text-sm text-gray-600 hover:text-gray-900"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Already registered? `);
            } else {
              return [
                vue.createTextVNode(" Already registered? ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-4", { "opacity-25": $data.form.processing }],
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Register `);
            } else {
              return [
                vue.createTextVNode(" Register ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.submit, ["prevent"])
          }, [
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_label, {
                for: "name",
                value: "Name"
              }),
              vue.createVNode(_component_jet_input, {
                id: "name",
                type: "text",
                class: "mt-1 block w-full",
                modelValue: $data.form.name,
                "onUpdate:modelValue": ($event) => $data.form.name = $event,
                required: "",
                autofocus: "",
                autocomplete: "name"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "mt-4" }, [
              vue.createVNode(_component_jet_label, {
                for: "email",
                value: "Email"
              }),
              vue.createVNode(_component_jet_input, {
                id: "email",
                type: "email",
                class: "mt-1 block w-full",
                modelValue: $data.form.email,
                "onUpdate:modelValue": ($event) => $data.form.email = $event,
                required: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "mt-4" }, [
              vue.createVNode(_component_jet_label, {
                for: "password",
                value: "Password"
              }),
              vue.createVNode(_component_jet_input, {
                id: "password",
                type: "password",
                class: "mt-1 block w-full",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "mt-4" }, [
              vue.createVNode(_component_jet_label, {
                for: "password_confirmation",
                value: "Confirm Password"
              }),
              vue.createVNode(_component_jet_input, {
                id: "password_confirmation",
                type: "password",
                class: "mt-1 block w-full",
                modelValue: $data.form.password_confirmation,
                "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            _ctx.$page.props.jetstream.hasTermsAndPrivacyPolicyFeature ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "mt-4"
            }, [
              vue.createVNode(_component_jet_label, { for: "terms" }, {
                default: vue.withCtx(() => [
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode(_component_jet_checkbox, {
                      name: "terms",
                      id: "terms",
                      checked: $data.form.terms,
                      "onUpdate:checked": ($event) => $data.form.terms = $event
                    }, null, 8, ["checked", "onUpdate:checked"]),
                    vue.createVNode("div", { class: "ml-2" }, [
                      vue.createTextVNode(" I agree to the "),
                      vue.createVNode("a", {
                        target: "_blank",
                        href: _ctx.route("terms.show"),
                        class: "underline text-sm text-gray-600 hover:text-gray-900"
                      }, "Terms of Service", 8, ["href"]),
                      vue.createTextVNode(" and "),
                      vue.createVNode("a", {
                        target: "_blank",
                        href: _ctx.route("policy.show"),
                        class: "underline text-sm text-gray-600 hover:text-gray-900"
                      }, "Privacy Policy", 8, ["href"])
                    ])
                  ])
                ]),
                _: 1
              })
            ])) : vue.createCommentVNode("", true),
            vue.createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              vue.createVNode(_component_Link, {
                href: _ctx.route("login"),
                class: "underline text-sm text-gray-600 hover:text-gray-900"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Already registered? ")
                ]),
                _: 1
              }, 8, ["href"]),
              vue.createVNode(_component_jet_button, {
                class: ["ml-4", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Register ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3u = _sfc_main$3u.setup;
_sfc_main$3u.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Register.vue");
  return _sfc_setup$3u ? _sfc_setup$3u(props, ctx) : void 0;
};
var Register = /* @__PURE__ */ _export_sfc(_sfc_main$3u, [["ssrRender", _sfc_ssrRender$3s]]);
var Register$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Register
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3t = {
  components: {
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  props: {
    email: String,
    token: String
  },
  data() {
    return {
      form: this.$inertia.form({
        token: this.token,
        email: this.email,
        password: "",
        password_confirmation: ""
      })
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("password.update"), {
        onFinish: () => this.form.reset("password", "password_confirmation")
      });
    }
  }
};
function _sfc_ssrRender$3r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, _attrs, {
    logo: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          class: "mt-1 block w-full",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          required: "",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password_confirmation",
          value: "Confirm Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password_confirmation",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: $data.form.password_confirmation,
          "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex items-center justify-end mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Reset Password `);
            } else {
              return [
                vue.createTextVNode(" Reset Password ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.submit, ["prevent"])
          }, [
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_label, {
                for: "email",
                value: "Email"
              }),
              vue.createVNode(_component_jet_input, {
                id: "email",
                type: "email",
                class: "mt-1 block w-full",
                modelValue: $data.form.email,
                "onUpdate:modelValue": ($event) => $data.form.email = $event,
                required: "",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "mt-4" }, [
              vue.createVNode(_component_jet_label, {
                for: "password",
                value: "Password"
              }),
              vue.createVNode(_component_jet_input, {
                id: "password",
                type: "password",
                class: "mt-1 block w-full",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "mt-4" }, [
              vue.createVNode(_component_jet_label, {
                for: "password_confirmation",
                value: "Confirm Password"
              }),
              vue.createVNode(_component_jet_input, {
                id: "password_confirmation",
                type: "password",
                class: "mt-1 block w-full",
                modelValue: $data.form.password_confirmation,
                "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            vue.createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              vue.createVNode(_component_jet_button, {
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Reset Password ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3t = _sfc_main$3t.setup;
_sfc_main$3t.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/ResetPassword.vue");
  return _sfc_setup$3t ? _sfc_setup$3t(props, ctx) : void 0;
};
var ResetPassword = /* @__PURE__ */ _export_sfc(_sfc_main$3t, [["ssrRender", _sfc_ssrRender$3r]]);
var ResetPassword$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ResetPassword
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3s = {
  components: {
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  data() {
    return {
      recovery: false,
      form: this.$inertia.form({
        code: "",
        recovery_code: ""
      })
    };
  },
  methods: {
    toggleRecovery() {
      this.recovery ^= true;
      this.$nextTick(() => {
        if (this.recovery) {
          this.$refs.recovery_code.focus();
          this.form.code = "";
        } else {
          this.$refs.code.focus();
          this.form.recovery_code = "";
        }
      });
    },
    submit() {
      this.form.post(this.route("two-factor.login"));
    }
  }
};
function _sfc_ssrRender$3q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = vue.resolveComponent("jet-validation-errors");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, _attrs, {
    logo: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}>`);
        if (!$data.recovery) {
          _push2(`<!--[--> Please confirm access to your account by entering the authentication code provided by your authenticator application. <!--]-->`);
        } else {
          _push2(`<!--[--> Please confirm access to your account by entering one of your emergency recovery codes. <!--]-->`);
        }
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}>`);
        if (!$data.recovery) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "code",
            value: "Code"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            ref: "code",
            id: "code",
            type: "text",
            inputmode: "numeric",
            class: "mt-1 block w-full",
            modelValue: $data.form.code,
            "onUpdate:modelValue": ($event) => $data.form.code = $event,
            autofocus: "",
            autocomplete: "one-time-code"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "recovery_code",
            value: "Recovery Code"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            ref: "recovery_code",
            id: "recovery_code",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.recovery_code,
            "onUpdate:modelValue": ($event) => $data.form.recovery_code = $event,
            autocomplete: "one-time-code"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        }
        _push2(`<div class="flex items-center justify-end mt-4"${_scopeId}><button type="button" class="text-sm text-gray-600 hover:text-gray-900 underline cursor-pointer"${_scopeId}>`);
        if (!$data.recovery) {
          _push2(`<!--[--> Use a recovery code <!--]-->`);
        } else {
          _push2(`<!--[--> Use an authentication code <!--]-->`);
        }
        _push2(`</button>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-4", { "opacity-25": $data.form.processing }],
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log in `);
            } else {
              return [
                vue.createTextVNode(" Log in ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("div", { class: "mb-4 text-sm text-gray-600" }, [
            !$data.recovery ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 0 }, [
              vue.createTextVNode(" Please confirm access to your account by entering the authentication code provided by your authenticator application. ")
            ], 64)) : (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 1 }, [
              vue.createTextVNode(" Please confirm access to your account by entering one of your emergency recovery codes. ")
            ], 64))
          ]),
          vue.createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.submit, ["prevent"])
          }, [
            !$data.recovery ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
              vue.createVNode(_component_jet_label, {
                for: "code",
                value: "Code"
              }),
              vue.createVNode(_component_jet_input, {
                ref: "code",
                id: "code",
                type: "text",
                inputmode: "numeric",
                class: "mt-1 block w-full",
                modelValue: $data.form.code,
                "onUpdate:modelValue": ($event) => $data.form.code = $event,
                autofocus: "",
                autocomplete: "one-time-code"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ])) : (vue.openBlock(), vue.createBlock("div", { key: 1 }, [
              vue.createVNode(_component_jet_label, {
                for: "recovery_code",
                value: "Recovery Code"
              }),
              vue.createVNode(_component_jet_input, {
                ref: "recovery_code",
                id: "recovery_code",
                type: "text",
                class: "mt-1 block w-full",
                modelValue: $data.form.recovery_code,
                "onUpdate:modelValue": ($event) => $data.form.recovery_code = $event,
                autocomplete: "one-time-code"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ])),
            vue.createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              vue.createVNode("button", {
                type: "button",
                class: "text-sm text-gray-600 hover:text-gray-900 underline cursor-pointer",
                onClick: vue.withModifiers($options.toggleRecovery, ["prevent"])
              }, [
                !$data.recovery ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 0 }, [
                  vue.createTextVNode(" Use a recovery code ")
                ], 64)) : (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 1 }, [
                  vue.createTextVNode(" Use an authentication code ")
                ], 64))
              ], 8, ["onClick"]),
              vue.createVNode(_component_jet_button, {
                class: ["ml-4", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Log in ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3s = _sfc_main$3s.setup;
_sfc_main$3s.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/TwoFactorChallenge.vue");
  return _sfc_setup$3s ? _sfc_setup$3s(props, ctx) : void 0;
};
var TwoFactorChallenge = /* @__PURE__ */ _export_sfc(_sfc_main$3s, [["ssrRender", _sfc_ssrRender$3q]]);
var TwoFactorChallenge$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": TwoFactorChallenge
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3r = {
  components: {
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton
  },
  props: {
    status: String
  },
  data() {
    return {
      form: this.$inertia.form()
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("verification.send"));
    }
  },
  computed: {
    verificationLinkSent() {
      return this.status === "verification-link-sent";
    }
  }
};
function _sfc_ssrRender$3p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_authentication_card = vue.resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = vue.resolveComponent("jet-authentication-card-logo");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_Link = vue.resolveComponent("Link");
  _push(serverRenderer.ssrRenderComponent(_component_jet_authentication_card, _attrs, {
    logo: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}> Thanks for signing up! Before getting started, could you verify your email address by clicking on the link we just emailed to you? If you didn&#39;t receive the email, we will gladly send you another. </div>`);
        if ($options.verificationLinkSent) {
          _push2(`<div class="mb-4 text-sm text-green-600"${_scopeId}> A new verification link has been sent to the email address you provided during registration. </div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<form${_scopeId}><div class="mt-4 flex items-center justify-between"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Resend Verification Email `);
            } else {
              return [
                vue.createTextVNode(" Resend Verification Email ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_Link, {
          href: _ctx.route("logout"),
          method: "post",
          as: "button",
          class: "underline text-sm text-gray-600 hover:text-gray-900"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Log Out`);
            } else {
              return [
                vue.createTextVNode("Log Out")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("div", { class: "mb-4 text-sm text-gray-600" }, " Thanks for signing up! Before getting started, could you verify your email address by clicking on the link we just emailed to you? If you didn't receive the email, we will gladly send you another. "),
          $options.verificationLinkSent ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "mb-4 text-sm text-green-600"
          }, " A new verification link has been sent to the email address you provided during registration. ")) : vue.createCommentVNode("", true),
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.submit, ["prevent"])
          }, [
            vue.createVNode("div", { class: "mt-4 flex items-center justify-between" }, [
              vue.createVNode(_component_jet_button, {
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Resend Verification Email ")
                ]),
                _: 1
              }, 8, ["class", "disabled"]),
              vue.createVNode(_component_Link, {
                href: _ctx.route("logout"),
                method: "post",
                as: "button",
                class: "underline text-sm text-gray-600 hover:text-gray-900"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Log Out")
                ]),
                _: 1
              }, 8, ["href"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3r = _sfc_main$3r.setup;
_sfc_main$3r.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/VerifyEmail.vue");
  return _sfc_setup$3r ? _sfc_setup$3r(props, ctx) : void 0;
};
var VerifyEmail = /* @__PURE__ */ _export_sfc(_sfc_main$3r, [["ssrRender", _sfc_ssrRender$3p]]);
var VerifyEmail$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": VerifyEmail
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3q = {
  props: {
    showOnMobile: Boolean
  }
};
function _sfc_ssrRender$3o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<aside${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: [
      $props.showOnMobile ? "flex flex-col w-full" : "hidden",
      "xl:order-first xl:flex xl:flex-col flex-shrink-0 xl:w-96 border-r border-gray-200 bg-white"
    ]
  }, _attrs))}><div class="p-6 border-b border-gray-100">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "header", {}, null, _push, _parent);
  _push(`</div><div class="flex-1 min-h-0 overflow-y-auto">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></aside>`);
}
const _sfc_setup$3q = _sfc_main$3q.setup;
_sfc_main$3q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/PageAside.vue");
  return _sfc_setup$3q ? _sfc_setup$3q(props, ctx) : void 0;
};
var PageAside = /* @__PURE__ */ _export_sfc(_sfc_main$3q, [["ssrRender", _sfc_ssrRender$3o]]);
const _sfc_main$3p = {
  props: { href: String, current: Boolean }
};
function _sfc_ssrRender$3n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = vue.resolveComponent("Link");
  _push(serverRenderer.ssrRenderComponent(_component_Link, vue.mergeProps({
    href: $props.href,
    class: [
      $props.current ? "bg-gray-50" : "",
      "relative px-6 py-5 flex items-center space-x-3 hover:bg-gray-50"
    ]
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$3p = _sfc_main$3p.setup;
_sfc_main$3p.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Links/AsideLink.vue");
  return _sfc_setup$3p ? _sfc_setup$3p(props, ctx) : void 0;
};
var AsideLink = /* @__PURE__ */ _export_sfc(_sfc_main$3p, [["ssrRender", _sfc_ssrRender$3n]]);
const _sfc_main$3o = {
  components: {
    PlusIcon: solid.PlusIcon,
    ButtonLink
  },
  props: {
    heading: String,
    subtitle: String,
    buttonText: String,
    href: String,
    align: {
      type: String,
      default: "center"
    },
    showIcon: {
      type: Boolean,
      default: true
    }
  }
};
function _sfc_ssrRender$3m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_PlusIcon = vue.resolveComponent("PlusIcon");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: ["p-6", {
      "text-center": $props.align === "center",
      "text-right": $props.align === "right",
      "text-left": $props.align === "left"
    }]
  }, _attrs))}>`);
  if ($props.showIcon) {
    _push(`<svg class="${serverRenderer.ssrRenderClass([{
      "mx-auto": $props.align === "center",
      "ml-auto": $props.align === "right",
      "mr-auto": $props.align === "left"
    }, "mb-2 h-12 w-12 text-gray-400"])}" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"><path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"></path></svg>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<h3 class="text-sm text-gray-700">${serverRenderer.ssrInterpolate($props.heading)}</h3><p class="mt-1 text-sm text-gray-500">${serverRenderer.ssrInterpolate($props.subtitle)}</p>`);
  if ($props.buttonText && $props.href) {
    _push(`<div class="mt-6">`);
    _push(serverRenderer.ssrRenderComponent(_component_button_link, { href: $props.href }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(serverRenderer.ssrRenderComponent(_component_PlusIcon, {
            class: "-ml-1 mr-2 h-5 w-5",
            "aria-hidden": "true"
          }, null, _parent2, _scopeId));
          _push2(` ${serverRenderer.ssrInterpolate($props.buttonText)}`);
        } else {
          return [
            vue.createVNode(_component_PlusIcon, {
              class: "-ml-1 mr-2 h-5 w-5",
              "aria-hidden": "true"
            }),
            vue.createTextVNode(" " + vue.toDisplayString($props.buttonText), 1)
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$3o = _sfc_main$3o.setup;
_sfc_main$3o.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/EmptyState.vue");
  return _sfc_setup$3o ? _sfc_setup$3o(props, ctx) : void 0;
};
var EmptyState = /* @__PURE__ */ _export_sfc(_sfc_main$3o, [["ssrRender", _sfc_ssrRender$3m]]);
const _sfc_main$3n = {
  components: {
    PageAside,
    AsideLink,
    ButtonLink,
    EmptyState,
    JetSectionTitle: SectionTitle
  },
  props: {
    blocks: Array
  },
  computed: {
    blocksLength: function() {
      return this.blocks.length;
    }
  }
};
function _sfc_ssrRender$3l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_page_aside = vue.resolveComponent("page-aside");
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_aside_link = vue.resolveComponent("aside-link");
  const _component_empty_state = vue.resolveComponent("empty-state");
  _push(serverRenderer.ssrRenderComponent(_component_page_aside, vue.mergeProps({
    showOnMobile: _ctx.route().current("blocks.index")
  }, _attrs), {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Nursery Blocks`);
            } else {
              return [
                vue.createTextVNode("Nursery Blocks")
              ];
            }
          }),
          aside: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_button_link, {
                href: _ctx.route("blocks.create")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`New Block`);
                  } else {
                    return [
                      vue.createTextVNode("New Block")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_button_link, {
                  href: _ctx.route("blocks.create")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("New Block")
                  ]),
                  _: 1
                }, 8, ["href"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_section_title, null, {
            title: vue.withCtx(() => [
              vue.createTextVNode("Nursery Blocks")
            ]),
            aside: vue.withCtx(() => [
              vue.createVNode(_component_button_link, {
                href: _ctx.route("blocks.create")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New Block")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            _: 1
          })
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white"${_scopeId}><ul class="divide-y divide-gray-200"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($props.blocks, (block) => {
          _push2(`<li class="bg-white"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_aside_link, {
            href: _ctx.route("blocks.show", block.id),
            current: _ctx.route().current("blocks.show", block.id) || _ctx.route().current("blocks.edit", block.id)
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex-1 min-w-0"${_scopeId2}><div class="focus:outline-none"${_scopeId2}><span class="absolute inset-0" aria-hidden="true"${_scopeId2}></span><div class="text-sm text-gray-900"${_scopeId2}><p${_scopeId2}>${serverRenderer.ssrInterpolate(block.BlockDisplayName)}</p>`);
                if (block.nursery_location) {
                  _push3(`<p class="text-sm text-gray-500 truncate"${serverRenderer.ssrRenderAttr("set", { city: _ctx.city, zip: _ctx.zip, state: _ctx.state } = block.nursery_location)}${_scopeId2}>`);
                  if (_ctx.city) {
                    _push3(`<!--[--><strong${_scopeId2}>City : ${serverRenderer.ssrInterpolate(_ctx.city)}</strong>\xA0 <!--]-->`);
                  } else {
                    _push3(`<!---->`);
                  }
                  if (_ctx.zip) {
                    _push3(`<!--[--><strong${_scopeId2}>Zip : ${serverRenderer.ssrInterpolate(_ctx.zip)}</strong>\xA0 <!--]-->`);
                  } else {
                    _push3(`<!---->`);
                  }
                  if (_ctx.state) {
                    _push3(`<!--[--><strong${_scopeId2}>State : ${serverRenderer.ssrInterpolate(_ctx.state)}</strong>\xA0 <!--]-->`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></div></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                    vue.createVNode("div", { class: "focus:outline-none" }, [
                      vue.createVNode("span", {
                        class: "absolute inset-0",
                        "aria-hidden": "true"
                      }),
                      vue.createVNode("div", { class: "text-sm text-gray-900" }, [
                        vue.createVNode("p", null, vue.toDisplayString(block.BlockDisplayName), 1),
                        block.nursery_location ? (vue.openBlock(), vue.createBlock("p", {
                          key: 0,
                          class: "text-sm text-gray-500 truncate",
                          set: { city: _ctx.city, zip: _ctx.zip, state: _ctx.state } = block.nursery_location
                        }, [
                          _ctx.city ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 0 }, [
                            vue.createVNode("strong", null, "City : " + vue.toDisplayString(_ctx.city), 1),
                            vue.createTextVNode("\xA0 ")
                          ], 64)) : vue.createCommentVNode("", true),
                          _ctx.zip ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 1 }, [
                            vue.createVNode("strong", null, "Zip : " + vue.toDisplayString(_ctx.zip), 1),
                            vue.createTextVNode("\xA0 ")
                          ], 64)) : vue.createCommentVNode("", true),
                          _ctx.state ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 2 }, [
                            vue.createVNode("strong", null, "State : " + vue.toDisplayString(_ctx.state), 1),
                            vue.createTextVNode("\xA0 ")
                          ], 64)) : vue.createCommentVNode("", true)
                        ], 8, ["set"])) : vue.createCommentVNode("", true)
                      ])
                    ])
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</li>`);
        });
        _push2(`<!--]--></ul></div>`);
        if ($options.blocksLength < 1 && _ctx.route().current("blocks.index")) {
          _push2(serverRenderer.ssrRenderComponent(_component_empty_state, {
            heading: "No Blocks",
            subtitle: "Get started by creating a new block.",
            "button-text": "New Block",
            href: _ctx.route("blocks.create")
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", { class: "bg-white" }, [
            vue.createVNode("ul", { class: "divide-y divide-gray-200" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.blocks, (block) => {
                return vue.openBlock(), vue.createBlock("li", {
                  key: block.id,
                  class: "bg-white"
                }, [
                  vue.createVNode(_component_aside_link, {
                    href: _ctx.route("blocks.show", block.id),
                    current: _ctx.route().current("blocks.show", block.id) || _ctx.route().current("blocks.edit", block.id)
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                        vue.createVNode("div", { class: "focus:outline-none" }, [
                          vue.createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          vue.createVNode("div", { class: "text-sm text-gray-900" }, [
                            vue.createVNode("p", null, vue.toDisplayString(block.BlockDisplayName), 1),
                            block.nursery_location ? (vue.openBlock(), vue.createBlock("p", {
                              key: 0,
                              class: "text-sm text-gray-500 truncate",
                              set: { city: _ctx.city, zip: _ctx.zip, state: _ctx.state } = block.nursery_location
                            }, [
                              _ctx.city ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 0 }, [
                                vue.createVNode("strong", null, "City : " + vue.toDisplayString(_ctx.city), 1),
                                vue.createTextVNode("\xA0 ")
                              ], 64)) : vue.createCommentVNode("", true),
                              _ctx.zip ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 1 }, [
                                vue.createVNode("strong", null, "Zip : " + vue.toDisplayString(_ctx.zip), 1),
                                vue.createTextVNode("\xA0 ")
                              ], 64)) : vue.createCommentVNode("", true),
                              _ctx.state ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 2 }, [
                                vue.createVNode("strong", null, "State : " + vue.toDisplayString(_ctx.state), 1),
                                vue.createTextVNode("\xA0 ")
                              ], 64)) : vue.createCommentVNode("", true)
                            ], 8, ["set"])) : vue.createCommentVNode("", true)
                          ])
                        ])
                      ])
                    ]),
                    _: 2
                  }, 1032, ["href", "current"])
                ]);
              }), 128))
            ])
          ]),
          $options.blocksLength < 1 && _ctx.route().current("blocks.index") ? (vue.openBlock(), vue.createBlock(_component_empty_state, {
            key: 0,
            heading: "No Blocks",
            subtitle: "Get started by creating a new block.",
            "button-text": "New Block",
            href: _ctx.route("blocks.create")
          }, null, 8, ["href"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3n = _sfc_main$3n.setup;
_sfc_main$3n.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Blocks/BlocksAside.vue");
  return _sfc_setup$3n ? _sfc_setup$3n(props, ctx) : void 0;
};
var BlocksAside = /* @__PURE__ */ _export_sfc(_sfc_main$3n, [["ssrRender", _sfc_ssrRender$3l]]);
var BlocksAside$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": BlocksAside
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3m = {
  components: { ChevronLeftIcon: solid.ChevronLeftIcon },
  props: { href: String }
};
function _sfc_ssrRender$3k(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = vue.resolveComponent("Link");
  const _component_ChevronLeftIcon = vue.resolveComponent("ChevronLeftIcon");
  _push(serverRenderer.ssrRenderComponent(_component_Link, vue.mergeProps({
    href: $props.href,
    class: "-ml-1 inline-flex items-center space-x-3 text-sm text-blue-gray-900"
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_ChevronLeftIcon, {
          class: "h-5 w-5 text-blue-gray-400",
          "aria-hidden": "true"
        }, null, _parent2, _scopeId));
        _push2(`<span${_scopeId}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        _push2(`</span>`);
      } else {
        return [
          vue.createVNode(_component_ChevronLeftIcon, {
            class: "h-5 w-5 text-blue-gray-400",
            "aria-hidden": "true"
          }),
          vue.createVNode("span", null, [
            vue.renderSlot(_ctx.$slots, "default")
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$3m = _sfc_main$3m.setup;
_sfc_main$3m.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Links/BackLink.vue");
  return _sfc_setup$3m ? _sfc_setup$3m(props, ctx) : void 0;
};
var BackLink = /* @__PURE__ */ _export_sfc(_sfc_main$3m, [["ssrRender", _sfc_ssrRender$3k]]);
const _sfc_main$3l = {
  props: { dontShowOnMobile: Boolean }
};
function _sfc_ssrRender$3j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<main${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: [
      $props.dontShowOnMobile ? "hidden lg:block" : "",
      "flex-1 relative z-0 overflow-y-auto focus:outline-none md:order-last"
    ]
  }, _attrs))}><div class="py-6 sm:px-6">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></main>`);
}
const _sfc_setup$3l = _sfc_main$3l.setup;
_sfc_main$3l.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/MainArea.vue");
  return _sfc_setup$3l ? _sfc_setup$3l(props, ctx) : void 0;
};
var MainArea = /* @__PURE__ */ _export_sfc(_sfc_main$3l, [["ssrRender", _sfc_ssrRender$3j]]);
const _sfc_main$3k = {
  components: {
    BlocksAside,
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    blocks() {
      return this.$page.props.blocks;
    },
    isIndex() {
      return route().current("blocks.index");
    }
  }
};
function _sfc_ssrRender$3i(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  const _component_blocks_aside = vue.resolveComponent("blocks-aside");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb" class="xl:hidden"${_scopeId2}><div class="px-4 md:pb-2"${_scopeId2}>`);
                if (_ctx.route().current("blocks.*")) {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("blocks.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Blocks`);
                      } else {
                        return [
                          vue.createTextVNode("Blocks")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("blocks.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("blocks.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Blocks")
                      ]),
                      _: 1
                    }, 8, ["href"])) : vue.createCommentVNode("", true)
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_blocks_aside, { blocks: $options.blocks }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
              default: vue.withCtx(() => [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("blocks.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("blocks.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Blocks")
                      ]),
                      _: 1
                    }, 8, ["href"])) : vue.createCommentVNode("", true)
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ]),
              _: 3
            }, 8, ["dontShowOnMobile"]),
            vue.createVNode(_component_blocks_aside, { blocks: $options.blocks }, null, 8, ["blocks"])
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$3k = _sfc_main$3k.setup;
_sfc_main$3k.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Blocks/BlocksLayout.vue");
  return _sfc_setup$3k ? _sfc_setup$3k(props, ctx) : void 0;
};
var BlocksLayout = /* @__PURE__ */ _export_sfc(_sfc_main$3k, [["ssrRender", _sfc_ssrRender$3i]]);
var BlocksLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": BlocksLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3j = {
  components: {
    Switch: vue$1.Switch,
    SwitchDescription: vue$1.SwitchDescription,
    SwitchGroup: vue$1.SwitchGroup,
    SwitchLabel: vue$1.SwitchLabel,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    SelectBox
  },
  data() {
    return {
      locations: this.$page.props.locations,
      selectedLocation: null,
      form: this.$inertia.form({
        _method: "POST",
        name: "",
        has_places: false,
        nursery_location_id: null
      })
    };
  },
  watch: {
    selectedLocation(location) {
      this.form.nursery_location_id = location.id;
    }
  },
  methods: {
    createBlock() {
      this.form.post(route("blocks.store"), {
        errorBag: "createBlock",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$3h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_SelectBox = vue.resolveComponent("SelectBox");
  const _component_SwitchGroup = vue.resolveComponent("SwitchGroup");
  const _component_SwitchLabel = vue.resolveComponent("SwitchLabel");
  const _component_SwitchDescription = vue.resolveComponent("SwitchDescription");
  const _component_Switch = vue.resolveComponent("Switch");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.createBlock }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create a Block`);
      } else {
        return [
          vue.createTextVNode("Create a Block")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a new nursery block where you sell or grow plants. `);
      } else {
        return [
          vue.createTextVNode(" Create a new nursery block where you sell or grow plants. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid col-span-6 gap-4"${_scopeId}><div class="grid grid-cols-6 gap-4"${_scopeId}><div class="col-span-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Block Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SelectBox, {
          items: $data.locations,
          selectedItem: $data.selectedLocation,
          modelValue: $data.selectedLocation,
          "onUpdate:modelValue": ($event) => $data.selectedLocation = $event,
          labelValue: "Select Nursery Location"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.nursery_location_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-between col-span-6"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="flex-grow flex flex-col mr-2"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-900"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Has Places?`);
                  } else {
                    return [
                      vue.createTextVNode("Has Places?")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchDescription, {
                as: "span",
                class: "text-sm text-gray-500"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Indicate whether this block has individual places for storing inventory by row and pot number.`);
                  } else {
                    return [
                      vue.createTextVNode("Indicate whether this block has individual places for storing inventory by row and pot number.")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</span>`);
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.form.has_places,
                "onUpdate:modelValue": ($event) => $data.form.has_places = $event,
                class: [
                  $data.form.has_places ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.form.has_places ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.has_places ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("span", { class: "flex-grow flex flex-col mr-2" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Has Places?")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchDescription, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Indicate whether this block has individual places for storing inventory by row and pot number.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.form.has_places,
                  "onUpdate:modelValue": ($event) => $data.form.has_places = $event,
                  class: [
                    $data.form.has_places ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.form.has_places ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid col-span-6 gap-4" }, [
            vue.createVNode("div", { class: "grid grid-cols-6 gap-4" }, [
              vue.createVNode("div", { class: "col-span-6" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Block Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-5" }, [
                vue.createVNode(_component_SelectBox, {
                  items: $data.locations,
                  selectedItem: $data.selectedLocation,
                  modelValue: $data.selectedLocation,
                  "onUpdate:modelValue": ($event) => $data.selectedLocation = $event,
                  labelValue: "Select Nursery Location"
                }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.nursery_location_id,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode(_component_SwitchGroup, {
                as: "div",
                class: "flex items-center justify-between col-span-6"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "flex-grow flex flex-col mr-2" }, [
                    vue.createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm text-gray-900"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Has Places?")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_SwitchDescription, {
                      as: "span",
                      class: "text-sm text-gray-500"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Indicate whether this block has individual places for storing inventory by row and pot number.")
                      ]),
                      _: 1
                    })
                  ]),
                  vue.createVNode(_component_Switch, {
                    modelValue: $data.form.has_places,
                    "onUpdate:modelValue": ($event) => $data.form.has_places = $event,
                    class: [
                      $data.form.has_places ? "bg-green-600" : "bg-gray-200",
                      "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                    ]
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.has_places ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ]),
                    _: 1
                  }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                ]),
                _: 1
              })
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Block`);
            } else {
              return [
                vue.createTextVNode("Save Block")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Block")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3j = _sfc_main$3j.setup;
_sfc_main$3j.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Blocks/CreateBlockForm.vue");
  return _sfc_setup$3j ? _sfc_setup$3j(props, ctx) : void 0;
};
var CreateBlockForm = /* @__PURE__ */ _export_sfc(_sfc_main$3j, [["ssrRender", _sfc_ssrRender$3h]]);
var CreateBlockForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateBlockForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3i = {
  components: {
    CreateBlockForm,
    BlocksLayout
  }
};
function _sfc_ssrRender$3g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_blocks_layout = vue.resolveComponent("blocks-layout");
  const _component_create_block_form = vue.resolveComponent("create-block-form");
  _push(serverRenderer.ssrRenderComponent(_component_blocks_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_block_form, { class: "max-w-screen-md" }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_block_form, { class: "max-w-screen-md" })
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3i = _sfc_main$3i.setup;
_sfc_main$3i.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Blocks/Create.vue");
  return _sfc_setup$3i ? _sfc_setup$3i(props, ctx) : void 0;
};
var Create$o = /* @__PURE__ */ _export_sfc(_sfc_main$3i, [["ssrRender", _sfc_ssrRender$3g]]);
var Create$p = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$o
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3h = {
  props: { block: Object },
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingBlockDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmBlockDeletion() {
      this.confirmingBlockDeletion = true;
    },
    deleteBlock() {
      this.form.delete(route("blocks.destroy", this.block), {
        errorBag: "deleteBlock"
      });
    }
  }
};
function _sfc_ssrRender$3f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Block `);
      } else {
        return [
          vue.createTextVNode(" Delete Block ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete this block. `);
      } else {
        return [
          vue.createTextVNode(" Delete this block. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a block is deleted, all places in this block will be deleted, and all inventory assigned to this block will be given an unnasigned location. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmBlockDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Block `);
            } else {
              return [
                vue.createTextVNode(" Delete Block ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingBlockDeletion,
          onClose: ($event) => $data.confirmingBlockDeletion = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Block `);
            } else {
              return [
                vue.createTextVNode(" Delete Block ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this block? `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete this block? ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingBlockDeletion = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteBlock,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Block `);
                  } else {
                    return [
                      vue.createTextVNode(" Delete Block ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingBlockDeletion = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.deleteBlock,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Delete Block ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a block is deleted, all places in this block will be deleted, and all inventory assigned to this block will be given an unnasigned location. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmBlockDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete Block ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingBlockDeletion,
            onClose: ($event) => $data.confirmingBlockDeletion = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Delete Block ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete this block? ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingBlockDeletion = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteBlock,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Delete Block ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3h = _sfc_main$3h.setup;
_sfc_main$3h.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Blocks/DeleteBlockForm.vue");
  return _sfc_setup$3h ? _sfc_setup$3h(props, ctx) : void 0;
};
var DeleteBlockForm = /* @__PURE__ */ _export_sfc(_sfc_main$3h, [["ssrRender", _sfc_ssrRender$3f]]);
var DeleteBlockForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteBlockForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3g = {
  components: {
    Switch: vue$1.Switch,
    SwitchDescription: vue$1.SwitchDescription,
    SwitchGroup: vue$1.SwitchGroup,
    SwitchLabel: vue$1.SwitchLabel,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    SelectBox
  },
  props: { block: Object },
  data() {
    return {
      locations: this.$page.props.locations,
      selectedLocation: this.$page.props.locations.find(
        (location) => location.id == this.block.nursery_location_id
      ),
      form: this.$inertia.form({
        _method: "PATCH",
        name: this.block.name,
        has_places: this.block.has_places,
        nursery_location_id: this.block.nursery_location_id
      })
    };
  },
  watch: {
    selectedLocation(location) {
      this.form.nursery_location_id = location.id;
    }
  },
  methods: {
    updateBlock() {
      this.form.patch(route("blocks.update", this.block), {
        errorBag: "updateBlock",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$3e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_SelectBox = vue.resolveComponent("SelectBox");
  const _component_SwitchGroup = vue.resolveComponent("SwitchGroup");
  const _component_SwitchLabel = vue.resolveComponent("SwitchLabel");
  const _component_SwitchDescription = vue.resolveComponent("SwitchDescription");
  const _component_Switch = vue.resolveComponent("Switch");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.updateBlock }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.block.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.block.name), 1)
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid grid-cols-6 gap-4 col-span-6"${_scopeId}><div class="col-span-6 md:col-span-3 lg:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Block Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 md:col-span-3 lg:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SelectBox, {
          items: $data.locations,
          selectedItem: $data.selectedLocation,
          modelValue: $data.selectedLocation,
          "onUpdate:modelValue": ($event) => $data.selectedLocation = $event,
          labelValue: "Select Nursery Location"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.nursery_location_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-between col-span-6 xl:col-span-2"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="flex-grow flex flex-col mr-2"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-900"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Has Places?`);
                  } else {
                    return [
                      vue.createTextVNode("Has Places?")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchDescription, {
                as: "span",
                class: "text-sm text-gray-500"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Indicate whether this block has individual places for storing inventory by row and pot number.`);
                  } else {
                    return [
                      vue.createTextVNode("Indicate whether this block has individual places for storing inventory by row and pot number.")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</span>`);
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.form.has_places,
                "onUpdate:modelValue": ($event) => $data.form.has_places = $event,
                class: [
                  $data.form.has_places ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.form.has_places ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.has_places ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("span", { class: "flex-grow flex flex-col mr-2" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Has Places?")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchDescription, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Indicate whether this block has individual places for storing inventory by row and pot number.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.form.has_places,
                  "onUpdate:modelValue": ($event) => $data.form.has_places = $event,
                  class: [
                    $data.form.has_places ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.form.has_places ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid grid-cols-6 gap-4 col-span-6" }, [
            vue.createVNode("div", { class: "col-span-6 md:col-span-3 lg:col-span-2" }, [
              vue.createVNode(_component_jet_label, {
                for: "name",
                value: "Block Name"
              }),
              vue.createVNode(_component_jet_input, {
                id: "name",
                type: "text",
                class: "mt-1 block w-full",
                modelValue: $data.form.name,
                "onUpdate:modelValue": ($event) => $data.form.name = $event,
                required: "",
                autocomplete: "off"
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.form.errors.name,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            vue.createVNode("div", { class: "col-span-6 md:col-span-3 lg:col-span-2" }, [
              vue.createVNode(_component_SelectBox, {
                items: $data.locations,
                selectedItem: $data.selectedLocation,
                modelValue: $data.selectedLocation,
                "onUpdate:modelValue": ($event) => $data.selectedLocation = $event,
                labelValue: "Select Nursery Location"
              }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.form.errors.nursery_location_id,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            vue.createVNode(_component_SwitchGroup, {
              as: "div",
              class: "flex items-center justify-between col-span-6 xl:col-span-2"
            }, {
              default: vue.withCtx(() => [
                vue.createVNode("span", { class: "flex-grow flex flex-col mr-2" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Has Places?")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchDescription, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Indicate whether this block has individual places for storing inventory by row and pot number.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.form.has_places,
                  "onUpdate:modelValue": ($event) => $data.form.has_places = $event,
                  class: [
                    $data.form.has_places ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.form.has_places ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ]),
              _: 1
            })
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
          disabled: $data.form.processing || !$data.form.isDirty
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Block`);
            } else {
              return [
                vue.createTextVNode("Save Block")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
            disabled: $data.form.processing || !$data.form.isDirty
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Block")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3g = _sfc_main$3g.setup;
_sfc_main$3g.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Blocks/UpdateBlockForm.vue");
  return _sfc_setup$3g ? _sfc_setup$3g(props, ctx) : void 0;
};
var UpdateBlockForm = /* @__PURE__ */ _export_sfc(_sfc_main$3g, [["ssrRender", _sfc_ssrRender$3e]]);
var UpdateBlockForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateBlockForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3f = {
  components: {
    JetActionMessage,
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput
  },
  props: { block: Object },
  data() {
    return {
      creatingPlaces: false,
      form: this.$inertia.form({
        _method: "POST",
        block_id: this.block.id,
        num_rows: null,
        starting_row_num: null,
        num_plants_per_row: null
      })
    };
  },
  methods: {
    createPlaces() {
      this.form.post(route("places.store"), {
        preserveScroll: false,
        preserveState: false
      });
    }
  }
};
function _sfc_ssrRender$3d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    onClick: ($event) => $data.creatingPlaces = true
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Add Places`);
      } else {
        return [
          vue.createTextVNode("Add Places")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.creatingPlaces,
    onClose: ($event) => $data.creatingPlaces = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Add Plant Places`);
      } else {
        return [
          vue.createTextVNode("Add Plant Places")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create places in block ${serverRenderer.ssrInterpolate($props.block.name)} to assign individual inventory to. `);
      } else {
        return [
          vue.createTextVNode(" Create places in block " + vue.toDisplayString($props.block.name) + " to assign individual inventory to. ", 1)
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<form${_scopeId}><div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "num_rows",
          value: "Number of Rows"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "num_rows",
          type: "number",
          class: "mt-1 block w-full",
          modelValue: $data.form.num_rows,
          "onUpdate:modelValue": ($event) => $data.form.num_rows = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.num_rows,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "starting_row_num",
          value: "Starting Row Number"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "starting_row_num",
          type: "number",
          class: "mt-1 block w-full",
          modelValue: $data.form.starting_row_num,
          "onUpdate:modelValue": ($event) => $data.form.starting_row_num = $event,
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.starting_row_num,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "num_plants_per_row",
          value: "Plants Per Row"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "num_plants_per_row",
          type: "number",
          class: "mt-1 block w-full",
          modelValue: $data.form.num_plants_per_row,
          "onUpdate:modelValue": ($event) => $data.form.num_plants_per_row = $event,
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.num_plants_per_row,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.createPlaces, ["prevent"]),
            onKeyup: vue.withKeys($options.createPlaces, ["enter"])
          }, [
            vue.createVNode("div", { class: "col-span-6" }, [
              vue.createVNode("div", { class: "grid gap-4" }, [
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "num_rows",
                    value: "Number of Rows"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "num_rows",
                    type: "number",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.num_rows,
                    "onUpdate:modelValue": ($event) => $data.form.num_rows = $event,
                    required: "",
                    autocomplete: "off"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.num_rows,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "starting_row_num",
                    value: "Starting Row Number"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "starting_row_num",
                    type: "number",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.starting_row_num,
                    "onUpdate:modelValue": ($event) => $data.form.starting_row_num = $event,
                    autocomplete: "off"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.starting_row_num,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "num_plants_per_row",
                    value: "Plants Per Row"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "num_plants_per_row",
                    type: "number",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.num_plants_per_row,
                    "onUpdate:modelValue": ($event) => $data.form.num_plants_per_row = $event,
                    autocomplete: "off"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.num_plants_per_row,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ])
            ])
          ], 40, ["onSubmit", "onKeyup"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.creatingPlaces = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.createPlaces,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Places`);
            } else {
              return [
                vue.createTextVNode("Save Places")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.creatingPlaces = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_button, {
              type: "submit",
              onClick: $options.createPlaces,
              class: { "opacity-25": $data.form.processing },
              disabled: $data.form.processing
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Save Places")
              ]),
              _: 1
            }, 8, ["onClick", "class", "disabled"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$3f = _sfc_main$3f.setup;
_sfc_main$3f.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Blocks/Places/CreatePlacesForm.vue");
  return _sfc_setup$3f ? _sfc_setup$3f(props, ctx) : void 0;
};
var CreatePlacesForm = /* @__PURE__ */ _export_sfc(_sfc_main$3f, [["ssrRender", _sfc_ssrRender$3d]]);
var CreatePlacesForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreatePlacesForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3e = {
  components: {
    JetActionMessage,
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput
  },
  props: { block: Object, row_number: Number, num_plants: Number },
  data() {
    return {
      creatingPlaces: false,
      form: this.$inertia.form({
        _method: "PATCH",
        block_id: this.block.id,
        row_number: this.row_number,
        num_places: this.num_plants
      })
    };
  },
  watch: {
    row_number(value) {
      this.form.row_number = value;
      this.form.num_places = this.num_plants;
    },
    num_plants(value) {
      this.form.num_places = value;
    }
  },
  methods: {
    updateRow() {
      this.form.post(route("places.update"), {
        preserveScroll: true,
        preserveState: false
      });
    }
  }
};
function _sfc_ssrRender$3c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    onClick: ($event) => $data.creatingPlaces = true
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Edit Row ${serverRenderer.ssrInterpolate($props.row_number)}`);
      } else {
        return [
          vue.createTextVNode("Edit Row " + vue.toDisplayString($props.row_number), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.creatingPlaces,
    onClose: ($event) => $data.creatingPlaces = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Edit Row`);
      } else {
        return [
          vue.createTextVNode("Edit Row")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Edit the number of places in this row. `);
      } else {
        return [
          vue.createTextVNode(" Edit the number of places in this row. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<form${_scopeId}><div class="col-span-6"${_scopeId}><div class="grid gap-4 grid-cols-4"${_scopeId}><div class="col-span-4 sm:col-span-2"${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "row_number",
          value: "Row Number"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "row_number",
          type: "number",
          class: "mt-1 block w-full",
          modelValue: $data.form.row_number,
          "onUpdate:modelValue": ($event) => $data.form.row_number = $event,
          required: "",
          disabled: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.row_number,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "num_places",
          value: "Number of Places"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "num_places",
          type: "number",
          class: "mt-1 block w-full",
          modelValue: $data.form.num_places,
          "onUpdate:modelValue": ($event) => $data.form.num_places = $event,
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.num_places,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.updateRow, ["prevent"]),
            onKeyup: vue.withKeys($options.updateRow, ["enter"])
          }, [
            vue.createVNode("div", { class: "col-span-6" }, [
              vue.createVNode("div", { class: "grid gap-4 grid-cols-4" }, [
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode("div", null, [
                    vue.createVNode(_component_jet_label, {
                      for: "row_number",
                      value: "Row Number"
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "row_number",
                      type: "number",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.row_number,
                      "onUpdate:modelValue": ($event) => $data.form.row_number = $event,
                      required: "",
                      disabled: "",
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.row_number,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "num_places",
                    value: "Number of Places"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "num_places",
                    type: "number",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.num_places,
                    "onUpdate:modelValue": ($event) => $data.form.num_places = $event,
                    autocomplete: "off"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.num_places,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ])
            ])
          ], 40, ["onSubmit", "onKeyup"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.creatingPlaces = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.updateRow,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Row`);
            } else {
              return [
                vue.createTextVNode("Save Row")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.creatingPlaces = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_button, {
              type: "submit",
              onClick: $options.updateRow,
              class: { "opacity-25": $data.form.processing },
              disabled: $data.form.processing
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Save Row")
              ]),
              _: 1
            }, 8, ["onClick", "class", "disabled"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$3e = _sfc_main$3e.setup;
_sfc_main$3e.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Blocks/Places/ChangeNumPlacesInRowForm.vue");
  return _sfc_setup$3e ? _sfc_setup$3e(props, ctx) : void 0;
};
var ChangeNumPlacesInRowForm = /* @__PURE__ */ _export_sfc(_sfc_main$3e, [["ssrRender", _sfc_ssrRender$3c]]);
var ChangeNumPlacesInRowForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ChangeNumPlacesInRowForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3d = {
  components: {
    DetailsSection,
    CreatePlacesForm,
    ChangeNumPlacesInRowForm
  },
  props: {
    block: Object
  },
  data() {
    return {
      places: this.$page.props.places,
      selectedRow: this.$page.props.places.length ? this.$page.props.places[0].row_number : null
    };
  },
  computed: {
    rowPlaceNumbers() {
      if (this.places.length) {
        return this.places.filter(
          (place) => place.row_number == this.selectedRow
        );
      }
    },
    plantsLength() {
      return this.rowPlaceNumbers.length;
    },
    rows() {
      if (this.places.length) {
        const rows = this.places.map((place) => place.row_number);
        const distinctRows = [...new Set(rows)];
        return distinctRows;
      }
    }
  }
};
function _sfc_ssrRender$3b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_create_places_form = vue.resolveComponent("create-places-form");
  const _component_change_num_places_in_row_form = vue.resolveComponent("change-num-places-in-row-form");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.block.name)} Places `);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.block.name) + " Places ", 1)
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_places_form, { block: $props.block }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_places_form, { block: $props.block }, null, 8, ["block"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($data.places.length) {
          _push2(`<div class="col-span-6"${_scopeId}><div class="grid grid-cols-2 gap-4 py-2 mb-2 border-b border-gray-50"${_scopeId}><h3 class="px-2"${_scopeId}>Row Number</h3><div class="flex items-center justify-between space-x-2"${_scopeId}><h3 class="px-2"${_scopeId}>${serverRenderer.ssrInterpolate($options.plantsLength)} Plant Places</h3>`);
          _push2(serverRenderer.ssrRenderComponent(_component_change_num_places_in_row_form, {
            block: $props.block,
            row_number: $data.selectedRow,
            num_plants: $options.plantsLength
          }, null, _parent2, _scopeId));
          _push2(`</div></div><div class="grid grid-cols-2 gap-4 col-span-6"${_scopeId}><div${_scopeId}><div class="max-h-96 overflow-auto"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList($options.rows, (row) => {
            _push2(`<div class="${serverRenderer.ssrRenderClass([
              "p-2 hover:bg-gray-50 cursor-pointer  rounded",
              $data.selectedRow == row ? "bg-gray-50" : ""
            ])}"${_scopeId}>${serverRenderer.ssrInterpolate(row)}</div>`);
          });
          _push2(`<!--]--></div></div><div${_scopeId}><div class="max-h-96 overflow-auto"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList($options.rowPlaceNumbers, (placeNumber) => {
            _push2(`<div class="p-2"${_scopeId}>${serverRenderer.ssrInterpolate(placeNumber.plant_number)}</div>`);
          });
          _push2(`<!--]--></div></div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          $data.places.length ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "col-span-6"
          }, [
            vue.createVNode("div", { class: "grid grid-cols-2 gap-4 py-2 mb-2 border-b border-gray-50" }, [
              vue.createVNode("h3", { class: "px-2" }, "Row Number"),
              vue.createVNode("div", { class: "flex items-center justify-between space-x-2" }, [
                vue.createVNode("h3", { class: "px-2" }, vue.toDisplayString($options.plantsLength) + " Plant Places", 1),
                vue.createVNode(_component_change_num_places_in_row_form, {
                  block: $props.block,
                  row_number: $data.selectedRow,
                  num_plants: $options.plantsLength
                }, null, 8, ["block", "row_number", "num_plants"])
              ])
            ]),
            vue.createVNode("div", { class: "grid grid-cols-2 gap-4 col-span-6" }, [
              vue.createVNode("div", null, [
                vue.createVNode("div", { class: "max-h-96 overflow-auto" }, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($options.rows, (row) => {
                    return vue.openBlock(), vue.createBlock("div", {
                      onClick: ($event) => $data.selectedRow = row,
                      key: row,
                      class: [
                        "p-2 hover:bg-gray-50 cursor-pointer  rounded",
                        $data.selectedRow == row ? "bg-gray-50" : ""
                      ]
                    }, vue.toDisplayString(row), 11, ["onClick"]);
                  }), 128))
                ])
              ]),
              vue.createVNode("div", null, [
                vue.createVNode("div", { class: "max-h-96 overflow-auto" }, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($options.rowPlaceNumbers, (placeNumber) => {
                    return vue.openBlock(), vue.createBlock("div", {
                      key: placeNumber.id,
                      class: "p-2"
                    }, vue.toDisplayString(placeNumber.plant_number), 1);
                  }), 128))
                ])
              ])
            ])
          ])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3d = _sfc_main$3d.setup;
_sfc_main$3d.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Blocks/Places/BlockPlaces.vue");
  return _sfc_setup$3d ? _sfc_setup$3d(props, ctx) : void 0;
};
var BlockPlaces = /* @__PURE__ */ _export_sfc(_sfc_main$3d, [["ssrRender", _sfc_ssrRender$3b]]);
var BlockPlaces$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": BlockPlaces
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3c = {
  components: {
    BlocksLayout,
    UpdateBlockForm,
    DeleteBlockForm,
    BlockPlaces
  },
  props: {
    block: Object
  }
};
function _sfc_ssrRender$3a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_blocks_layout = vue.resolveComponent("blocks-layout");
  const _component_update_block_form = vue.resolveComponent("update-block-form");
  const _component_block_places = vue.resolveComponent("block-places");
  const _component_delete_block_form = vue.resolveComponent("delete-block-form");
  _push(serverRenderer.ssrRenderComponent(_component_blocks_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="space-y-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_update_block_form, { block: $props.block }, null, _parent2, _scopeId));
        if ($props.block.has_places) {
          _push2(serverRenderer.ssrRenderComponent(_component_block_places, { block: $props.block }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_delete_block_form, { block: $props.block }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "space-y-6" }, [
            vue.createVNode(_component_update_block_form, { block: $props.block }, null, 8, ["block"]),
            $props.block.has_places ? (vue.openBlock(), vue.createBlock(_component_block_places, {
              key: 0,
              block: $props.block
            }, null, 8, ["block"])) : vue.createCommentVNode("", true),
            vue.createVNode(_component_delete_block_form, { block: $props.block }, null, 8, ["block"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3c = _sfc_main$3c.setup;
_sfc_main$3c.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Blocks/Edit.vue");
  return _sfc_setup$3c ? _sfc_setup$3c(props, ctx) : void 0;
};
var Edit$2 = /* @__PURE__ */ _export_sfc(_sfc_main$3c, [["ssrRender", _sfc_ssrRender$3a]]);
var Edit$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Edit$2
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3b = {
  components: {
    BlocksLayout
  }
};
function _sfc_ssrRender$39(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_blocks_layout = vue.resolveComponent("blocks-layout");
  _push(serverRenderer.ssrRenderComponent(_component_blocks_layout, _attrs, null, _parent));
}
const _sfc_setup$3b = _sfc_main$3b.setup;
_sfc_main$3b.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Blocks/Index.vue");
  return _sfc_setup$3b ? _sfc_setup$3b(props, ctx) : void 0;
};
var Index$u = /* @__PURE__ */ _export_sfc(_sfc_main$3b, [["ssrRender", _sfc_ssrRender$39]]);
var Index$v = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$u
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3a = {
  components: {
    PageAside,
    AsideLink,
    ButtonLink,
    EmptyState,
    JetSectionTitle: SectionTitle
  },
  props: {
    categories: Array
  }
};
function _sfc_ssrRender$38(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_page_aside = vue.resolveComponent("page-aside");
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_aside_link = vue.resolveComponent("aside-link");
  const _component_empty_state = vue.resolveComponent("empty-state");
  _push(serverRenderer.ssrRenderComponent(_component_page_aside, vue.mergeProps({
    showOnMobile: _ctx.route().current("categories.index")
  }, _attrs), {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Product Categories`);
            } else {
              return [
                vue.createTextVNode("Product Categories")
              ];
            }
          }),
          description: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`View your product categories.`);
            } else {
              return [
                vue.createTextVNode("View your product categories.")
              ];
            }
          }),
          aside: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_button_link, {
                href: _ctx.route("categories.create")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`New Category`);
                  } else {
                    return [
                      vue.createTextVNode("New Category")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_button_link, {
                  href: _ctx.route("categories.create")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("New Category")
                  ]),
                  _: 1
                }, 8, ["href"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_section_title, null, {
            title: vue.withCtx(() => [
              vue.createTextVNode("Product Categories")
            ]),
            description: vue.withCtx(() => [
              vue.createTextVNode("View your product categories.")
            ]),
            aside: vue.withCtx(() => [
              vue.createVNode(_component_button_link, {
                href: _ctx.route("categories.create")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New Category")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            _: 1
          })
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white"${_scopeId}><ul class="divide-y divide-gray-200"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($props.categories, (category) => {
          _push2(`<li class="bg-white"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_aside_link, {
            href: _ctx.route("categories.show", category.id),
            current: _ctx.route().current("categories.show", category.id)
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex-1 min-w-0"${_scopeId2}><div class="focus:outline-none"${_scopeId2}><span class="absolute inset-0" aria-hidden="true"${_scopeId2}></span><p class="text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate(category.name)}</p>`);
                if (category.description) {
                  _push3(`<p class="text-sm text-gray-500 truncate"${_scopeId2}>${serverRenderer.ssrInterpolate(category.description)}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                    vue.createVNode("div", { class: "focus:outline-none" }, [
                      vue.createVNode("span", {
                        class: "absolute inset-0",
                        "aria-hidden": "true"
                      }),
                      vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(category.name), 1),
                      category.description ? (vue.openBlock(), vue.createBlock("p", {
                        key: 0,
                        class: "text-sm text-gray-500 truncate"
                      }, vue.toDisplayString(category.description), 1)) : vue.createCommentVNode("", true)
                    ])
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</li>`);
        });
        _push2(`<!--]--></ul></div>`);
        if ($props.categories.length < 1 && _ctx.route().current("categories.index")) {
          _push2(serverRenderer.ssrRenderComponent(_component_empty_state, {
            heading: "No Categories",
            subtitle: "Get started by creating a new product category.",
            "button-text": "New Category",
            href: _ctx.route("categories.create")
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", { class: "bg-white" }, [
            vue.createVNode("ul", { class: "divide-y divide-gray-200" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.categories, (category) => {
                return vue.openBlock(), vue.createBlock("li", {
                  key: category.id,
                  class: "bg-white"
                }, [
                  vue.createVNode(_component_aside_link, {
                    href: _ctx.route("categories.show", category.id),
                    current: _ctx.route().current("categories.show", category.id)
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                        vue.createVNode("div", { class: "focus:outline-none" }, [
                          vue.createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(category.name), 1),
                          category.description ? (vue.openBlock(), vue.createBlock("p", {
                            key: 0,
                            class: "text-sm text-gray-500 truncate"
                          }, vue.toDisplayString(category.description), 1)) : vue.createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 2
                  }, 1032, ["href", "current"])
                ]);
              }), 128))
            ])
          ]),
          $props.categories.length < 1 && _ctx.route().current("categories.index") ? (vue.openBlock(), vue.createBlock(_component_empty_state, {
            key: 0,
            heading: "No Categories",
            subtitle: "Get started by creating a new product category.",
            "button-text": "New Category",
            href: _ctx.route("categories.create")
          }, null, 8, ["href"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3a = _sfc_main$3a.setup;
_sfc_main$3a.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Categories/CategoriesAside.vue");
  return _sfc_setup$3a ? _sfc_setup$3a(props, ctx) : void 0;
};
var CategoriesAside = /* @__PURE__ */ _export_sfc(_sfc_main$3a, [["ssrRender", _sfc_ssrRender$38]]);
var CategoriesAside$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CategoriesAside
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$39 = {
  components: {
    CategoriesAside,
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    categories() {
      return this.$page.props.categories;
    },
    isIndex() {
      return route().current("categories.index");
    }
  }
};
function _sfc_ssrRender$37(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  const _component_categories_aside = vue.resolveComponent("categories-aside");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb" class="xl:hidden"${_scopeId2}><div class="px-4 md:pb-2"${_scopeId2}>`);
                _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                  href: _ctx.route("categories.index")
                }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`Categories`);
                    } else {
                      return [
                        vue.createTextVNode("Categories")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</div></nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    vue.createVNode(_component_back_link, {
                      href: _ctx.route("categories.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Categories")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_categories_aside, { categories: $options.categories }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
              default: vue.withCtx(() => [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    vue.createVNode(_component_back_link, {
                      href: _ctx.route("categories.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Categories")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ]),
              _: 3
            }, 8, ["dontShowOnMobile"]),
            vue.createVNode(_component_categories_aside, { categories: $options.categories }, null, 8, ["categories"])
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$39 = _sfc_main$39.setup;
_sfc_main$39.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Categories/CategoriesLayout.vue");
  return _sfc_setup$39 ? _sfc_setup$39(props, ctx) : void 0;
};
var CategoriesLayout = /* @__PURE__ */ _export_sfc(_sfc_main$39, [["ssrRender", _sfc_ssrRender$37]]);
var CategoriesLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CategoriesLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$38 = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput
  },
  data() {
    return {
      form: this.$inertia.form({
        _method: "POST",
        name: "",
        description: null
      })
    };
  },
  methods: {
    createCategory() {
      this.form.post(route("categories.store"), {
        errorBag: "createCategory",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$36(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.createCategory }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create a Category`);
      } else {
        return [
          vue.createTextVNode("Create a Category")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a category for your products. Products in this category will automatically recieve the pricing and sizing set in this category. `);
      } else {
        return [
          vue.createTextVNode(" Create a category for your products. Products in this category will automatically recieve the pricing and sizing set in this category. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Category Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "description",
          value: "Category description"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "description",
          class: "mt-1 block w-full",
          modelValue: $data.form.description,
          "onUpdate:modelValue": ($event) => $data.form.description = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.description,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Category Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "description",
                  value: "Category description"
                }),
                vue.createVNode(_component_text_area_input, {
                  id: "description",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.description,
                  "onUpdate:modelValue": ($event) => $data.form.description = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.description,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Category`);
            } else {
              return [
                vue.createTextVNode("Save Category")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Category")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$38 = _sfc_main$38.setup;
_sfc_main$38.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Categories/CreateCategoryForm.vue");
  return _sfc_setup$38 ? _sfc_setup$38(props, ctx) : void 0;
};
var CreateCategoryForm = /* @__PURE__ */ _export_sfc(_sfc_main$38, [["ssrRender", _sfc_ssrRender$36]]);
var CreateCategoryForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateCategoryForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$37 = {
  components: {
    CategoriesLayout,
    CreateCategoryForm
  }
};
function _sfc_ssrRender$35(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_categories_layout = vue.resolveComponent("categories-layout");
  const _component_create_category_form = vue.resolveComponent("create-category-form");
  _push(serverRenderer.ssrRenderComponent(_component_categories_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_category_form, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_category_form)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$37 = _sfc_main$37.setup;
_sfc_main$37.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Categories/Create.vue");
  return _sfc_setup$37 ? _sfc_setup$37(props, ctx) : void 0;
};
var Create$m = /* @__PURE__ */ _export_sfc(_sfc_main$37, [["ssrRender", _sfc_ssrRender$35]]);
var Create$n = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$m
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$36 = {
  props: { category: Object },
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingCategoryDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmCategoryDeletion() {
      this.confirmingCategoryDeletion = true;
    },
    deleteCategory() {
      this.form.delete(route("categories.destroy", this.category), {
        errorBag: "deleteCategory"
      });
    }
  }
};
function _sfc_ssrRender$34(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Category `);
      } else {
        return [
          vue.createTextVNode(" Delete Category ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete ${serverRenderer.ssrInterpolate($props.category.name)}. All products in this category will no longer have a category until you reassign their category. `);
      } else {
        return [
          vue.createTextVNode(" Delete " + vue.toDisplayString($props.category.name) + ". All products in this category will no longer have a category until you reassign their category. ", 1)
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a category is deleted, you will not be able to recover it again. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmCategoryDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Category `);
            } else {
              return [
                vue.createTextVNode(" Delete Category ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingCategoryDeletion,
          onClose: ($event) => $data.confirmingCategoryDeletion = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Category `);
            } else {
              return [
                vue.createTextVNode(" Delete Category ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this category? `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete this category? ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingCategoryDeletion = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteCategory,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Category `);
                  } else {
                    return [
                      vue.createTextVNode(" Delete Category ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingCategoryDeletion = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.deleteCategory,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Delete Category ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a category is deleted, you will not be able to recover it again. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmCategoryDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete Category ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingCategoryDeletion,
            onClose: ($event) => $data.confirmingCategoryDeletion = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Delete Category ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete this category? ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingCategoryDeletion = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteCategory,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Delete Category ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$36 = _sfc_main$36.setup;
_sfc_main$36.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Categories/DeleteCategoryForm.vue");
  return _sfc_setup$36 ? _sfc_setup$36(props, ctx) : void 0;
};
var DeleteCategoryForm = /* @__PURE__ */ _export_sfc(_sfc_main$36, [["ssrRender", _sfc_ssrRender$34]]);
var DeleteCategoryForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteCategoryForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$35 = {
  components: {
    CategoriesLayout
  }
};
function _sfc_ssrRender$33(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_categories_layout = vue.resolveComponent("categories-layout");
  _push(serverRenderer.ssrRenderComponent(_component_categories_layout, _attrs, null, _parent));
}
const _sfc_setup$35 = _sfc_main$35.setup;
_sfc_main$35.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Categories/Index.vue");
  return _sfc_setup$35 ? _sfc_setup$35(props, ctx) : void 0;
};
var Index$s = /* @__PURE__ */ _export_sfc(_sfc_main$35, [["ssrRender", _sfc_ssrRender$33]]);
var Index$t = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$s
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$34 = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput
  },
  props: { category: Object },
  data() {
    return {
      form: this.$inertia.form({
        _method: "PATCH",
        name: this.category.name,
        description: this.category.description
      })
    };
  },
  methods: {
    updateCategory() {
      this.form.patch(route("categories.update", this.category), {
        errorBag: "updateCategory",
        preserveScroll: true,
        preserveState: false
      });
    }
  }
};
function _sfc_ssrRender$32(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.updateCategory }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.category.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.category.name), 1)
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update this category. Products in this category will have the changes reflected immediately. `);
      } else {
        return [
          vue.createTextVNode(" Update this category. Products in this category will have the changes reflected immediately. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Category Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "description",
          value: "Category description"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "description",
          class: "mt-1 block w-full",
          modelValue: $data.form.description,
          "onUpdate:modelValue": ($event) => $data.form.description = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.description,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Category Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "description",
                  value: "Category description"
                }),
                vue.createVNode(_component_text_area_input, {
                  id: "description",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.description,
                  "onUpdate:modelValue": ($event) => $data.form.description = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.description,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
          disabled: $data.form.processing || !$data.form.isDirty
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Category`);
            } else {
              return [
                vue.createTextVNode("Save Category")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
            disabled: $data.form.processing || !$data.form.isDirty
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Category")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$34 = _sfc_main$34.setup;
_sfc_main$34.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Categories/UpdateCategoryForm.vue");
  return _sfc_setup$34 ? _sfc_setup$34(props, ctx) : void 0;
};
var UpdateCategoryForm = /* @__PURE__ */ _export_sfc(_sfc_main$34, [["ssrRender", _sfc_ssrRender$32]]);
var UpdateCategoryForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateCategoryForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$33 = {
  props: ["price"],
  components: {
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton,
    TrashIcon: TrashIcon__default["default"]
  },
  data() {
    return {
      confirmingPriceDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmPriceDeletion() {
      this.confirmingPriceDeletion = true;
    },
    deletePrice() {
      this.form.delete(route("prices.destroy", this.price), {
        errorBag: "deletePrice",
        preserveState: true
      });
    }
  }
};
function _sfc_ssrRender$31(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TrashIcon = vue.resolveComponent("TrashIcon");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_TrashIcon, {
    onClick: $options.confirmPriceDeletion,
    class: "w-6 h-6 mx-auto cursor-pointer"
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.confirmingPriceDeletion,
    onClose: ($event) => $data.confirmingPriceDeletion = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Price `);
      } else {
        return [
          vue.createTextVNode(" Delete Price ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you want to delete this price? All products in inventory with this price will be given a null price and all product pricing with this price will be deleted. `);
      } else {
        return [
          vue.createTextVNode(" Are you sure you want to delete this price? All products in inventory with this price will be given a null price and all product pricing with this price will be deleted. ")
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.confirmingPriceDeletion = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.form.processing }],
          onClick: $options.deletePrice,
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Price `);
            } else {
              return [
                vue.createTextVNode(" Delete Price ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.confirmingPriceDeletion = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.form.processing }],
            onClick: $options.deletePrice,
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Delete Price ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$33 = _sfc_main$33.setup;
_sfc_main$33.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Pricing/DeletePrice.vue");
  return _sfc_setup$33 ? _sfc_setup$33(props, ctx) : void 0;
};
var DeletePrice = /* @__PURE__ */ _export_sfc(_sfc_main$33, [["ssrRender", _sfc_ssrRender$31]]);
var DeletePrice$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeletePrice
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$32 = {
  components: {
    JetButton,
    JetInput,
    JetInputError,
    JetLabel,
    JetCheckbox: JetCheckBox,
    DeletePrice
  },
  props: { price: Object },
  data() {
    return {
      form: this.$inertia.form({
        _method: "PATCH",
        product_id: this.price.product_id,
        size_id: this.price.size_id,
        unit_price: this.price.unit_price,
        custom_price: this.price.custom_price,
        show_on_availability: this.price.show_on_availability
      })
    };
  },
  methods: {
    updateProductPrice() {
      this.form.patch(route("prices.update", this.price), {
        preserveScroll: true,
        preserveState: true
      });
    }
  }
};
function _sfc_ssrRender$30(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_JetLabel = vue.resolveComponent("JetLabel");
  const _component_DeletePrice = vue.resolveComponent("DeletePrice");
  _push(`<tr${serverRenderer.ssrRenderAttrs(_attrs)}><td class="px-6 py-4 whitespace-nowrap text-gray-900">${serverRenderer.ssrInterpolate($props.price.size.name)}</td><td class="px-6 py-4 whitespace-nowrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, {
    for: "unit_price",
    class: "sr-only",
    value: "Unit Price"
  }, null, _parent));
  _push(`<div class="mt-1 relative max-w-xs rounded-md shadow-sm"><div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"> $ </div>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_input, {
    onChange: $options.updateProductPrice,
    id: "unit_price",
    type: "number",
    step: "0.01",
    class: "block w-full pl-6",
    modelValue: $data.form.unit_price,
    "onUpdate:modelValue": ($event) => $data.form.unit_price = $event,
    required: ""
  }, null, _parent));
  _push(`</div>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
    message: $data.form.errors.unit_price,
    class: "mt-2"
  }, null, _parent));
  _push(`</td><td class="px-6 py-4 whitespace-nowrap"><div class="flex space-x-4">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
    onChange: $options.updateProductPrice,
    modelValue: $data.form.show_on_availability,
    "onUpdate:modelValue": ($event) => $data.form.show_on_availability = $event,
    checked: $data.form.show_on_availability,
    id: "show_on_availability" + $props.price.id
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_JetLabel, {
    for: "show_on_availability" + $props.price.id
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($data.form.show_on_availability ? "Yes" : "No")}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($data.form.show_on_availability ? "Yes" : "No"), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div></td><td class="px-6 py-4 whitespace-nowrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_DeletePrice, { price: $props.price }, null, _parent));
  _push(`</td></tr>`);
}
const _sfc_setup$32 = _sfc_main$32.setup;
_sfc_main$32.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Pricing/UpdatePrice.vue");
  return _sfc_setup$32 ? _sfc_setup$32(props, ctx) : void 0;
};
var UpdatePrice = /* @__PURE__ */ _export_sfc(_sfc_main$32, [["ssrRender", _sfc_ssrRender$30]]);
var UpdatePrice$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdatePrice
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$31 = {};
function _sfc_ssrRender$2$(_ctx, _push, _parent, _attrs) {
  _push(`<th${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    scope: "col",
    class: "px-4 py-3 text-xs uppercase tracking-wider text-left whitespace-nowrap"
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</th>`);
}
const _sfc_setup$31 = _sfc_main$31.setup;
_sfc_main$31.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Tables/TableH.vue");
  return _sfc_setup$31 ? _sfc_setup$31(props, ctx) : void 0;
};
var TableH = /* @__PURE__ */ _export_sfc(_sfc_main$31, [["ssrRender", _sfc_ssrRender$2$]]);
const _sfc_main$30 = {
  components: {
    UpdatePrice,
    TableH
  },
  props: {
    prices: Array
  }
};
function _sfc_ssrRender$2_(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TableH = vue.resolveComponent("TableH");
  const _component_UpdatePrice = vue.resolveComponent("UpdatePrice");
  if ($props.prices.length) {
    _push(`<table${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "min-w-full divide-y divide-gray-200" }, _attrs))}><thead class="bg-gray-50">`);
    _push(serverRenderer.ssrRenderComponent(_component_TableH, null, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Size `);
        } else {
          return [
            vue.createTextVNode(" Size ")
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_TableH, null, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Unit Price `);
        } else {
          return [
            vue.createTextVNode(" Unit Price ")
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_TableH, null, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Show in availability `);
        } else {
          return [
            vue.createTextVNode(" Show in availability ")
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_TableH, null, null, _parent));
    _push(`</thead><tbody class="divide-y divide-gray-200 mt-4"><!--[-->`);
    serverRenderer.ssrRenderList($props.prices, (price) => {
      _push(serverRenderer.ssrRenderComponent(_component_UpdatePrice, {
        key: price.id,
        price
      }, null, _parent));
    });
    _push(`<!--]--></tbody></table>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$30 = _sfc_main$30.setup;
_sfc_main$30.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Pricing/PriceTable.vue");
  return _sfc_setup$30 ? _sfc_setup$30(props, ctx) : void 0;
};
var PriceTable = /* @__PURE__ */ _export_sfc(_sfc_main$30, [["ssrRender", _sfc_ssrRender$2_]]);
var PriceTable$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": PriceTable
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2$ = {
  components: {
    Switch: vue$1.Switch,
    SwitchDescription: vue$1.SwitchDescription,
    SwitchGroup: vue$1.SwitchGroup,
    SwitchLabel: vue$1.SwitchLabel,
    JetActionMessage,
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput,
    SelectBox
  },
  props: { product: Object, category: Object },
  data() {
    return {
      sizes: this.$page.props.sizes,
      selectedSize: null,
      creatingProductPrice: false,
      form: this.$inertia.form({
        _method: "POST",
        product_id: this.product ? this.product.id : null,
        category_id: this.category ? this.category.id : null,
        size_id: null,
        unit_price: null,
        show_on_availability: true
      })
    };
  },
  watch: {
    selectedSize() {
      if (this.selectedSize) {
        this.form.size_id = this.selectedSize.id;
      }
    }
  },
  methods: {
    createPrice() {
      this.form.post(route("prices.store"), {
        preserveScroll: false,
        preserveState: true,
        onSuccess: () => {
          this.form.reset();
          this.selectedSize = null;
          this.creatingProductPrice = false;
        }
      });
    }
  }
};
function _sfc_ssrRender$2Z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_SwitchGroup = vue.resolveComponent("SwitchGroup");
  const _component_SwitchLabel = vue.resolveComponent("SwitchLabel");
  const _component_SwitchDescription = vue.resolveComponent("SwitchDescription");
  const _component_Switch = vue.resolveComponent("Switch");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    onClick: ($event) => $data.creatingProductPrice = true
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`New Size &amp; Price`);
      } else {
        return [
          vue.createTextVNode("New Size & Price")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.creatingProductPrice,
    onClose: ($event) => $data.creatingProductPrice = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create a Size and Price`);
      } else {
        return [
          vue.createTextVNode("Create a Size and Price")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Add a size for this product, and give it a base price. `);
      } else {
        return [
          vue.createTextVNode(" Add a size for this product, and give it a base price. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<form${_scopeId}><div class="col-span-6"${_scopeId}><div class="grid gap-4 sm:grid-cols-2"${_scopeId}><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Product Size",
          items: $data.sizes,
          modelValue: $data.selectedSize,
          "onUpdate:modelValue": ($event) => $data.selectedSize = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.size_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "unit_price",
          value: "Unit Price"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "unit_price",
          type: "number",
          step: "0.01",
          class: "mt-1 block w-full",
          modelValue: $data.form.unit_price,
          "onUpdate:modelValue": ($event) => $data.form.unit_price = $event,
          required: ""
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.unit_price,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-between sm:col-span-3"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="flex-grow flex flex-col"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm font-medium text-gray-900"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Show this product size and price on the availability?`);
                  } else {
                    return [
                      vue.createTextVNode("Show this product size and price on the availability?")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchDescription, {
                as: "span",
                class: "text-sm text-gray-500"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`You can uncheck this to make sure this price and size will not be displayed in availability lists. Inventory value reports will still contain this product and size if in inventory.`);
                  } else {
                    return [
                      vue.createTextVNode("You can uncheck this to make sure this price and size will not be displayed in availability lists. Inventory value reports will still contain this product and size if in inventory.")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</span>`);
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.form.show_on_availability,
                "onUpdate:modelValue": ($event) => $data.form.show_on_availability = $event,
                class: [
                  $data.form.show_on_availability ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.form.show_on_availability ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.show_on_availability ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("span", { class: "flex-grow flex flex-col" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm font-medium text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Show this product size and price on the availability?")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchDescription, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("You can uncheck this to make sure this price and size will not be displayed in availability lists. Inventory value reports will still contain this product and size if in inventory.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.form.show_on_availability,
                  "onUpdate:modelValue": ($event) => $data.form.show_on_availability = $event,
                  class: [
                    $data.form.show_on_availability ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.form.show_on_availability ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.createPrice, ["prevent"])
          }, [
            vue.createVNode("div", { class: "col-span-6" }, [
              vue.createVNode("div", { class: "grid gap-4 sm:grid-cols-2" }, [
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Product Size",
                    items: $data.sizes,
                    modelValue: $data.selectedSize,
                    "onUpdate:modelValue": ($event) => $data.selectedSize = $event
                  }, null, 8, ["items", "modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.size_id,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "unit_price",
                    value: "Unit Price"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "unit_price",
                    type: "number",
                    step: "0.01",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.unit_price,
                    "onUpdate:modelValue": ($event) => $data.form.unit_price = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.unit_price,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode(_component_SwitchGroup, {
                  as: "div",
                  class: "flex items-center justify-between sm:col-span-3"
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", { class: "flex-grow flex flex-col" }, [
                      vue.createVNode(_component_SwitchLabel, {
                        as: "span",
                        class: "text-sm font-medium text-gray-900"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Show this product size and price on the availability?")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_SwitchDescription, {
                        as: "span",
                        class: "text-sm text-gray-500"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("You can uncheck this to make sure this price and size will not be displayed in availability lists. Inventory value reports will still contain this product and size if in inventory.")
                        ]),
                        _: 1
                      })
                    ]),
                    vue.createVNode(_component_Switch, {
                      modelValue: $data.form.show_on_availability,
                      "onUpdate:modelValue": ($event) => $data.form.show_on_availability = $event,
                      class: [
                        $data.form.show_on_availability ? "bg-green-600" : "bg-gray-200",
                        "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                      ]
                    }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("span", {
                          "aria-hidden": "true",
                          class: [
                            $data.form.show_on_availability ? "translate-x-5" : "translate-x-0",
                            "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                          ]
                        }, null, 2)
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                  ]),
                  _: 1
                })
              ])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.creatingProductPrice = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.createPrice,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Price`);
            } else {
              return [
                vue.createTextVNode("Save Price")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.creatingProductPrice = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_button, {
              type: "submit",
              onClick: $options.createPrice,
              class: { "opacity-25": $data.form.processing },
              disabled: $data.form.processing
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Save Price")
              ]),
              _: 1
            }, 8, ["onClick", "class", "disabled"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$2$ = _sfc_main$2$.setup;
_sfc_main$2$.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Pricing/CreatePrice.vue");
  return _sfc_setup$2$ ? _sfc_setup$2$(props, ctx) : void 0;
};
var CreatePrice = /* @__PURE__ */ _export_sfc(_sfc_main$2$, [["ssrRender", _sfc_ssrRender$2Z]]);
var CreatePrice$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreatePrice
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2_ = {
  props: { product: Object, category: Object },
  components: {
    JetSectionTitle: SectionTitle,
    PriceTable,
    CreatePrice
  },
  data() {
    return {
      creatingCustomer: true
    };
  }
};
function _sfc_ssrRender$2Y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_CreatePrice = vue.resolveComponent("CreatePrice");
  const _component_PriceTable = vue.resolveComponent("PriceTable");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "my-5 md:mt-0 space-y-6" }, _attrs))}>`);
  if ($props.product) {
    _push(`<div class="py-5 bg-white shadow sm:rounded-lg overflow-hidden"><div class="px-4 sm:px-6">`);
    _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, { showBorder: false }, vue.createSlots({
      title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`Custom Product Sizes and Pricing`);
        } else {
          return [
            vue.createTextVNode("Custom Product Sizes and Pricing")
          ];
        }
      }),
      _: 2
    }, [
      $props.product.prices.length ? {
        name: "aside",
        fn: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_CreatePrice, { product: $props.product }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_CreatePrice, { product: $props.product }, null, 8, ["product"])
            ];
          }
        })
      } : void 0
    ]), _parent));
    _push(`</div>`);
    _push(serverRenderer.ssrRenderComponent(_component_PriceTable, {
      prices: $props.product.prices
    }, null, _parent));
    if (!$props.product.prices.length) {
      _push(serverRenderer.ssrRenderComponent(_component_CreatePrice, {
        class: "px-4 sm:px-6",
        product: $props.product
      }, null, _parent));
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  if ($props.category) {
    _push(`<div class="py-5 bg-white shadow sm:rounded-lg overflow-hidden"><div class="px-4 sm:px-6">`);
    _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, { showBorder: false }, vue.createSlots({
      title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`Category Sizes and Pricing`);
        } else {
          return [
            vue.createTextVNode("Category Sizes and Pricing")
          ];
        }
      }),
      _: 2
    }, [
      $props.category.prices.length ? {
        name: "aside",
        fn: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_CreatePrice, { category: $props.category }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_CreatePrice, { category: $props.category }, null, 8, ["category"])
            ];
          }
        })
      } : void 0
    ]), _parent));
    _push(`</div>`);
    _push(serverRenderer.ssrRenderComponent(_component_PriceTable, {
      prices: $props.category.prices
    }, null, _parent));
    if (!$props.category.prices.length) {
      _push(serverRenderer.ssrRenderComponent(_component_CreatePrice, {
        class: "px-4 sm:px-6",
        category: $props.category
      }, null, _parent));
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$2_ = _sfc_main$2_.setup;
_sfc_main$2_.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Pricing/ProductPricing.vue");
  return _sfc_setup$2_ ? _sfc_setup$2_(props, ctx) : void 0;
};
var ProductPricing = /* @__PURE__ */ _export_sfc(_sfc_main$2_, [["ssrRender", _sfc_ssrRender$2Y]]);
var ProductPricing$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ProductPricing
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2Z = {
  components: {
    CategoriesLayout,
    UpdateCategoryForm,
    DeleteCategoryForm,
    ProductPricing
  },
  props: {
    category: Object
  }
};
function _sfc_ssrRender$2X(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_categories_layout = vue.resolveComponent("categories-layout");
  const _component_update_category_form = vue.resolveComponent("update-category-form");
  const _component_ProductPricing = vue.resolveComponent("ProductPricing");
  const _component_delete_category_form = vue.resolveComponent("delete-category-form");
  _push(serverRenderer.ssrRenderComponent(_component_categories_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="space-y-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_update_category_form, { category: $props.category }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_ProductPricing, { category: $props.category }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_delete_category_form, { category: $props.category }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "space-y-6" }, [
            vue.createVNode(_component_update_category_form, { category: $props.category }, null, 8, ["category"]),
            vue.createVNode(_component_ProductPricing, { category: $props.category }, null, 8, ["category"]),
            vue.createVNode(_component_delete_category_form, { category: $props.category }, null, 8, ["category"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2Z = _sfc_main$2Z.setup;
_sfc_main$2Z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Categories/Show.vue");
  return _sfc_setup$2Z ? _sfc_setup$2Z(props, ctx) : void 0;
};
var Show$q = /* @__PURE__ */ _export_sfc(_sfc_main$2Z, [["ssrRender", _sfc_ssrRender$2X]]);
var Show$r = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$q
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2Y = {};
function _sfc_ssrRender$2W(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "p-4 tabs" }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div>`);
}
const _sfc_setup$2Y = _sfc_main$2Y.setup;
_sfc_main$2Y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/TabContainer.vue");
  return _sfc_setup$2Y ? _sfc_setup$2Y(props, ctx) : void 0;
};
var TabContainer = /* @__PURE__ */ _export_sfc(_sfc_main$2Y, [["ssrRender", _sfc_ssrRender$2W]]);
const _sfc_main$2X = {
  props: {
    current: Boolean,
    type: { type: String, default: "underline" },
    as: { type: String, default: "Link" }
  },
  computed: {
    classes() {
      if (this.type == "pill") {
        return [this.current ? "tab-active" : "", "tab"];
      } else if (this.type == "underline") {
        return [this.current ? "tab-active" : "", "tab tab-bordered"];
      }
    }
  }
};
function _sfc_ssrRender$2V(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.as), vue.mergeProps({ class: $options.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$2X = _sfc_main$2X.setup;
_sfc_main$2X.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Links/TabLink.vue");
  return _sfc_setup$2X ? _sfc_setup$2X(props, ctx) : void 0;
};
var TabLink = /* @__PURE__ */ _export_sfc(_sfc_main$2X, [["ssrRender", _sfc_ssrRender$2V]]);
const _sfc_main$2W = {
  components: {
    TabContainer,
    TabLink
  }
};
function _sfc_ssrRender$2U(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_tab_container = vue.resolveComponent("tab-container");
  const _component_tab_link = vue.resolveComponent("tab-link");
  _push(serverRenderer.ssrRenderComponent(_component_tab_container, vue.mergeProps({ class: "tabs-boxed px-2" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_tab_link, {
          href: _ctx.route("inventory.index"),
          current: _ctx.route().current("inventory.index"),
          type: "pill"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Inventory`);
            } else {
              return [
                vue.createTextVNode("Inventory")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_tab_link, {
          href: _ctx.route("inventory.clear-locations"),
          current: _ctx.route().current("inventory.clear-locations"),
          type: "pill"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Clear Assigned Locations`);
            } else {
              return [
                vue.createTextVNode("Clear Assigned Locations")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_tab_link, {
            href: _ctx.route("inventory.index"),
            current: _ctx.route().current("inventory.index"),
            type: "pill"
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Inventory")
            ]),
            _: 1
          }, 8, ["href", "current"]),
          vue.createVNode(_component_tab_link, {
            href: _ctx.route("inventory.clear-locations"),
            current: _ctx.route().current("inventory.clear-locations"),
            type: "pill"
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Clear Assigned Locations")
            ]),
            _: 1
          }, 8, ["href", "current"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2W = _sfc_main$2W.setup;
_sfc_main$2W.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/InventoryTabs.vue");
  return _sfc_setup$2W ? _sfc_setup$2W(props, ctx) : void 0;
};
var InventoryTabs = /* @__PURE__ */ _export_sfc(_sfc_main$2W, [["ssrRender", _sfc_ssrRender$2U]]);
const _sfc_main$2V = {};
function _sfc_ssrRender$2T(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "bg-white shadow sm:rounded-lg" }, _attrs))}><div class="px-4 py-5 sm:p-6">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$2V = _sfc_main$2V.setup;
_sfc_main$2V.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Card.vue");
  return _sfc_setup$2V ? _sfc_setup$2V(props, ctx) : void 0;
};
var Card = /* @__PURE__ */ _export_sfc(_sfc_main$2V, [["ssrRender", _sfc_ssrRender$2T]]);
const _sfc_main$2U = {
  components: {
    SectionTitle,
    JetInput,
    JetLabel,
    JetButton,
    AppLayout,
    MainArea,
    InventoryTabs,
    Card,
    SelectBox
  },
  props: ["nurseries"],
  data() {
    return {
      selectedNursery: null,
      blocks: [],
      selectedBlock: null,
      places: [],
      form: this.$inertia.form({
        starting_row: null,
        ending_row: null
      })
    };
  },
  computed: {
    firstRowInBlock() {
      return this.places.map((place) => {
        return place.row_number;
      }).sort((a2, b2) => a2 - b2)[0];
    },
    lastRowInBlock() {
      return this.places.map((place) => {
        return place.row_number;
      }).sort((a2, b2) => {
        if (a2 < b2) {
          return 1;
        } else if (a2 > b2) {
          return -1;
        }
      })[0];
    }
  },
  watch: {
    selectedNursery() {
      this.getBlocks();
    },
    selectedBlock() {
      this.getPlaces();
    }
  },
  methods: {
    getBlocks() {
      this.blocks = [];
      this.selectedBlock = null;
      this.places = [];
      this.starting_row = null;
      this.ending_row = null;
      if (this.selectedNursery) {
        axios.get(route("api.blocks.index", this.selectedNursery)).then((res) => {
          this.blocks = res.data;
        });
      }
    },
    getPlaces() {
      if (this.selectedBlock) {
        axios.get(route("api.places.index", this.selectedBlock)).then((res) => {
          this.places = res.data;
        });
      }
    },
    clearLocations() {
      this.form.post(route("clear-locations.clear", this.selectedBlock));
    }
  }
};
function _sfc_ssrRender$2S(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_InventoryTabs = vue.resolveComponent("InventoryTabs");
  const _component_Card = vue.resolveComponent("Card");
  const _component_section_title = vue.resolveComponent("section-title");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: false }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_InventoryTabs, null, null, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_Card, { class: "w-full max-w-screen-sm" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_section_title, null, {
                      title: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Select a Nursery Location`);
                        } else {
                          return [
                            vue.createTextVNode("Select a Nursery Location")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(`<div class="space-y-4"${_scopeId3}>`);
                    _push4(serverRenderer.ssrRenderComponent(_component_select_box, {
                      labelValue: "Select Nursery",
                      items: $props.nurseries,
                      modelValue: $data.selectedNursery,
                      "onUpdate:modelValue": ($event) => $data.selectedNursery = $event
                    }, null, _parent4, _scopeId3));
                    if ($data.selectedNursery) {
                      _push4(serverRenderer.ssrRenderComponent(_component_select_box, {
                        labelValue: "Select Block",
                        items: $data.blocks,
                        modelValue: $data.selectedBlock,
                        "onUpdate:modelValue": ($event) => $data.selectedBlock = $event
                      }, null, _parent4, _scopeId3));
                    } else {
                      _push4(`<!---->`);
                    }
                    if ($data.selectedBlock && $data.selectedNursery) {
                      _push4(`<form${_scopeId3}><div class="grid gap-4 grid-cols-2"${_scopeId3}><div${_scopeId3}>`);
                      _push4(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "starting" }, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`Starting Row to Clear`);
                          } else {
                            return [
                              vue.createTextVNode("Starting Row to Clear")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_jet_input, {
                        id: "starting",
                        type: "number",
                        class: "w-full",
                        min: $options.firstRowInBlock,
                        max: $options.lastRowInBlock,
                        modelValue: $data.form.starting_row,
                        "onUpdate:modelValue": ($event) => $data.form.starting_row = $event
                      }, null, _parent4, _scopeId3));
                      _push4(`</div><div${_scopeId3}>`);
                      _push4(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "ending" }, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`Ending Row to Clear`);
                          } else {
                            return [
                              vue.createTextVNode("Ending Row to Clear")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_jet_input, {
                        id: "ending",
                        type: "number",
                        class: "w-full",
                        min: $data.form.starting_row ? $data.form.starting_row : $options.firstRowInBlock,
                        max: $options.lastRowInBlock,
                        modelValue: $data.form.ending_row,
                        "onUpdate:modelValue": ($event) => $data.form.ending_row = $event
                      }, null, _parent4, _scopeId3));
                      _push4(`</div></div>`);
                      _push4(serverRenderer.ssrRenderComponent(_component_jet_button, {
                        type: "submit",
                        class: "mt-4"
                      }, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`Clear Locations`);
                          } else {
                            return [
                              vue.createTextVNode("Clear Locations")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(`</form>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`</div>`);
                  } else {
                    return [
                      vue.createVNode(_component_section_title, null, {
                        title: vue.withCtx(() => [
                          vue.createTextVNode("Select a Nursery Location")
                        ]),
                        _: 1
                      }),
                      vue.createVNode("div", { class: "space-y-4" }, [
                        vue.createVNode(_component_select_box, {
                          labelValue: "Select Nursery",
                          items: $props.nurseries,
                          modelValue: $data.selectedNursery,
                          "onUpdate:modelValue": ($event) => $data.selectedNursery = $event
                        }, null, 8, ["items", "modelValue", "onUpdate:modelValue"]),
                        $data.selectedNursery ? (vue.openBlock(), vue.createBlock(_component_select_box, {
                          key: 0,
                          labelValue: "Select Block",
                          items: $data.blocks,
                          modelValue: $data.selectedBlock,
                          "onUpdate:modelValue": ($event) => $data.selectedBlock = $event
                        }, null, 8, ["items", "modelValue", "onUpdate:modelValue"])) : vue.createCommentVNode("", true),
                        $data.selectedBlock && $data.selectedNursery ? (vue.openBlock(), vue.createBlock("form", {
                          key: 1,
                          onSubmit: vue.withModifiers($options.clearLocations, ["prevent"])
                        }, [
                          vue.createVNode("div", { class: "grid gap-4 grid-cols-2" }, [
                            vue.createVNode("div", null, [
                              vue.createVNode(_component_jet_label, { for: "starting" }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode("Starting Row to Clear")
                                ]),
                                _: 1
                              }),
                              vue.createVNode(_component_jet_input, {
                                id: "starting",
                                type: "number",
                                class: "w-full",
                                min: $options.firstRowInBlock,
                                max: $options.lastRowInBlock,
                                modelValue: $data.form.starting_row,
                                "onUpdate:modelValue": ($event) => $data.form.starting_row = $event
                              }, null, 8, ["min", "max", "modelValue", "onUpdate:modelValue"])
                            ]),
                            vue.createVNode("div", null, [
                              vue.createVNode(_component_jet_label, { for: "ending" }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode("Ending Row to Clear")
                                ]),
                                _: 1
                              }),
                              vue.createVNode(_component_jet_input, {
                                id: "ending",
                                type: "number",
                                class: "w-full",
                                min: $data.form.starting_row ? $data.form.starting_row : $options.firstRowInBlock,
                                max: $options.lastRowInBlock,
                                modelValue: $data.form.ending_row,
                                "onUpdate:modelValue": ($event) => $data.form.ending_row = $event
                              }, null, 8, ["min", "max", "modelValue", "onUpdate:modelValue"])
                            ])
                          ]),
                          vue.createVNode(_component_jet_button, {
                            type: "submit",
                            class: "mt-4"
                          }, {
                            default: vue.withCtx(() => [
                              vue.createTextVNode("Clear Locations")
                            ]),
                            _: 1
                          })
                        ], 40, ["onSubmit"])) : vue.createCommentVNode("", true)
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_InventoryTabs),
                vue.createVNode(_component_Card, { class: "w-full max-w-screen-sm" }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_section_title, null, {
                      title: vue.withCtx(() => [
                        vue.createTextVNode("Select a Nursery Location")
                      ]),
                      _: 1
                    }),
                    vue.createVNode("div", { class: "space-y-4" }, [
                      vue.createVNode(_component_select_box, {
                        labelValue: "Select Nursery",
                        items: $props.nurseries,
                        modelValue: $data.selectedNursery,
                        "onUpdate:modelValue": ($event) => $data.selectedNursery = $event
                      }, null, 8, ["items", "modelValue", "onUpdate:modelValue"]),
                      $data.selectedNursery ? (vue.openBlock(), vue.createBlock(_component_select_box, {
                        key: 0,
                        labelValue: "Select Block",
                        items: $data.blocks,
                        modelValue: $data.selectedBlock,
                        "onUpdate:modelValue": ($event) => $data.selectedBlock = $event
                      }, null, 8, ["items", "modelValue", "onUpdate:modelValue"])) : vue.createCommentVNode("", true),
                      $data.selectedBlock && $data.selectedNursery ? (vue.openBlock(), vue.createBlock("form", {
                        key: 1,
                        onSubmit: vue.withModifiers($options.clearLocations, ["prevent"])
                      }, [
                        vue.createVNode("div", { class: "grid gap-4 grid-cols-2" }, [
                          vue.createVNode("div", null, [
                            vue.createVNode(_component_jet_label, { for: "starting" }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode("Starting Row to Clear")
                              ]),
                              _: 1
                            }),
                            vue.createVNode(_component_jet_input, {
                              id: "starting",
                              type: "number",
                              class: "w-full",
                              min: $options.firstRowInBlock,
                              max: $options.lastRowInBlock,
                              modelValue: $data.form.starting_row,
                              "onUpdate:modelValue": ($event) => $data.form.starting_row = $event
                            }, null, 8, ["min", "max", "modelValue", "onUpdate:modelValue"])
                          ]),
                          vue.createVNode("div", null, [
                            vue.createVNode(_component_jet_label, { for: "ending" }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode("Ending Row to Clear")
                              ]),
                              _: 1
                            }),
                            vue.createVNode(_component_jet_input, {
                              id: "ending",
                              type: "number",
                              class: "w-full",
                              min: $data.form.starting_row ? $data.form.starting_row : $options.firstRowInBlock,
                              max: $options.lastRowInBlock,
                              modelValue: $data.form.ending_row,
                              "onUpdate:modelValue": ($event) => $data.form.ending_row = $event
                            }, null, 8, ["min", "max", "modelValue", "onUpdate:modelValue"])
                          ])
                        ]),
                        vue.createVNode(_component_jet_button, {
                          type: "submit",
                          class: "mt-4"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Clear Locations")
                          ]),
                          _: 1
                        })
                      ], 40, ["onSubmit"])) : vue.createCommentVNode("", true)
                    ])
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: false }, {
              default: vue.withCtx(() => [
                vue.createVNode(_component_InventoryTabs),
                vue.createVNode(_component_Card, { class: "w-full max-w-screen-sm" }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_section_title, null, {
                      title: vue.withCtx(() => [
                        vue.createTextVNode("Select a Nursery Location")
                      ]),
                      _: 1
                    }),
                    vue.createVNode("div", { class: "space-y-4" }, [
                      vue.createVNode(_component_select_box, {
                        labelValue: "Select Nursery",
                        items: $props.nurseries,
                        modelValue: $data.selectedNursery,
                        "onUpdate:modelValue": ($event) => $data.selectedNursery = $event
                      }, null, 8, ["items", "modelValue", "onUpdate:modelValue"]),
                      $data.selectedNursery ? (vue.openBlock(), vue.createBlock(_component_select_box, {
                        key: 0,
                        labelValue: "Select Block",
                        items: $data.blocks,
                        modelValue: $data.selectedBlock,
                        "onUpdate:modelValue": ($event) => $data.selectedBlock = $event
                      }, null, 8, ["items", "modelValue", "onUpdate:modelValue"])) : vue.createCommentVNode("", true),
                      $data.selectedBlock && $data.selectedNursery ? (vue.openBlock(), vue.createBlock("form", {
                        key: 1,
                        onSubmit: vue.withModifiers($options.clearLocations, ["prevent"])
                      }, [
                        vue.createVNode("div", { class: "grid gap-4 grid-cols-2" }, [
                          vue.createVNode("div", null, [
                            vue.createVNode(_component_jet_label, { for: "starting" }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode("Starting Row to Clear")
                              ]),
                              _: 1
                            }),
                            vue.createVNode(_component_jet_input, {
                              id: "starting",
                              type: "number",
                              class: "w-full",
                              min: $options.firstRowInBlock,
                              max: $options.lastRowInBlock,
                              modelValue: $data.form.starting_row,
                              "onUpdate:modelValue": ($event) => $data.form.starting_row = $event
                            }, null, 8, ["min", "max", "modelValue", "onUpdate:modelValue"])
                          ]),
                          vue.createVNode("div", null, [
                            vue.createVNode(_component_jet_label, { for: "ending" }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode("Ending Row to Clear")
                              ]),
                              _: 1
                            }),
                            vue.createVNode(_component_jet_input, {
                              id: "ending",
                              type: "number",
                              class: "w-full",
                              min: $data.form.starting_row ? $data.form.starting_row : $options.firstRowInBlock,
                              max: $options.lastRowInBlock,
                              modelValue: $data.form.ending_row,
                              "onUpdate:modelValue": ($event) => $data.form.ending_row = $event
                            }, null, 8, ["min", "max", "modelValue", "onUpdate:modelValue"])
                          ])
                        ]),
                        vue.createVNode(_component_jet_button, {
                          type: "submit",
                          class: "mt-4"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Clear Locations")
                          ]),
                          _: 1
                        })
                      ], 40, ["onSubmit"])) : vue.createCommentVNode("", true)
                    ])
                  ]),
                  _: 1
                })
              ]),
              _: 1
            })
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2U = _sfc_main$2U.setup;
_sfc_main$2U.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/ClearLocations/Index.vue");
  return _sfc_setup$2U ? _sfc_setup$2U(props, ctx) : void 0;
};
var Index$q = /* @__PURE__ */ _export_sfc(_sfc_main$2U, [["ssrRender", _sfc_ssrRender$2S]]);
var Index$r = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$q
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2T = {
  components: {
    JetActionMessage,
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput
  },
  props: { contactableType: String, contactableId: Number },
  data() {
    return {
      creatingContact: false,
      form: this.$inertia.form({
        _method: "POST",
        customer_id: this.customer ? this.customer.id : null,
        vendor_id: this.vendor ? this.vendor.id : null,
        first_name: "",
        last_name: null,
        notes: null,
        email: null,
        phone_1: null,
        phone_2: null,
        cell_phone: null,
        fax: null
      })
    };
  },
  methods: {
    createContact() {
      const { contactableType, contactableId } = this;
      this.form.post(
        route("contacts.store", {
          contactableType,
          contactableId
        }),
        {
          preserveScroll: false,
          preserveState: true,
          onSuccess: () => {
            this.form.reset();
            this.creatingContact = false;
          }
        }
      );
    }
  }
};
function _sfc_ssrRender$2R(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    onClick: ($event) => $data.creatingContact = true
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`New Contact`);
      } else {
        return [
          vue.createTextVNode("New Contact")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.creatingContact,
    onClose: ($event) => $data.creatingContact = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create a Contact`);
      } else {
        return [
          vue.createTextVNode("Create a Contact")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a new contact to track who you do business with. `);
      } else {
        return [
          vue.createTextVNode(" Create a new contact to track who you do business with. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<form${_scopeId}><div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "first_name",
          value: "First Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "first_name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.first_name,
          "onUpdate:modelValue": ($event) => $data.form.first_name = $event,
          required: "",
          autocomplete: "given-name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.first_name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "last_name",
          value: "Last Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "last_name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.last_name,
          "onUpdate:modelValue": ($event) => $data.form.last_name = $event,
          autocomplete: "family-name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.last_name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "notes",
          value: "Contact Notes"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "notes",
          class: "mt-1 block w-full",
          modelValue: $data.form.notes,
          "onUpdate:modelValue": ($event) => $data.form.notes = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.notes,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="grid gap-4"${_scopeId}><div class="col-span-4 pt-6"${_scopeId}><h3 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}> Contact Details </h3></div><div class="col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email Address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          class: "mt-1 block w-full",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          autocomplete: "email"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.email,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "phone_1",
          value: "Primary Phone"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "phone_1",
          type: "tel",
          class: "mt-1 block w-full",
          modelValue: $data.form.phone_1,
          "onUpdate:modelValue": ($event) => $data.form.phone_1 = $event,
          autocomplete: "tel"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.phone_1,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "phone_2",
          value: "Secondary Phone"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "phone_2",
          type: "tel",
          class: "mt-1 block w-full",
          modelValue: $data.form.phone_2,
          "onUpdate:modelValue": ($event) => $data.form.phone_2 = $event,
          autocomplete: "tel"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.phone_2,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "cell_phone",
          value: "Cell Phone"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "cell_phone",
          type: "tel",
          class: "mt-1 block w-full",
          modelValue: $data.form.cell_phone,
          "onUpdate:modelValue": ($event) => $data.form.cell_phone = $event,
          autocomplete: "tel"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.cell_phone,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "fax",
          value: "Fax"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "fax",
          type: "tel",
          class: "mt-1 block w-full",
          modelValue: $data.form.fax,
          "onUpdate:modelValue": ($event) => $data.form.fax = $event,
          autocomplete: "tel"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.fax,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.createContact, ["prevent"]),
            onKeyup: vue.withKeys($options.createContact, ["enter"])
          }, [
            vue.createVNode("div", { class: "col-span-6" }, [
              vue.createVNode("div", { class: "grid gap-4" }, [
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "first_name",
                    value: "First Name"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "first_name",
                    type: "text",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.first_name,
                    "onUpdate:modelValue": ($event) => $data.form.first_name = $event,
                    required: "",
                    autocomplete: "given-name"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.first_name,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "last_name",
                    value: "Last Name"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "last_name",
                    type: "text",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.last_name,
                    "onUpdate:modelValue": ($event) => $data.form.last_name = $event,
                    autocomplete: "family-name"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.last_name,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "notes",
                    value: "Contact Notes"
                  }),
                  vue.createVNode(_component_text_area_input, {
                    id: "notes",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.notes,
                    "onUpdate:modelValue": ($event) => $data.form.notes = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.notes,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ]),
              vue.createVNode("div", { class: "grid gap-4" }, [
                vue.createVNode("div", { class: "col-span-4 pt-6" }, [
                  vue.createVNode("h3", { class: "text-lg leading-6 font-medium text-gray-900" }, " Contact Details ")
                ]),
                vue.createVNode("div", { class: "col-span-4" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "email",
                    value: "Email Address"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "email",
                    type: "email",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.email,
                    "onUpdate:modelValue": ($event) => $data.form.email = $event,
                    autocomplete: "email"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.email,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "phone_1",
                    value: "Primary Phone"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "phone_1",
                    type: "tel",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.phone_1,
                    "onUpdate:modelValue": ($event) => $data.form.phone_1 = $event,
                    autocomplete: "tel"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.phone_1,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "phone_2",
                    value: "Secondary Phone"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "phone_2",
                    type: "tel",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.phone_2,
                    "onUpdate:modelValue": ($event) => $data.form.phone_2 = $event,
                    autocomplete: "tel"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.phone_2,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "cell_phone",
                    value: "Cell Phone"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "cell_phone",
                    type: "tel",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.cell_phone,
                    "onUpdate:modelValue": ($event) => $data.form.cell_phone = $event,
                    autocomplete: "tel"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.cell_phone,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "fax",
                    value: "Fax"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "fax",
                    type: "tel",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.fax,
                    "onUpdate:modelValue": ($event) => $data.form.fax = $event,
                    autocomplete: "tel"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.fax,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ])
            ])
          ], 40, ["onSubmit", "onKeyup"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.creatingContact = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.createContact,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save Contact `);
            } else {
              return [
                vue.createTextVNode(" Save Contact ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.creatingContact = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Cancel ")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_button, {
              type: "submit",
              onClick: $options.createContact,
              class: { "opacity-25": $data.form.processing },
              disabled: $data.form.processing
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Save Contact ")
              ]),
              _: 1
            }, 8, ["onClick", "class", "disabled"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$2T = _sfc_main$2T.setup;
_sfc_main$2T.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Contacts/CreateContactComponent.vue");
  return _sfc_setup$2T ? _sfc_setup$2T(props, ctx) : void 0;
};
var CreateContactComponent = /* @__PURE__ */ _export_sfc(_sfc_main$2T, [["ssrRender", _sfc_ssrRender$2R]]);
var CreateContactComponent$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateContactComponent
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2S = {
  props: ["contact"],
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingContactDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmContactDeletion() {
      this.confirmingContactDeletion = true;
    },
    deleteContact() {
      this.form.delete(
        route("contacts.destroy", {
          contact: this.contact
        }),
        {
          errorBag: "deleteContact"
        }
      );
    }
  }
};
function _sfc_ssrRender$2Q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmContactDeletion }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete `);
      } else {
        return [
          vue.createTextVNode(" Delete ")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.confirmingContactDeletion,
    onClose: ($event) => $data.confirmingContactDeletion = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Contact `);
      } else {
        return [
          vue.createTextVNode(" Delete Contact ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you want to delete ${serverRenderer.ssrInterpolate($props.contact.first_name)}? `);
      } else {
        return [
          vue.createTextVNode(" Are you sure you want to delete " + vue.toDisplayString($props.contact.first_name) + "? ", 1)
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.confirmingContactDeletion = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.form.processing }],
          onClick: $options.deleteContact,
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Contact `);
            } else {
              return [
                vue.createTextVNode(" Delete Contact ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.confirmingContactDeletion = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.form.processing }],
            onClick: $options.deleteContact,
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Delete Contact ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$2S = _sfc_main$2S.setup;
_sfc_main$2S.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Contacts/DeleteContactComponent.vue");
  return _sfc_setup$2S ? _sfc_setup$2S(props, ctx) : void 0;
};
var DeleteContactComponent = /* @__PURE__ */ _export_sfc(_sfc_main$2S, [["ssrRender", _sfc_ssrRender$2Q]]);
var DeleteContactComponent$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteContactComponent
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2R = {
  components: {
    JetActionMessage,
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput,
    DeleteContactComponent
  },
  props: { contact: Object },
  data() {
    return {
      updatingContact: false,
      form: this.$inertia.form({
        _method: "PUT",
        first_name: this.contact.first_name,
        last_name: this.contact.last_name,
        notes: this.contact.notes,
        email: this.contact.email,
        phone_1: this.contact.phone_1,
        phone_2: this.contact.phone_2,
        cell_phone: this.contact.cell_phone,
        fax: this.contact.fax
      })
    };
  },
  computed: {
    name() {
      return this.contact.last_name ? this.contact.first_name + " " + this.contact.last_name : this.contact.first_name;
    }
  },
  methods: {
    updateContact() {
      this.form.put(
        route("contacts.update", {
          contact: this.contact
        }),
        {
          preserveScroll: false,
          preserveState: true,
          onSuccess: () => {
            this.form.reset();
            this.updatingContact = false;
          }
        }
      );
    }
  }
};
function _sfc_ssrRender$2P(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_delete_contact_component = vue.resolveComponent("delete-contact-component");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><div class="relative py-5 px-4 sm:px-6 flex items-center space-x-3 hover:bg-gray-50 cursor-pointer"><div class="flex-1 min-w-0"><div class="focus:outline-none"><span class="absolute inset-0" aria-hidden="true"></span><p class="text-sm text-gray-900">${serverRenderer.ssrInterpolate($options.name)}</p>`);
  if ($props.contact.phone_1) {
    _push(`<p class="text-sm text-gray-500 truncate">${serverRenderer.ssrInterpolate($props.contact.phone_1)}</p>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div></div></div>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.updatingContact,
    onClose: ($event) => $data.updatingContact = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Update Contact`);
      } else {
        return [
          vue.createTextVNode("Update Contact")
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_delete_contact_component, { contact: $props.contact }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_delete_contact_component, { contact: $props.contact }, null, 8, ["contact"])
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<form${_scopeId}><div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "first_name",
          value: "First Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "first_name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.first_name,
          "onUpdate:modelValue": ($event) => $data.form.first_name = $event,
          required: "",
          autocomplete: "given-name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.first_name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "last_name",
          value: "Last Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "last_name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.last_name,
          "onUpdate:modelValue": ($event) => $data.form.last_name = $event,
          autocomplete: "family-name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.last_name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "notes",
          value: "Contact Notes"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "notes",
          class: "mt-1 block w-full",
          modelValue: $data.form.notes,
          "onUpdate:modelValue": ($event) => $data.form.notes = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.notes,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="grid gap-4"${_scopeId}><div class="col-span-4 pt-6"${_scopeId}><h3 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}> Contact Details </h3></div><div class="col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email Address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          class: "mt-1 block w-full",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          autocomplete: "email"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.email,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "phone_1",
          value: "Primary Phone"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "phone_1",
          type: "tel",
          class: "mt-1 block w-full",
          modelValue: $data.form.phone_1,
          "onUpdate:modelValue": ($event) => $data.form.phone_1 = $event,
          autocomplete: "tel"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.phone_1,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "phone_2",
          value: "Secondary Phone"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "phone_2",
          type: "tel",
          class: "mt-1 block w-full",
          modelValue: $data.form.phone_2,
          "onUpdate:modelValue": ($event) => $data.form.phone_2 = $event,
          autocomplete: "tel"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.phone_2,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "cell_phone",
          value: "Cell Phone"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "cell_phone",
          type: "tel",
          class: "mt-1 block w-full",
          modelValue: $data.form.cell_phone,
          "onUpdate:modelValue": ($event) => $data.form.cell_phone = $event,
          autocomplete: "tel"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.cell_phone,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-4 sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "fax",
          value: "Fax"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "fax",
          type: "tel",
          class: "mt-1 block w-full",
          modelValue: $data.form.fax,
          "onUpdate:modelValue": ($event) => $data.form.fax = $event,
          autocomplete: "tel"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.fax,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.updateContact, ["prevent"]),
            onKeyup: vue.withKeys($options.updateContact, ["enter"])
          }, [
            vue.createVNode("div", { class: "col-span-6" }, [
              vue.createVNode("div", { class: "grid gap-4" }, [
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "first_name",
                    value: "First Name"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "first_name",
                    type: "text",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.first_name,
                    "onUpdate:modelValue": ($event) => $data.form.first_name = $event,
                    required: "",
                    autocomplete: "given-name"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.first_name,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "last_name",
                    value: "Last Name"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "last_name",
                    type: "text",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.last_name,
                    "onUpdate:modelValue": ($event) => $data.form.last_name = $event,
                    autocomplete: "family-name"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.last_name,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "notes",
                    value: "Contact Notes"
                  }),
                  vue.createVNode(_component_text_area_input, {
                    id: "notes",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.notes,
                    "onUpdate:modelValue": ($event) => $data.form.notes = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.notes,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ]),
              vue.createVNode("div", { class: "grid gap-4" }, [
                vue.createVNode("div", { class: "col-span-4 pt-6" }, [
                  vue.createVNode("h3", { class: "text-lg leading-6 font-medium text-gray-900" }, " Contact Details ")
                ]),
                vue.createVNode("div", { class: "col-span-4" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "email",
                    value: "Email Address"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "email",
                    type: "email",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.email,
                    "onUpdate:modelValue": ($event) => $data.form.email = $event,
                    autocomplete: "email"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.email,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "phone_1",
                    value: "Primary Phone"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "phone_1",
                    type: "tel",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.phone_1,
                    "onUpdate:modelValue": ($event) => $data.form.phone_1 = $event,
                    autocomplete: "tel"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.phone_1,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "phone_2",
                    value: "Secondary Phone"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "phone_2",
                    type: "tel",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.phone_2,
                    "onUpdate:modelValue": ($event) => $data.form.phone_2 = $event,
                    autocomplete: "tel"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.phone_2,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "cell_phone",
                    value: "Cell Phone"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "cell_phone",
                    type: "tel",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.cell_phone,
                    "onUpdate:modelValue": ($event) => $data.form.cell_phone = $event,
                    autocomplete: "tel"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.cell_phone,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-4 sm:col-span-2" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "fax",
                    value: "Fax"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "fax",
                    type: "tel",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.fax,
                    "onUpdate:modelValue": ($event) => $data.form.fax = $event,
                    autocomplete: "tel"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.fax,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ])
            ])
          ], 40, ["onSubmit", "onKeyup"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.updatingContact = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.updateContact,
          class: {
            "opacity-25": $data.form.processing || !$data.form.isDirty
          },
          disabled: $data.form.processing || !$data.form.isDirty
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Contact`);
            } else {
              return [
                vue.createTextVNode("Save Contact")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.updatingContact = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_button, {
              type: "submit",
              onClick: $options.updateContact,
              class: {
                "opacity-25": $data.form.processing || !$data.form.isDirty
              },
              disabled: $data.form.processing || !$data.form.isDirty
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Save Contact")
              ]),
              _: 1
            }, 8, ["onClick", "class", "disabled"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$2R = _sfc_main$2R.setup;
_sfc_main$2R.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Contacts/UpdateContactComponent.vue");
  return _sfc_setup$2R ? _sfc_setup$2R(props, ctx) : void 0;
};
var UpdateContactComponent = /* @__PURE__ */ _export_sfc(_sfc_main$2R, [["ssrRender", _sfc_ssrRender$2P]]);
var UpdateContactComponent$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateContactComponent
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2Q = {
  props: { contacts: Array, contactableType: String, contactableId: Number },
  components: {
    JetSectionTitle: SectionTitle,
    CreateContactComponent,
    UpdateContactComponent
  }
};
function _sfc_ssrRender$2O(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_create_contact_component = vue.resolveComponent("create-contact-component");
  const _component_update_contact_component = vue.resolveComponent("update-contact-component");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "my-5 md:mt-0" }, _attrs))}><div class="py-5 bg-white shadow sm:rounded-lg overflow-hidden"><div class="px-4 sm:px-6">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, vue.createSlots({
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Contacts`);
      } else {
        return [
          vue.createTextVNode("Contacts")
        ];
      }
    }),
    _: 2
  }, [
    $props.contacts.length > 0 ? {
      name: "aside",
      fn: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(serverRenderer.ssrRenderComponent(_component_create_contact_component, {
            "contactable-type": $props.contactableType,
            "contactable-id": $props.contactableId
          }, null, _parent2, _scopeId));
        } else {
          return [
            vue.createVNode(_component_create_contact_component, {
              "contactable-type": $props.contactableType,
              "contactable-id": $props.contactableId
            }, null, 8, ["contactable-type", "contactable-id"])
          ];
        }
      })
    } : void 0
  ]), _parent));
  _push(`</div><div class="divide-y divide-gray-200 mt-4"><!--[-->`);
  serverRenderer.ssrRenderList($props.contacts, (contact) => {
    _push(serverRenderer.ssrRenderComponent(_component_update_contact_component, {
      key: contact.id,
      contact
    }, null, _parent));
  });
  _push(`<!--]-->`);
  if (!$props.contacts.length) {
    _push(serverRenderer.ssrRenderComponent(_component_create_contact_component, {
      class: "px-4 sm:px-6",
      "contactable-type": $props.contactableType,
      "contactable-id": $props.contactableId
    }, null, _parent));
  } else {
    _push(`<!---->`);
  }
  _push(`</div></div></div>`);
}
const _sfc_setup$2Q = _sfc_main$2Q.setup;
_sfc_main$2Q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Contacts/ContactAside.vue");
  return _sfc_setup$2Q ? _sfc_setup$2Q(props, ctx) : void 0;
};
var ContactAside = /* @__PURE__ */ _export_sfc(_sfc_main$2Q, [["ssrRender", _sfc_ssrRender$2O]]);
var ContactAside$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ContactAside
}, Symbol.toStringTag, { value: "Module" }));
var SearchInput_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$2P = {
  components: {
    JetInput,
    SearchIcon: SearchIcon__default["default"]
  },
  props: {
    modelValue: String,
    placeholder: { type: String, default: "Search" },
    autofocus: { type: Boolean, default: false },
    autocomplete: { type: String, default: "off" },
    type: { type: String, default: "search" },
    pattern: { type: String },
    inputmode: { type: String },
    disabled: { type: Boolean, default: false },
    title: {
      type: String,
      default: "Search"
    }
  },
  emits: ["update:modelValue"],
  methods: {
    focus() {
      this.$refs.input.focus();
    }
  },
  updated() {
    if (this.autofocus) {
      this.focus();
    }
  },
  mounted() {
    if (this.autofocus) {
      this.focus();
    }
  }
};
function _sfc_ssrRender$2N(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_SearchIcon = vue.resolveComponent("SearchIcon");
  const _component_jet_input = vue.resolveComponent("jet-input");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "flex space-x-4" }, _attrs))} data-v-287c75ee><div class="flex-1 min-w-0" data-v-287c75ee><label for="search" class="sr-only" data-v-287c75ee>Search</label><div class="relative rounded-md shadow-sm" data-v-287c75ee><div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none" data-v-287c75ee>`);
  _push(serverRenderer.ssrRenderComponent(_component_SearchIcon, {
    class: "h-5 w-5 text-gray-400",
    "aria-hidden": "true"
  }, null, _parent));
  _push(`</div>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_input, vue.mergeProps({
    value: $props.modelValue,
    onInput: ($event) => _ctx.$emit("update:modelValue", $event.target.value),
    ref: "input",
    type: $props.type
  }, _ctx.$attrs, {
    name: "search",
    id: "search",
    inputmode: $props.inputmode,
    pattern: $props.pattern,
    title: $props.title,
    autocomplete: $props.autocomplete,
    disabled: $props.disabled,
    class: "w-full pl-10",
    placeholder: $props.placeholder
  }), null, _parent));
  _push(`</div></div></div>`);
}
const _sfc_setup$2P = _sfc_main$2P.setup;
_sfc_main$2P.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Forms/SearchInput.vue");
  return _sfc_setup$2P ? _sfc_setup$2P(props, ctx) : void 0;
};
var SearchInput = /* @__PURE__ */ _export_sfc(_sfc_main$2P, [["ssrRender", _sfc_ssrRender$2N], ["__scopeId", "data-v-287c75ee"]]);
const _sfc_main$2O = {
  components: {
    PageAside,
    AsideLink,
    ButtonLink,
    TabContainer,
    TabLink,
    SearchInput,
    EmptyState,
    JetSectionTitle: SectionTitle
  },
  props: {
    customers: Array
  },
  computed: {
    customersLength: function() {
      return this.customers.length;
    }
  },
  data() {
    return {
      search: "",
      filteredCustomers: this.customers
    };
  },
  methods: {
    updateCustomers() {
      this.filteredCustomers = this.customers.filter((customer) => {
        var _a;
        if (customer.name.toLowerCase().includes(this.search.toLowerCase()) || ((_a = customer.state) == null ? void 0 : _a.toLowerCase().includes(this.search.toLowerCase()))) {
          return true;
        } else {
          return false;
        }
      });
    }
  }
};
function _sfc_ssrRender$2M(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_page_aside = vue.resolveComponent("page-aside");
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_search_input = vue.resolveComponent("search-input");
  const _component_tab_container = vue.resolveComponent("tab-container");
  const _component_tab_link = vue.resolveComponent("tab-link");
  const _component_aside_link = vue.resolveComponent("aside-link");
  const _component_empty_state = vue.resolveComponent("empty-state");
  _push(serverRenderer.ssrRenderComponent(_component_page_aside, vue.mergeProps({
    showOnMobile: _ctx.route().current("customers.index") || _ctx.route().current("archived-customers.index")
  }, _attrs), {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, vue.createSlots({
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Customer Directory`);
            } else {
              return [
                vue.createTextVNode("Customer Directory")
              ];
            }
          }),
          aside: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_button_link, {
                href: _ctx.route("customers.create")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`New Customer`);
                  } else {
                    return [
                      vue.createTextVNode("New Customer")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_button_link, {
                  href: _ctx.route("customers.create")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("New Customer")
                  ]),
                  _: 1
                }, 8, ["href"])
              ];
            }
          }),
          _: 2
        }, [
          $options.customersLength > 0 ? {
            name: "description",
            fn: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Search ${serverRenderer.ssrInterpolate($options.customersLength)} ${serverRenderer.ssrInterpolate($options.customersLength > 1 ? "Customers" : "Customer")}`);
              } else {
                return [
                  vue.createTextVNode("Search " + vue.toDisplayString($options.customersLength) + " " + vue.toDisplayString($options.customersLength > 1 ? "Customers" : "Customer"), 1)
                ];
              }
            })
          } : void 0
        ]), _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_search_input, {
          modelValue: $data.search,
          "onUpdate:modelValue": ($event) => $data.search = $event,
          onInput: $options.updateCustomers,
          placeholder: "Search by customer name or state."
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_section_title, null, vue.createSlots({
            title: vue.withCtx(() => [
              vue.createTextVNode("Customer Directory")
            ]),
            aside: vue.withCtx(() => [
              vue.createVNode(_component_button_link, {
                href: _ctx.route("customers.create")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New Customer")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            _: 2
          }, [
            $options.customersLength > 0 ? {
              name: "description",
              fn: vue.withCtx(() => [
                vue.createTextVNode("Search " + vue.toDisplayString($options.customersLength) + " " + vue.toDisplayString($options.customersLength > 1 ? "Customers" : "Customer"), 1)
              ])
            } : void 0
          ]), 1024),
          vue.createVNode(_component_search_input, {
            modelValue: $data.search,
            "onUpdate:modelValue": ($event) => $data.search = $event,
            onInput: $options.updateCustomers,
            placeholder: "Search by customer name or state."
          }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_tab_container, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_tab_link, {
                href: _ctx.route("customers.index"),
                current: _ctx.route().current("customers.*")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Active`);
                  } else {
                    return [
                      vue.createTextVNode("Active")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_tab_link, {
                href: _ctx.route("archived-customers.index"),
                current: _ctx.route().current("archived-customers.*")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Archived`);
                  } else {
                    return [
                      vue.createTextVNode("Archived")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("customers.index"),
                  current: _ctx.route().current("customers.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Active")
                  ]),
                  _: 1
                }, 8, ["href", "current"]),
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("archived-customers.index"),
                  current: _ctx.route().current("archived-customers.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Archived")
                  ]),
                  _: 1
                }, 8, ["href", "current"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<ul class="divide-y divide-gray-200"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($data.filteredCustomers, (customer) => {
          _push2(`<li class="bg-white"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_aside_link, {
            href: customer.deleted_at ? _ctx.route("archived-customers.show", customer.id) : _ctx.route("customers.show", customer.id),
            current: _ctx.route().current("customers.show", customer.id) || _ctx.route().current(
              "archived-customers.show",
              customer.id
            )
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex-1 min-w-0"${_scopeId2}><div class="focus:outline-none"${_scopeId2}><span class="absolute inset-0" aria-hidden="true"${_scopeId2}></span><p class="text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate(customer.name)}</p>`);
                if (customer.state) {
                  _push3(`<p class="text-sm text-gray-500 truncate"${_scopeId2}>${serverRenderer.ssrInterpolate(customer.state)}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                    vue.createVNode("div", { class: "focus:outline-none" }, [
                      vue.createVNode("span", {
                        class: "absolute inset-0",
                        "aria-hidden": "true"
                      }),
                      vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(customer.name), 1),
                      customer.state ? (vue.openBlock(), vue.createBlock("p", {
                        key: 0,
                        class: "text-sm text-gray-500 truncate"
                      }, vue.toDisplayString(customer.state), 1)) : vue.createCommentVNode("", true)
                    ])
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</li>`);
        });
        _push2(`<!--]--></ul></div>`);
        if ($options.customersLength < 1 && _ctx.route().current("customers.index")) {
          _push2(serverRenderer.ssrRenderComponent(_component_empty_state, {
            heading: "No Customers",
            subtitle: "Get started by creating a new customer.",
            "button-text": "New Customer",
            href: _ctx.route("customers.create")
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", { class: "bg-white" }, [
            vue.createVNode(_component_tab_container, null, {
              default: vue.withCtx(() => [
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("customers.index"),
                  current: _ctx.route().current("customers.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Active")
                  ]),
                  _: 1
                }, 8, ["href", "current"]),
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("archived-customers.index"),
                  current: _ctx.route().current("archived-customers.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Archived")
                  ]),
                  _: 1
                }, 8, ["href", "current"])
              ]),
              _: 1
            }),
            vue.createVNode("ul", { class: "divide-y divide-gray-200" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.filteredCustomers, (customer) => {
                return vue.openBlock(), vue.createBlock("li", {
                  key: customer.id,
                  class: "bg-white"
                }, [
                  vue.createVNode(_component_aside_link, {
                    href: customer.deleted_at ? _ctx.route("archived-customers.show", customer.id) : _ctx.route("customers.show", customer.id),
                    current: _ctx.route().current("customers.show", customer.id) || _ctx.route().current(
                      "archived-customers.show",
                      customer.id
                    )
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                        vue.createVNode("div", { class: "focus:outline-none" }, [
                          vue.createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(customer.name), 1),
                          customer.state ? (vue.openBlock(), vue.createBlock("p", {
                            key: 0,
                            class: "text-sm text-gray-500 truncate"
                          }, vue.toDisplayString(customer.state), 1)) : vue.createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 2
                  }, 1032, ["href", "current"])
                ]);
              }), 128))
            ])
          ]),
          $options.customersLength < 1 && _ctx.route().current("customers.index") ? (vue.openBlock(), vue.createBlock(_component_empty_state, {
            key: 0,
            heading: "No Customers",
            subtitle: "Get started by creating a new customer.",
            "button-text": "New Customer",
            href: _ctx.route("customers.create")
          }, null, 8, ["href"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2O = _sfc_main$2O.setup;
_sfc_main$2O.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Customers/CustomersAside.vue");
  return _sfc_setup$2O ? _sfc_setup$2O(props, ctx) : void 0;
};
var CustomersAside = /* @__PURE__ */ _export_sfc(_sfc_main$2O, [["ssrRender", _sfc_ssrRender$2M]]);
var CustomersAside$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CustomersAside
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2N = {
  components: {
    CustomersAside,
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    customers() {
      return this.$page.props.customers;
    },
    isIndex() {
      return route().current("customers.index") || route().current("archived-customers.index");
    }
  }
};
function _sfc_ssrRender$2L(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  const _component_customers_aside = vue.resolveComponent("customers-aside");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb" class="xl:hidden"${_scopeId2}><div class="px-4 md:pb-2"${_scopeId2}>`);
                if (_ctx.route().current("customers.*")) {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("customers.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Customers`);
                      } else {
                        return [
                          vue.createTextVNode("Customers")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("archived-customers.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Archived Customers`);
                      } else {
                        return [
                          vue.createTextVNode("Archived Customers")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                }
                _push3(`</div></nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("customers.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("customers.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Customers")
                      ]),
                      _: 1
                    }, 8, ["href"])) : (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 1,
                      href: _ctx.route("archived-customers.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Archived Customers")
                      ]),
                      _: 1
                    }, 8, ["href"]))
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_customers_aside, { customers: $options.customers }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
              default: vue.withCtx(() => [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("customers.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("customers.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Customers")
                      ]),
                      _: 1
                    }, 8, ["href"])) : (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 1,
                      href: _ctx.route("archived-customers.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Archived Customers")
                      ]),
                      _: 1
                    }, 8, ["href"]))
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ]),
              _: 3
            }, 8, ["dontShowOnMobile"]),
            vue.createVNode(_component_customers_aside, { customers: $options.customers }, null, 8, ["customers"])
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$2N = _sfc_main$2N.setup;
_sfc_main$2N.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Customers/CustomersLayout.vue");
  return _sfc_setup$2N ? _sfc_setup$2N(props, ctx) : void 0;
};
var CustomersLayout = /* @__PURE__ */ _export_sfc(_sfc_main$2N, [["ssrRender", _sfc_ssrRender$2L]]);
var CustomersLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CustomersLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2M = {
  props: ["customer"],
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingCustomerRestoration: false,
      restoring: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmCustomerRestoration() {
      this.confirmingCustomerRestoration = true;
    },
    RestoreCustomer() {
      this.form.post(route("archived-customers.restore", this.customer.id), {
        errorBag: "restoreCustomer"
      });
    }
  }
};
function _sfc_ssrRender$2K(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Restore Customer `);
      } else {
        return [
          vue.createTextVNode("Restore Customer ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Restore this customer. You will be able to create new orders and quotes with this customer and will no longer be archived.`);
      } else {
        return [
          vue.createTextVNode("Restore this customer. You will be able to create new orders and quotes with this customer and will no longer be archived.")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a customer is restored, you will be able to create orders for this customer. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, { onClick: $options.confirmCustomerRestoration }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Restore Customer `);
            } else {
              return [
                vue.createTextVNode(" Restore Customer ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingCustomerRestoration,
          onClose: ($event) => $data.confirmingCustomerRestoration = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Restore Customer `);
            } else {
              return [
                vue.createTextVNode(" Restore Customer ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to restore this customer? `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to restore this customer? ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingCustomerRestoration = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.RestoreCustomer,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Restore Customer `);
                  } else {
                    return [
                      vue.createTextVNode(" Restore Customer ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingCustomerRestoration = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.RestoreCustomer,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Restore Customer ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a customer is restored, you will be able to create orders for this customer. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_button, { onClick: $options.confirmCustomerRestoration }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Restore Customer ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingCustomerRestoration,
            onClose: ($event) => $data.confirmingCustomerRestoration = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Restore Customer ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to restore this customer? ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingCustomerRestoration = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.RestoreCustomer,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Restore Customer ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2M = _sfc_main$2M.setup;
_sfc_main$2M.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Customers/RestoreCustomerForm.vue");
  return _sfc_setup$2M ? _sfc_setup$2M(props, ctx) : void 0;
};
var RestoreCustomerForm = /* @__PURE__ */ _export_sfc(_sfc_main$2M, [["ssrRender", _sfc_ssrRender$2K]]);
var RestoreCustomerForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": RestoreCustomerForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2L = {
  components: {
    PaperClipIcon: solid.PaperClipIcon,
    CustomersLayout,
    DetailsSection,
    RestoreCustomerForm
  },
  props: { customer: Object }
};
function _sfc_ssrRender$2J(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_customers_layout = vue.resolveComponent("customers-layout");
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_restore_customer_form = vue.resolveComponent("restore-customer-form");
  _push(serverRenderer.ssrRenderComponent(_component_customers_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_details_section, null, {
          header: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${serverRenderer.ssrInterpolate($props.customer.name)}`);
            } else {
              return [
                vue.createTextVNode(vue.toDisplayString($props.customer.name), 1)
              ];
            }
          }),
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="sm:col-span-2"${_scopeId2}><dt class="text-sm text-gray-500"${_scopeId2}>Customer name</dt><dd class="mt-1 text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate($props.customer.name)}</dd></div><div class="sm:col-span-1"${_scopeId2}><dt class="text-sm text-gray-500"${_scopeId2}>Customer Address</dt><dd class="mt-1 text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate($props.customer.address)}</dd><dd class="mt-1 text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate($props.customer.city)} ${serverRenderer.ssrInterpolate($props.customer.state)} ${serverRenderer.ssrInterpolate($props.customer.zip)}</dd></div><div class="sm:col-span-2"${_scopeId2}><dt class="text-sm text-gray-500"${_scopeId2}>Notes</dt><dd class="mt-1 text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate($props.customer.notes)}</dd></div>`);
            } else {
              return [
                vue.createVNode("div", { class: "sm:col-span-2" }, [
                  vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Customer name"),
                  vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.customer.name), 1)
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Customer Address"),
                  vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.customer.address), 1),
                  vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.customer.city) + " " + vue.toDisplayString($props.customer.state) + " " + vue.toDisplayString($props.customer.zip), 1)
                ]),
                vue.createVNode("div", { class: "sm:col-span-2" }, [
                  vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Notes"),
                  vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.customer.notes), 1)
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_restore_customer_form, {
          customer: $props.customer,
          class: "mt-6"
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_details_section, null, {
            header: vue.withCtx(() => [
              vue.createTextVNode(vue.toDisplayString($props.customer.name), 1)
            ]),
            default: vue.withCtx(() => [
              vue.createVNode("div", { class: "sm:col-span-2" }, [
                vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Customer name"),
                vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.customer.name), 1)
              ]),
              vue.createVNode("div", { class: "sm:col-span-1" }, [
                vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Customer Address"),
                vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.customer.address), 1),
                vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.customer.city) + " " + vue.toDisplayString($props.customer.state) + " " + vue.toDisplayString($props.customer.zip), 1)
              ]),
              vue.createVNode("div", { class: "sm:col-span-2" }, [
                vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Notes"),
                vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.customer.notes), 1)
              ])
            ]),
            _: 1
          }),
          vue.createVNode(_component_restore_customer_form, {
            customer: $props.customer,
            class: "mt-6"
          }, null, 8, ["customer"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2L = _sfc_main$2L.setup;
_sfc_main$2L.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Customers/ArchivedShow.vue");
  return _sfc_setup$2L ? _sfc_setup$2L(props, ctx) : void 0;
};
var ArchivedShow$4 = /* @__PURE__ */ _export_sfc(_sfc_main$2L, [["ssrRender", _sfc_ssrRender$2J]]);
var ArchivedShow$5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ArchivedShow$4
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2K = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    Switch: vue$1.Switch,
    SwitchDescription: vue$1.SwitchDescription,
    SwitchGroup: vue$1.SwitchGroup,
    SwitchLabel: vue$1.SwitchLabel,
    TextAreaInput,
    SelectBox
  },
  props: {
    customerName: {
      type: String,
      default: ""
    },
    redirect: {
      type: Boolean,
      default: true
    }
  },
  data() {
    return {
      price_level: null,
      priceLevels: this.$page.props.priceLevels,
      newCustomer: this.$inertia.form({
        _method: "POST",
        redirect: this.redirect,
        name: this.customerName,
        address: "",
        city: "",
        state: "",
        zip: "",
        customer_price_level_id: null,
        mailing_same_as_primary: true,
        mailing_address: "",
        mailing_city: "",
        mailing_state: "",
        mailing_zip: "",
        notes: "",
        is_taxable: false,
        tax_percentage: null,
        discount_percentage: 0,
        reseller_permit_expiration: null
      })
    };
  },
  computed: {
    hasCustomTaxRate: {
      get() {
        return this.newCustomer.tax_percentage !== null;
      },
      set(value) {
        this.newCustomer.tax_percentage = value == true ? 8 : null;
      }
    }
  },
  watch: {
    price_level: function() {
      this.price_level ? this.newCustomer.customer_price_level_id = this.price_level.id : this.newCustomer.customer_price_level_id = null;
    }
  },
  methods: {
    createCustomer() {
      if (this.redirect) {
        this.newCustomer.post(route("customers.store"), {
          errorBag: "createCustomer",
          preserveScroll: true
        });
      } else {
        axios.post(route("customers.store"), this.newCustomer).then((response) => {
          this.$emit("created", response.data);
        });
      }
    }
  }
};
function _sfc_ssrRender$2I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_SwitchGroup = vue.resolveComponent("SwitchGroup");
  const _component_SwitchLabel = vue.resolveComponent("SwitchLabel");
  const _component_SwitchDescription = vue.resolveComponent("SwitchDescription");
  const _component_Switch = vue.resolveComponent("Switch");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_percentage_input = vue.resolveComponent("percentage-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.createCustomer }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create a Customer`);
      } else {
        return [
          vue.createTextVNode("Create a Customer")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a new customer to make orders and quotes to. `);
      } else {
        return [
          vue.createTextVNode(" Create a new customer to make orders and quotes to. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      var _a, _b;
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Customer Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.newCustomer.name,
          "onUpdate:modelValue": ($event) => $data.newCustomer.name = $event,
          required: "",
          autocomplete: "organization"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "notes",
          value: "Customer Notes"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "notes",
          class: "mt-1 block w-full",
          modelValue: $data.newCustomer.notes,
          "onUpdate:modelValue": ($event) => $data.newCustomer.notes = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.notes,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 text-gray-900"${_scopeId}> Primary Address </h3></div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "address",
          value: "Street Address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "address",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.newCustomer.address,
          "onUpdate:modelValue": ($event) => $data.newCustomer.address = $event,
          autocomplete: "address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.address,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "city",
          value: "City"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "city",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.newCustomer.city,
          "onUpdate:modelValue": ($event) => $data.newCustomer.city = $event,
          autocomplete: "address-level2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.city,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "state",
          value: "State"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "state",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.newCustomer.state,
          "onUpdate:modelValue": ($event) => $data.newCustomer.state = $event,
          autocomplete: "address-level1"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.state,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "zip",
          value: "Zip"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "zip",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.newCustomer.zip,
          "onUpdate:modelValue": ($event) => $data.newCustomer.zip = $event,
          autocomplete: "postal-code"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.zip,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-between col-span-3"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="flex-grow flex flex-col mr-4"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-900"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Mailing same as primary`);
                  } else {
                    return [
                      vue.createTextVNode("Mailing same as primary")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchDescription, {
                as: "span",
                class: "text-sm text-gray-500"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Indicate whether the mailing address of this customer is the same as the primary address.`);
                  } else {
                    return [
                      vue.createTextVNode("Indicate whether the mailing address of this customer is the same as the primary address.")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</span>`);
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.newCustomer.mailing_same_as_primary,
                "onUpdate:modelValue": ($event) => $data.newCustomer.mailing_same_as_primary = $event,
                class: [
                  $data.newCustomer.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.newCustomer.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.newCustomer.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("span", { class: "flex-grow flex flex-col mr-4" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Mailing same as primary")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchDescription, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Indicate whether the mailing address of this customer is the same as the primary address.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.newCustomer.mailing_same_as_primary,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.mailing_same_as_primary = $event,
                  class: [
                    $data.newCustomer.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.newCustomer.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div style="${serverRenderer.ssrRenderStyle(!$data.newCustomer.mailing_same_as_primary ? null : { display: "none" })}" class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 text-gray-900"${_scopeId}> Mailing Address </h3></div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "mailing_address",
          value: "Mailing Street Address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "mailing_address",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.newCustomer.mailing_address,
          "onUpdate:modelValue": ($event) => $data.newCustomer.mailing_address = $event,
          autocomplete: "address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.mailing_address,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "mailing_city",
          value: "Mailing City"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "mailing_city",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.newCustomer.mailing_city,
          "onUpdate:modelValue": ($event) => $data.newCustomer.mailing_city = $event,
          autocomplete: "address-level2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.mailing_city,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "mailing_state",
          value: "Mailing State"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "mailing_state",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.newCustomer.mailing_state,
          "onUpdate:modelValue": ($event) => $data.newCustomer.mailing_state = $event,
          autocomplete: "address-level1"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.mailing_state,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "mailing_zip",
          value: "Mailing Zip"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "mailing_zip",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.newCustomer.mailing_zip,
          "onUpdate:modelValue": ($event) => $data.newCustomer.mailing_zip = $event,
          autocomplete: "postal-code"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.mailing_zip,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 text-gray-900"${_scopeId}> Customer Details </h3></div><div class="grid gap-4 col-span-3"${_scopeId}><div class="grid gap-4 sm:grid-cols-2 col-span-3 items-center"${_scopeId}><div${_scopeId}>`);
        if (((_a = $data.priceLevels) == null ? void 0 : _a.length) > 0) {
          _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
            items: $data.priceLevels,
            selectedItem: $data.price_level,
            modelValue: $data.price_level,
            "onUpdate:modelValue": ($event) => $data.price_level = $event,
            labelValue: "Customer Price Level"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.customer_price_level_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-start col-span-3 sm:col-span-1"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-900 mr-4"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Taxable?`);
                  } else {
                    return [
                      vue.createTextVNode("Taxable?")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.newCustomer.is_taxable,
                "onUpdate:modelValue": ($event) => $data.newCustomer.is_taxable = $event,
                class: [
                  $data.newCustomer.is_taxable ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.newCustomer.is_taxable ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.newCustomer.is_taxable ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_SwitchLabel, {
                  as: "span",
                  class: "text-sm text-gray-900 mr-4"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Taxable?")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.newCustomer.is_taxable,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.is_taxable = $event,
                  class: [
                    $data.newCustomer.is_taxable ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.newCustomer.is_taxable ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div class="grid gap-4 sm:gap-6 sm:grid-cols-3 col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          style: $data.newCustomer.is_taxable ? null : { display: "none" },
          as: "div",
          class: "flex items-center justify-start sm:col-span-2"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="flex flex-col mr-4"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm font-medium text-gray-900"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Custom Tax Rate?`);
                  } else {
                    return [
                      vue.createTextVNode("Custom Tax Rate?")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-500"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Indicate whether this customer has a custom tax rate to be applied to taxable orders and products.`);
                  } else {
                    return [
                      vue.createTextVNode("Indicate whether this customer has a custom tax rate to be applied to taxable orders and products.")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $options.hasCustomTaxRate,
                "onUpdate:modelValue": ($event) => $options.hasCustomTaxRate = $event,
                class: [
                  $options.hasCustomTaxRate ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $options.hasCustomTaxRate ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $options.hasCustomTaxRate ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("div", { class: "flex flex-col mr-4" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm font-medium text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Custom Tax Rate?")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Indicate whether this customer has a custom tax rate to be applied to taxable orders and products.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $options.hasCustomTaxRate,
                  "onUpdate:modelValue": ($event) => $options.hasCustomTaxRate = $event,
                  class: [
                    $options.hasCustomTaxRate ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $options.hasCustomTaxRate ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div style="${serverRenderer.ssrRenderStyle($options.hasCustomTaxRate ? null : { display: "none" })}"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "tax_percentage",
          value: "Customer Tax Rate"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_percentage_input, {
          id: "tax_percentage",
          max: "100.00",
          min: "0.00",
          step: ".01",
          placeholder: "0.00",
          modelValue: $data.newCustomer.tax_percentage,
          "onUpdate:modelValue": ($event) => $data.newCustomer.tax_percentage = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.tax_percentage,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div><div class="grid gap-4 sm:grid-cols-2 col-span-3"${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "discount_percentage",
          value: "Percentage Discount"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_percentage_input, {
          id: "discount_percentage",
          max: "100",
          min: "0",
          placeholder: "0",
          modelValue: $data.newCustomer.discount_percentage,
          "onUpdate:modelValue": ($event) => $data.newCustomer.discount_percentage = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.discount_percentage,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "reseller_permit_expiration",
          value: "Reseller Permit Expiration"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "reseller_permit_expiration",
          type: "date",
          class: "mt-1 block w-full",
          modelValue: $data.newCustomer.reseller_permit_expiration,
          "onUpdate:modelValue": ($event) => $data.newCustomer.reseller_permit_expiration = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.newCustomer.errors.reseller_permit_expiration,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Customer Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.newCustomer.name,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.name = $event,
                  required: "",
                  autocomplete: "organization"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.newCustomer.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "notes",
                  value: "Customer Notes"
                }),
                vue.createVNode(_component_text_area_input, {
                  id: "notes",
                  class: "mt-1 block w-full",
                  modelValue: $data.newCustomer.notes,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.notes = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.newCustomer.errors.notes,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ]),
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                vue.createVNode("h3", { class: "text-lg leading-6 text-gray-900" }, " Primary Address ")
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "address",
                  value: "Street Address"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "address",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.newCustomer.address,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.address = $event,
                  autocomplete: "address"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.newCustomer.errors.address,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "city",
                  value: "City"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "city",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.newCustomer.city,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.city = $event,
                  autocomplete: "address-level2"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.newCustomer.errors.city,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "state",
                  value: "State"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "state",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.newCustomer.state,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.state = $event,
                  autocomplete: "address-level1"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.newCustomer.errors.state,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "zip",
                  value: "Zip"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "zip",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.newCustomer.zip,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.zip = $event,
                  autocomplete: "postal-code"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.newCustomer.errors.zip,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode(_component_SwitchGroup, {
                as: "div",
                class: "flex items-center justify-between col-span-3"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "flex-grow flex flex-col mr-4" }, [
                    vue.createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm text-gray-900"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Mailing same as primary")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_SwitchDescription, {
                      as: "span",
                      class: "text-sm text-gray-500"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Indicate whether the mailing address of this customer is the same as the primary address.")
                      ]),
                      _: 1
                    })
                  ]),
                  vue.createVNode(_component_Switch, {
                    modelValue: $data.newCustomer.mailing_same_as_primary,
                    "onUpdate:modelValue": ($event) => $data.newCustomer.mailing_same_as_primary = $event,
                    class: [
                      $data.newCustomer.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                      "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                    ]
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.newCustomer.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ]),
                    _: 1
                  }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                ]),
                _: 1
              })
            ]),
            vue.withDirectives(vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                vue.createVNode("h3", { class: "text-lg leading-6 text-gray-900" }, " Mailing Address ")
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_address",
                  value: "Mailing Street Address"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_address",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.newCustomer.mailing_address,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.mailing_address = $event,
                  autocomplete: "address"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.newCustomer.errors.mailing_address,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_city",
                  value: "Mailing City"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_city",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.newCustomer.mailing_city,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.mailing_city = $event,
                  autocomplete: "address-level2"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.newCustomer.errors.mailing_city,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_state",
                  value: "Mailing State"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_state",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.newCustomer.mailing_state,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.mailing_state = $event,
                  autocomplete: "address-level1"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.newCustomer.errors.mailing_state,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_zip",
                  value: "Mailing Zip"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_zip",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.newCustomer.mailing_zip,
                  "onUpdate:modelValue": ($event) => $data.newCustomer.mailing_zip = $event,
                  autocomplete: "postal-code"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.newCustomer.errors.mailing_zip,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ], 512), [
              [vue.vShow, !$data.newCustomer.mailing_same_as_primary]
            ]),
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                vue.createVNode("h3", { class: "text-lg leading-6 text-gray-900" }, " Customer Details ")
              ]),
              vue.createVNode("div", { class: "grid gap-4 col-span-3" }, [
                vue.createVNode("div", { class: "grid gap-4 sm:grid-cols-2 col-span-3 items-center" }, [
                  vue.createVNode("div", null, [
                    ((_b = $data.priceLevels) == null ? void 0 : _b.length) > 0 ? (vue.openBlock(), vue.createBlock(_component_select_box, {
                      key: 0,
                      items: $data.priceLevels,
                      selectedItem: $data.price_level,
                      modelValue: $data.price_level,
                      "onUpdate:modelValue": ($event) => $data.price_level = $event,
                      labelValue: "Customer Price Level"
                    }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"])) : vue.createCommentVNode("", true),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.newCustomer.errors.customer_price_level_id,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode(_component_SwitchGroup, {
                    as: "div",
                    class: "flex items-center justify-start col-span-3 sm:col-span-1"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_SwitchLabel, {
                        as: "span",
                        class: "text-sm text-gray-900 mr-4"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Taxable?")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_Switch, {
                        modelValue: $data.newCustomer.is_taxable,
                        "onUpdate:modelValue": ($event) => $data.newCustomer.is_taxable = $event,
                        class: [
                          $data.newCustomer.is_taxable ? "bg-green-600" : "bg-gray-200",
                          "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                        ]
                      }, {
                        default: vue.withCtx(() => [
                          vue.createVNode("span", {
                            "aria-hidden": "true",
                            class: [
                              $data.newCustomer.is_taxable ? "translate-x-5" : "translate-x-0",
                              "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                            ]
                          }, null, 2)
                        ]),
                        _: 1
                      }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode("div", { class: "grid gap-4 sm:gap-6 sm:grid-cols-3 col-span-3" }, [
                  vue.withDirectives(vue.createVNode(_component_SwitchGroup, {
                    as: "div",
                    class: "flex items-center justify-start sm:col-span-2"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex flex-col mr-4" }, [
                        vue.createVNode(_component_SwitchLabel, {
                          as: "span",
                          class: "text-sm font-medium text-gray-900"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Custom Tax Rate?")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_SwitchLabel, {
                          as: "span",
                          class: "text-sm text-gray-500"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Indicate whether this customer has a custom tax rate to be applied to taxable orders and products.")
                          ]),
                          _: 1
                        })
                      ]),
                      vue.createVNode(_component_Switch, {
                        modelValue: $options.hasCustomTaxRate,
                        "onUpdate:modelValue": ($event) => $options.hasCustomTaxRate = $event,
                        class: [
                          $options.hasCustomTaxRate ? "bg-green-600" : "bg-gray-200",
                          "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                        ]
                      }, {
                        default: vue.withCtx(() => [
                          vue.createVNode("span", {
                            "aria-hidden": "true",
                            class: [
                              $options.hasCustomTaxRate ? "translate-x-5" : "translate-x-0",
                              "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transnewCustomer ring-0 transition ease-in-out duration-200"
                            ]
                          }, null, 2)
                        ]),
                        _: 1
                      }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                    ]),
                    _: 1
                  }, 512), [
                    [vue.vShow, $data.newCustomer.is_taxable]
                  ]),
                  vue.withDirectives(vue.createVNode("div", null, [
                    vue.createVNode(_component_jet_label, {
                      for: "tax_percentage",
                      value: "Customer Tax Rate"
                    }),
                    vue.createVNode(_component_percentage_input, {
                      id: "tax_percentage",
                      max: "100.00",
                      min: "0.00",
                      step: ".01",
                      placeholder: "0.00",
                      modelValue: $data.newCustomer.tax_percentage,
                      "onUpdate:modelValue": ($event) => $data.newCustomer.tax_percentage = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.newCustomer.errors.tax_percentage,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ], 512), [
                    [vue.vShow, $options.hasCustomTaxRate]
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "grid gap-4 sm:grid-cols-2 col-span-3" }, [
                vue.createVNode("div", null, [
                  vue.createVNode(_component_jet_label, {
                    for: "discount_percentage",
                    value: "Percentage Discount"
                  }),
                  vue.createVNode(_component_percentage_input, {
                    id: "discount_percentage",
                    max: "100",
                    min: "0",
                    placeholder: "0",
                    modelValue: $data.newCustomer.discount_percentage,
                    "onUpdate:modelValue": ($event) => $data.newCustomer.discount_percentage = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.newCustomer.errors.discount_percentage,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", null, [
                  vue.createVNode(_component_jet_label, {
                    for: "reseller_permit_expiration",
                    value: "Reseller Permit Expiration"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "reseller_permit_expiration",
                    type: "date",
                    class: "mt-1 block w-full",
                    modelValue: $data.newCustomer.reseller_permit_expiration,
                    "onUpdate:modelValue": ($event) => $data.newCustomer.reseller_permit_expiration = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.newCustomer.errors.reseller_permit_expiration,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.newCustomer.processing },
          disabled: $data.newCustomer.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Customer`);
            } else {
              return [
                vue.createTextVNode("Save Customer")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.newCustomer.processing },
            disabled: $data.newCustomer.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Customer")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2K = _sfc_main$2K.setup;
_sfc_main$2K.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Customers/CreateCustomerForm.vue");
  return _sfc_setup$2K ? _sfc_setup$2K(props, ctx) : void 0;
};
var CreateCustomerForm = /* @__PURE__ */ _export_sfc(_sfc_main$2K, [["ssrRender", _sfc_ssrRender$2I]]);
var CreateCustomerForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateCustomerForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2J = {
  components: {
    CreateCustomerForm,
    CustomersLayout
  }
};
function _sfc_ssrRender$2H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_customers_layout = vue.resolveComponent("customers-layout");
  const _component_create_customer_form = vue.resolveComponent("create-customer-form");
  _push(serverRenderer.ssrRenderComponent(_component_customers_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_customer_form, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_customer_form)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2J = _sfc_main$2J.setup;
_sfc_main$2J.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Customers/Create.vue");
  return _sfc_setup$2J ? _sfc_setup$2J(props, ctx) : void 0;
};
var Create$k = /* @__PURE__ */ _export_sfc(_sfc_main$2J, [["ssrRender", _sfc_ssrRender$2H]]);
var Create$l = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$k
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2I = {
  props: ["customer"],
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingCustomerDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmCustomerDeletion() {
      this.confirmingCustomerDeletion = true;
    },
    deleteCustomer() {
      this.form.delete(route("customers.destroy", this.customer), {
        errorBag: "deleteCustomer"
      });
    }
  }
};
function _sfc_ssrRender$2G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Customer `);
      } else {
        return [
          vue.createTextVNode(" Delete Customer ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete this customer. `);
      } else {
        return [
          vue.createTextVNode(" Delete this customer. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a customer is deleted, you will be unable to create orders for this customer. Past orders will still be displayed for the customer. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmCustomerDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Customer `);
            } else {
              return [
                vue.createTextVNode(" Delete Customer ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingCustomerDeletion,
          onClose: ($event) => $data.confirmingCustomerDeletion = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Customer `);
            } else {
              return [
                vue.createTextVNode(" Delete Customer ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this customer? `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete this customer? ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingCustomerDeletion = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteCustomer,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Customer `);
                  } else {
                    return [
                      vue.createTextVNode(" Delete Customer ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingCustomerDeletion = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.deleteCustomer,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Delete Customer ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a customer is deleted, you will be unable to create orders for this customer. Past orders will still be displayed for the customer. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmCustomerDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete Customer ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingCustomerDeletion,
            onClose: ($event) => $data.confirmingCustomerDeletion = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Delete Customer ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete this customer? ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingCustomerDeletion = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteCustomer,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Delete Customer ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2I = _sfc_main$2I.setup;
_sfc_main$2I.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Customers/DeleteCustomerForm.vue");
  return _sfc_setup$2I ? _sfc_setup$2I(props, ctx) : void 0;
};
var DeleteCustomerForm = /* @__PURE__ */ _export_sfc(_sfc_main$2I, [["ssrRender", _sfc_ssrRender$2G]]);
var DeleteCustomerForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteCustomerForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2H = {
  components: {
    CustomersLayout
  }
};
function _sfc_ssrRender$2F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_customers_layout = vue.resolveComponent("customers-layout");
  _push(serverRenderer.ssrRenderComponent(_component_customers_layout, _attrs, null, _parent));
}
const _sfc_setup$2H = _sfc_main$2H.setup;
_sfc_main$2H.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Customers/Index.vue");
  return _sfc_setup$2H ? _sfc_setup$2H(props, ctx) : void 0;
};
var Index$o = /* @__PURE__ */ _export_sfc(_sfc_main$2H, [["ssrRender", _sfc_ssrRender$2F]]);
var Index$p = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$o
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2G = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    Switch: vue$1.Switch,
    SwitchDescription: vue$1.SwitchDescription,
    SwitchGroup: vue$1.SwitchGroup,
    SwitchLabel: vue$1.SwitchLabel,
    TextAreaInput,
    SelectBox
  },
  props: ["customer"],
  data() {
    return {
      priceLevels: this.$page.props.priceLevels,
      price_level: this.$page.props.priceLevel,
      updatedCustomer: this.$inertia.form(this.customer)
    };
  },
  computed: {
    hasCustomTaxRate: {
      get() {
        return this.updatedCustomer.tax_percentage !== null;
      },
      set(value) {
        this.updatedCustomer.tax_percentage = value == true ? 8 : null;
      }
    }
  },
  watch: {
    price_level: function() {
      this.price_level ? this.updatedCustomer.customer_price_level_id = this.price_level.id : this.updatedCustomer.customer_price_level_id = null;
    }
  },
  methods: {
    updateCustomer() {
      this.updatedCustomer.patch(
        route("customers.update", this.customer.id),
        {
          preserveScroll: false,
          preserveState: true
        }
      );
    }
  }
};
function _sfc_ssrRender$2E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_SwitchGroup = vue.resolveComponent("SwitchGroup");
  const _component_SwitchLabel = vue.resolveComponent("SwitchLabel");
  const _component_SwitchDescription = vue.resolveComponent("SwitchDescription");
  const _component_Switch = vue.resolveComponent("Switch");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_percentage_input = vue.resolveComponent("percentage-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.updateCustomer }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.customer.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.customer.name), 1)
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update ${serverRenderer.ssrInterpolate($props.customer.name)} by editing the form fields and clicking save. `);
      } else {
        return [
          vue.createTextVNode(" Update " + vue.toDisplayString($props.customer.name) + " by editing the form fields and clicking save. ", 1)
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Customer Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.updatedCustomer.name,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.name = $event,
          required: "",
          autocomplete: "organization"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "notes",
          value: "Customer Notes"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "notes",
          class: "mt-1 block w-full",
          modelValue: $data.updatedCustomer.notes,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.notes = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.notes,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 text-gray-900"${_scopeId}> Primary Address </h3></div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "address",
          value: "Street Address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "address",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.updatedCustomer.address,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.address = $event,
          autocomplete: "address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.address,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "city",
          value: "City"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "city",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.updatedCustomer.city,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.city = $event,
          autocomplete: "address-level2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.city,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "state",
          value: "State"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "state",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.updatedCustomer.state,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.state = $event,
          autocomplete: "address-level1"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.state,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "zip",
          value: "Zip"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "zip",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.updatedCustomer.zip,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.zip = $event,
          autocomplete: "postal-code"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.zip,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-between col-span-3"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="flex-grow flex flex-col mr-4"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-900"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Mailing same as primary`);
                  } else {
                    return [
                      vue.createTextVNode("Mailing same as primary")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchDescription, {
                as: "span",
                class: "text-sm text-gray-500"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Indicate whether the mailing address of this customer is the same as the primary address.`);
                  } else {
                    return [
                      vue.createTextVNode("Indicate whether the mailing address of this customer is the same as the primary address.")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</span>`);
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.updatedCustomer.mailing_same_as_primary,
                "onUpdate:modelValue": ($event) => $data.updatedCustomer.mailing_same_as_primary = $event,
                class: [
                  $data.updatedCustomer.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.updatedCustomer.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.updatedCustomer.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("span", { class: "flex-grow flex flex-col mr-4" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Mailing same as primary")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchDescription, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Indicate whether the mailing address of this customer is the same as the primary address.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.updatedCustomer.mailing_same_as_primary,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.mailing_same_as_primary = $event,
                  class: [
                    $data.updatedCustomer.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.updatedCustomer.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div style="${serverRenderer.ssrRenderStyle(!$data.updatedCustomer.mailing_same_as_primary ? null : { display: "none" })}" class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 text-gray-900"${_scopeId}> Mailing Address </h3></div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "mailing_address",
          value: "Mailing Street Address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "mailing_address",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.updatedCustomer.mailing_address,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.mailing_address = $event,
          autocomplete: "address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.mailing_address,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "mailing_city",
          value: "Mailing City"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "mailing_city",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.updatedCustomer.mailing_city,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.mailing_city = $event,
          autocomplete: "address-level2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.mailing_city,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "mailing_state",
          value: "Mailing State"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "mailing_state",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.updatedCustomer.mailing_state,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.mailing_state = $event,
          autocomplete: "address-level1"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.mailing_state,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 md:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "mailing_zip",
          value: "Mailing Zip"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "mailing_zip",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.updatedCustomer.mailing_zip,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.mailing_zip = $event,
          autocomplete: "postal-code"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.mailing_zip,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 text-gray-900"${_scopeId}> Customer Details </h3></div><div class="grid gap-4 col-span-3"${_scopeId}>`);
        if ($data.priceLevels.length > 0) {
          _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
            items: $data.priceLevels,
            selectedItem: $data.price_level,
            modelValue: $data.price_level,
            "onUpdate:modelValue": ($event) => $data.price_level = $event,
            labelValue: "Customer Price Level"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.customer_price_level_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-start col-span-3 sm:col-span-1"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-900 mr-4"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Taxable?`);
                  } else {
                    return [
                      vue.createTextVNode("Taxable?")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.updatedCustomer.is_taxable,
                "onUpdate:modelValue": ($event) => $data.updatedCustomer.is_taxable = $event,
                class: [
                  $data.updatedCustomer.is_taxable ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.updatedCustomer.is_taxable ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.updatedCustomer.is_taxable ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_SwitchLabel, {
                  as: "span",
                  class: "text-sm text-gray-900 mr-4"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Taxable?")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.updatedCustomer.is_taxable,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.is_taxable = $event,
                  class: [
                    $data.updatedCustomer.is_taxable ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.updatedCustomer.is_taxable ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div class="grid gap-4 sm:gap-6 sm:grid-cols-3 col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          style: $data.updatedCustomer.is_taxable ? null : { display: "none" },
          as: "div",
          class: "flex items-center justify-start sm:col-span-2"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="flex flex-col"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm font-medium text-gray-900 mr-4"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Custom Tax Rate?`);
                  } else {
                    return [
                      vue.createTextVNode("Custom Tax Rate?")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-500"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Indicate whether this customer has a custom tax rate to be applied to taxable orders and products.`);
                  } else {
                    return [
                      vue.createTextVNode("Indicate whether this customer has a custom tax rate to be applied to taxable orders and products.")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $options.hasCustomTaxRate,
                "onUpdate:modelValue": ($event) => $options.hasCustomTaxRate = $event,
                class: [
                  $options.hasCustomTaxRate ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $options.hasCustomTaxRate ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $options.hasCustomTaxRate ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("div", { class: "flex flex-col" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm font-medium text-gray-900 mr-4"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Custom Tax Rate?")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Indicate whether this customer has a custom tax rate to be applied to taxable orders and products.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $options.hasCustomTaxRate,
                  "onUpdate:modelValue": ($event) => $options.hasCustomTaxRate = $event,
                  class: [
                    $options.hasCustomTaxRate ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $options.hasCustomTaxRate ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div style="${serverRenderer.ssrRenderStyle($options.hasCustomTaxRate ? null : { display: "none" })}"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "tax_percentage",
          value: "Customer Tax Rate"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_percentage_input, {
          id: "tax_percentage",
          max: "100.00",
          min: "0.00",
          step: ".01",
          placeholder: "0.00",
          modelValue: $data.updatedCustomer.tax_percentage,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.tax_percentage = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.tax_percentage,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div><div class="grid gap-4 sm:grid-cols-2 col-span-3"${_scopeId}><div class=""${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "discount_percentage",
          value: "Percentage Discount"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_percentage_input, {
          id: "discount_percentage",
          max: "100.00",
          min: "0.00",
          placeholder: "0.00",
          modelValue: $data.updatedCustomer.discount_percentage,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.discount_percentage = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.discount_percentage,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class=""${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "reseller_permit_expiration",
          value: "Reseller Permit Expiration"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "reseller_permit_expiration",
          type: "date",
          class: "mt-1 block w-full",
          modelValue: $data.updatedCustomer.reseller_permit_expiration,
          "onUpdate:modelValue": ($event) => $data.updatedCustomer.reseller_permit_expiration = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedCustomer.errors.reseller_permit_expiration,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Customer Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.updatedCustomer.name,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.name = $event,
                  required: "",
                  autocomplete: "organization"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedCustomer.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "notes",
                  value: "Customer Notes"
                }),
                vue.createVNode(_component_text_area_input, {
                  id: "notes",
                  class: "mt-1 block w-full",
                  modelValue: $data.updatedCustomer.notes,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.notes = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedCustomer.errors.notes,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ]),
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                vue.createVNode("h3", { class: "text-lg leading-6 text-gray-900" }, " Primary Address ")
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "address",
                  value: "Street Address"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "address",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.updatedCustomer.address,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.address = $event,
                  autocomplete: "address"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedCustomer.errors.address,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "city",
                  value: "City"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "city",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.updatedCustomer.city,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.city = $event,
                  autocomplete: "address-level2"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedCustomer.errors.city,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "state",
                  value: "State"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "state",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.updatedCustomer.state,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.state = $event,
                  autocomplete: "address-level1"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedCustomer.errors.state,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "zip",
                  value: "Zip"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "zip",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.updatedCustomer.zip,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.zip = $event,
                  autocomplete: "postal-code"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedCustomer.errors.zip,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode(_component_SwitchGroup, {
                as: "div",
                class: "flex items-center justify-between col-span-3"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "flex-grow flex flex-col mr-4" }, [
                    vue.createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm text-gray-900"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Mailing same as primary")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_SwitchDescription, {
                      as: "span",
                      class: "text-sm text-gray-500"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Indicate whether the mailing address of this customer is the same as the primary address.")
                      ]),
                      _: 1
                    })
                  ]),
                  vue.createVNode(_component_Switch, {
                    modelValue: $data.updatedCustomer.mailing_same_as_primary,
                    "onUpdate:modelValue": ($event) => $data.updatedCustomer.mailing_same_as_primary = $event,
                    class: [
                      $data.updatedCustomer.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                      "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                    ]
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.updatedCustomer.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ]),
                    _: 1
                  }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                ]),
                _: 1
              })
            ]),
            vue.withDirectives(vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                vue.createVNode("h3", { class: "text-lg leading-6 text-gray-900" }, " Mailing Address ")
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_address",
                  value: "Mailing Street Address"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_address",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.updatedCustomer.mailing_address,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.mailing_address = $event,
                  autocomplete: "address"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedCustomer.errors.mailing_address,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_city",
                  value: "Mailing City"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_city",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.updatedCustomer.mailing_city,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.mailing_city = $event,
                  autocomplete: "address-level2"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedCustomer.errors.mailing_city,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_state",
                  value: "Mailing State"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_state",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.updatedCustomer.mailing_state,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.mailing_state = $event,
                  autocomplete: "address-level1"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedCustomer.errors.mailing_state,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 md:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_zip",
                  value: "Mailing Zip"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_zip",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.updatedCustomer.mailing_zip,
                  "onUpdate:modelValue": ($event) => $data.updatedCustomer.mailing_zip = $event,
                  autocomplete: "postal-code"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedCustomer.errors.mailing_zip,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ], 512), [
              [vue.vShow, !$data.updatedCustomer.mailing_same_as_primary]
            ]),
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                vue.createVNode("h3", { class: "text-lg leading-6 text-gray-900" }, " Customer Details ")
              ]),
              vue.createVNode("div", { class: "grid gap-4 col-span-3" }, [
                $data.priceLevels.length > 0 ? (vue.openBlock(), vue.createBlock(_component_select_box, {
                  key: 0,
                  items: $data.priceLevels,
                  selectedItem: $data.price_level,
                  modelValue: $data.price_level,
                  "onUpdate:modelValue": ($event) => $data.price_level = $event,
                  labelValue: "Customer Price Level"
                }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"])) : vue.createCommentVNode("", true),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedCustomer.errors.customer_price_level_id,
                  class: "mt-2"
                }, null, 8, ["message"]),
                vue.createVNode(_component_SwitchGroup, {
                  as: "div",
                  class: "flex items-center justify-start col-span-3 sm:col-span-1"
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm text-gray-900 mr-4"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Taxable?")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_Switch, {
                      modelValue: $data.updatedCustomer.is_taxable,
                      "onUpdate:modelValue": ($event) => $data.updatedCustomer.is_taxable = $event,
                      class: [
                        $data.updatedCustomer.is_taxable ? "bg-green-600" : "bg-gray-200",
                        "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                      ]
                    }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("span", {
                          "aria-hidden": "true",
                          class: [
                            $data.updatedCustomer.is_taxable ? "translate-x-5" : "translate-x-0",
                            "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                          ]
                        }, null, 2)
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                  ]),
                  _: 1
                }),
                vue.createVNode("div", { class: "grid gap-4 sm:gap-6 sm:grid-cols-3 col-span-3" }, [
                  vue.withDirectives(vue.createVNode(_component_SwitchGroup, {
                    as: "div",
                    class: "flex items-center justify-start sm:col-span-2"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex flex-col" }, [
                        vue.createVNode(_component_SwitchLabel, {
                          as: "span",
                          class: "text-sm font-medium text-gray-900 mr-4"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Custom Tax Rate?")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_SwitchLabel, {
                          as: "span",
                          class: "text-sm text-gray-500"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Indicate whether this customer has a custom tax rate to be applied to taxable orders and products.")
                          ]),
                          _: 1
                        })
                      ]),
                      vue.createVNode(_component_Switch, {
                        modelValue: $options.hasCustomTaxRate,
                        "onUpdate:modelValue": ($event) => $options.hasCustomTaxRate = $event,
                        class: [
                          $options.hasCustomTaxRate ? "bg-green-600" : "bg-gray-200",
                          "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                        ]
                      }, {
                        default: vue.withCtx(() => [
                          vue.createVNode("span", {
                            "aria-hidden": "true",
                            class: [
                              $options.hasCustomTaxRate ? "translate-x-5" : "translate-x-0",
                              "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transupdatedCustomer ring-0 transition ease-in-out duration-200"
                            ]
                          }, null, 2)
                        ]),
                        _: 1
                      }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                    ]),
                    _: 1
                  }, 512), [
                    [vue.vShow, $data.updatedCustomer.is_taxable]
                  ]),
                  vue.withDirectives(vue.createVNode("div", null, [
                    vue.createVNode(_component_jet_label, {
                      for: "tax_percentage",
                      value: "Customer Tax Rate"
                    }),
                    vue.createVNode(_component_percentage_input, {
                      id: "tax_percentage",
                      max: "100.00",
                      min: "0.00",
                      step: ".01",
                      placeholder: "0.00",
                      modelValue: $data.updatedCustomer.tax_percentage,
                      "onUpdate:modelValue": ($event) => $data.updatedCustomer.tax_percentage = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.updatedCustomer.errors.tax_percentage,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ], 512), [
                    [vue.vShow, $options.hasCustomTaxRate]
                  ])
                ])
              ]),
              vue.createVNode("div", { class: "grid gap-4 sm:grid-cols-2 col-span-3" }, [
                vue.createVNode("div", { class: "" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "discount_percentage",
                    value: "Percentage Discount"
                  }),
                  vue.createVNode(_component_percentage_input, {
                    id: "discount_percentage",
                    max: "100.00",
                    min: "0.00",
                    placeholder: "0.00",
                    modelValue: $data.updatedCustomer.discount_percentage,
                    "onUpdate:modelValue": ($event) => $data.updatedCustomer.discount_percentage = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.updatedCustomer.errors.discount_percentage,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "reseller_permit_expiration",
                    value: "Reseller Permit Expiration"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "reseller_permit_expiration",
                    type: "date",
                    class: "mt-1 block w-full",
                    modelValue: $data.updatedCustomer.reseller_permit_expiration,
                    "onUpdate:modelValue": ($event) => $data.updatedCustomer.reseller_permit_expiration = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.updatedCustomer.errors.reseller_permit_expiration,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: [
            { "opacity-25": $data.updatedCustomer.processing },
            { "opacity-25": !$data.updatedCustomer.isDirty }
          ],
          disabled: $data.updatedCustomer.processing || !$data.updatedCustomer.isDirty
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Customer`);
            } else {
              return [
                vue.createTextVNode("Save Customer")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: [
              { "opacity-25": $data.updatedCustomer.processing },
              { "opacity-25": !$data.updatedCustomer.isDirty }
            ],
            disabled: $data.updatedCustomer.processing || !$data.updatedCustomer.isDirty
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Customer")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2G = _sfc_main$2G.setup;
_sfc_main$2G.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Customers/UpdateCustomerForm.vue");
  return _sfc_setup$2G ? _sfc_setup$2G(props, ctx) : void 0;
};
var UpdateCustomerForm = /* @__PURE__ */ _export_sfc(_sfc_main$2G, [["ssrRender", _sfc_ssrRender$2E]]);
var UpdateCustomerForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateCustomerForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2F = {
  components: {
    CustomersLayout,
    UpdateCustomerForm,
    ButtonLink,
    DeleteCustomerForm,
    ContactAside
  },
  props: {
    customer: Object
  }
};
function _sfc_ssrRender$2D(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_customers_layout = vue.resolveComponent("customers-layout");
  const _component_update_customer_form = vue.resolveComponent("update-customer-form");
  const _component_contact_aside = vue.resolveComponent("contact-aside");
  const _component_delete_customer_form = vue.resolveComponent("delete-customer-form");
  _push(serverRenderer.ssrRenderComponent(_component_customers_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="lg:grid lg:grid-cols-8 gap-4"${_scopeId}><div class="lg:col-span-5 mb-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_update_customer_form, { customer: $props.customer }, null, _parent2, _scopeId));
        _push2(`</div><div class="lg:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_contact_aside, {
          "contactable-type": "customers",
          "contactable-id": $props.customer.id,
          contacts: $props.customer.contacts
        }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_delete_customer_form, { customer: $props.customer }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", null, [
            vue.createVNode("div", { class: "lg:grid lg:grid-cols-8 gap-4" }, [
              vue.createVNode("div", { class: "lg:col-span-5 mb-6" }, [
                vue.createVNode(_component_update_customer_form, { customer: $props.customer }, null, 8, ["customer"])
              ]),
              vue.createVNode("div", { class: "lg:col-span-3" }, [
                vue.createVNode(_component_contact_aside, {
                  "contactable-type": "customers",
                  "contactable-id": $props.customer.id,
                  contacts: $props.customer.contacts
                }, null, 8, ["contactable-id", "contacts"])
              ])
            ]),
            vue.createVNode(_component_delete_customer_form, { customer: $props.customer }, null, 8, ["customer"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2F = _sfc_main$2F.setup;
_sfc_main$2F.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Customers/Show.vue");
  return _sfc_setup$2F ? _sfc_setup$2F(props, ctx) : void 0;
};
var Show$o = /* @__PURE__ */ _export_sfc(_sfc_main$2F, [["ssrRender", _sfc_ssrRender$2D]]);
var Show$p = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$o
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2E = {
  components: {
    PageAside,
    AsideLink,
    ButtonLink,
    EmptyState,
    JetSectionTitle: SectionTitle
  },
  props: {
    features: Array
  }
};
function _sfc_ssrRender$2C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_page_aside = vue.resolveComponent("page-aside");
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_aside_link = vue.resolveComponent("aside-link");
  const _component_empty_state = vue.resolveComponent("empty-state");
  _push(serverRenderer.ssrRenderComponent(_component_page_aside, vue.mergeProps({
    showOnMobile: _ctx.route().current("features.index")
  }, _attrs), {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Plant Features`);
            } else {
              return [
                vue.createTextVNode("Plant Features")
              ];
            }
          }),
          description: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`View your plant features.`);
            } else {
              return [
                vue.createTextVNode("View your plant features.")
              ];
            }
          }),
          aside: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_button_link, {
                href: _ctx.route("features.create")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`New Feature`);
                  } else {
                    return [
                      vue.createTextVNode("New Feature")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_button_link, {
                  href: _ctx.route("features.create")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("New Feature")
                  ]),
                  _: 1
                }, 8, ["href"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_section_title, null, {
            title: vue.withCtx(() => [
              vue.createTextVNode("Plant Features")
            ]),
            description: vue.withCtx(() => [
              vue.createTextVNode("View your plant features.")
            ]),
            aside: vue.withCtx(() => [
              vue.createVNode(_component_button_link, {
                href: _ctx.route("features.create")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New Feature")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            _: 1
          })
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white"${_scopeId}><ul class="divide-y divide-gray-200"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($props.features, (feature) => {
          _push2(`<li class="bg-white"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_aside_link, {
            href: _ctx.route("features.show", feature.id),
            current: _ctx.route().current("features.show", feature.id)
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex-1 min-w-0"${_scopeId2}><div class="focus:outline-none"${_scopeId2}><span class="absolute inset-0" aria-hidden="true"${_scopeId2}></span><p class="text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate(feature.name)}</p>`);
                if (feature.description) {
                  _push3(`<p class="text-sm text-gray-500 truncate"${_scopeId2}>${serverRenderer.ssrInterpolate(feature.description)}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                    vue.createVNode("div", { class: "focus:outline-none" }, [
                      vue.createVNode("span", {
                        class: "absolute inset-0",
                        "aria-hidden": "true"
                      }),
                      vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(feature.name), 1),
                      feature.description ? (vue.openBlock(), vue.createBlock("p", {
                        key: 0,
                        class: "text-sm text-gray-500 truncate"
                      }, vue.toDisplayString(feature.description), 1)) : vue.createCommentVNode("", true)
                    ])
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</li>`);
        });
        _push2(`<!--]--></ul></div>`);
        if ($props.features.length < 1 && _ctx.route().current("features.index")) {
          _push2(serverRenderer.ssrRenderComponent(_component_empty_state, {
            heading: "No Features",
            subtitle: "Get started by creating a new plant feature.",
            "button-text": "New Feature",
            href: _ctx.route("features.create")
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", { class: "bg-white" }, [
            vue.createVNode("ul", { class: "divide-y divide-gray-200" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.features, (feature) => {
                return vue.openBlock(), vue.createBlock("li", {
                  key: feature.id,
                  class: "bg-white"
                }, [
                  vue.createVNode(_component_aside_link, {
                    href: _ctx.route("features.show", feature.id),
                    current: _ctx.route().current("features.show", feature.id)
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                        vue.createVNode("div", { class: "focus:outline-none" }, [
                          vue.createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(feature.name), 1),
                          feature.description ? (vue.openBlock(), vue.createBlock("p", {
                            key: 0,
                            class: "text-sm text-gray-500 truncate"
                          }, vue.toDisplayString(feature.description), 1)) : vue.createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 2
                  }, 1032, ["href", "current"])
                ]);
              }), 128))
            ])
          ]),
          $props.features.length < 1 && _ctx.route().current("features.index") ? (vue.openBlock(), vue.createBlock(_component_empty_state, {
            key: 0,
            heading: "No Features",
            subtitle: "Get started by creating a new plant feature.",
            "button-text": "New Feature",
            href: _ctx.route("features.create")
          }, null, 8, ["href"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2E = _sfc_main$2E.setup;
_sfc_main$2E.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Features/FeaturesAside.vue");
  return _sfc_setup$2E ? _sfc_setup$2E(props, ctx) : void 0;
};
var FeaturesAside = /* @__PURE__ */ _export_sfc(_sfc_main$2E, [["ssrRender", _sfc_ssrRender$2C]]);
var FeaturesAside$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": FeaturesAside
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2D = {
  components: {
    FeaturesAside,
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    features() {
      return this.$page.props.features;
    },
    isIndex() {
      return route().current("features.index");
    }
  }
};
function _sfc_ssrRender$2B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  const _component_features_aside = vue.resolveComponent("features-aside");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb" class="xl:hidden"${_scopeId2}><div class="px-4 md:pb-2"${_scopeId2}>`);
                _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                  href: _ctx.route("features.index")
                }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`Features`);
                    } else {
                      return [
                        vue.createTextVNode("Features")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</div></nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    vue.createVNode(_component_back_link, {
                      href: _ctx.route("features.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Features")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_features_aside, { features: $options.features }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
              default: vue.withCtx(() => [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    vue.createVNode(_component_back_link, {
                      href: _ctx.route("features.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Features")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ]),
              _: 3
            }, 8, ["dontShowOnMobile"]),
            vue.createVNode(_component_features_aside, { features: $options.features }, null, 8, ["features"])
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$2D = _sfc_main$2D.setup;
_sfc_main$2D.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Features/FeaturesLayout.vue");
  return _sfc_setup$2D ? _sfc_setup$2D(props, ctx) : void 0;
};
var FeaturesLayout = /* @__PURE__ */ _export_sfc(_sfc_main$2D, [["ssrRender", _sfc_ssrRender$2B]]);
var FeaturesLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": FeaturesLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2C = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput
  },
  data() {
    return {
      form: this.$inertia.form({
        _method: "POST",
        name: ""
      })
    };
  },
  methods: {
    createFeature() {
      this.form.post(route("features.store"), {
        errorBag: "createFeature",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$2A(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.createFeature }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create a Feature`);
      } else {
        return [
          vue.createTextVNode("Create a Feature")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a feature for your plants. Features are things that you would like to display on tags that show additional details about a specific plant. Ex: Offers Shade `);
      } else {
        return [
          vue.createTextVNode(" Create a feature for your plants. Features are things that you would like to display on tags that show additional details about a specific plant. Ex: Offers Shade ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Feature Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Feature Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Feature`);
            } else {
              return [
                vue.createTextVNode("Save Feature")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Feature")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2C = _sfc_main$2C.setup;
_sfc_main$2C.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Features/CreateFeatureForm.vue");
  return _sfc_setup$2C ? _sfc_setup$2C(props, ctx) : void 0;
};
var CreateFeatureForm = /* @__PURE__ */ _export_sfc(_sfc_main$2C, [["ssrRender", _sfc_ssrRender$2A]]);
var CreateFeatureForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateFeatureForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2B = {
  components: {
    FeaturesLayout,
    CreateFeatureForm
  }
};
function _sfc_ssrRender$2z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_features_layout = vue.resolveComponent("features-layout");
  const _component_create_feature_form = vue.resolveComponent("create-feature-form");
  _push(serverRenderer.ssrRenderComponent(_component_features_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_feature_form, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_feature_form)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2B = _sfc_main$2B.setup;
_sfc_main$2B.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Features/Create.vue");
  return _sfc_setup$2B ? _sfc_setup$2B(props, ctx) : void 0;
};
var Create$i = /* @__PURE__ */ _export_sfc(_sfc_main$2B, [["ssrRender", _sfc_ssrRender$2z]]);
var Create$j = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$i
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2A = {
  props: { feature: Object },
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingFeatureDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmFeatureDeletion() {
      this.confirmingFeatureDeletion = true;
    },
    deleteFeature() {
      this.form.delete(route("features.destroy", this.feature), {
        errorBag: "deleteFeature"
      });
    }
  }
};
function _sfc_ssrRender$2y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Feature `);
      } else {
        return [
          vue.createTextVNode(" Delete Feature ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete ${serverRenderer.ssrInterpolate($props.feature.name)}. All products containing this feature will no longer have it. `);
      } else {
        return [
          vue.createTextVNode(" Delete " + vue.toDisplayString($props.feature.name) + ". All products containing this feature will no longer have it. ", 1)
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a feature is deleted, you will not be able to recover it again. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmFeatureDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Feature `);
            } else {
              return [
                vue.createTextVNode(" Delete Feature ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingFeatureDeletion,
          onClose: ($event) => $data.confirmingFeatureDeletion = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Feature `);
            } else {
              return [
                vue.createTextVNode(" Delete Feature ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this feature? `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete this feature? ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingFeatureDeletion = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteFeature,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Feature `);
                  } else {
                    return [
                      vue.createTextVNode(" Delete Feature ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingFeatureDeletion = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.deleteFeature,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Delete Feature ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a feature is deleted, you will not be able to recover it again. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmFeatureDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete Feature ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingFeatureDeletion,
            onClose: ($event) => $data.confirmingFeatureDeletion = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Delete Feature ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete this feature? ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingFeatureDeletion = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteFeature,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Delete Feature ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2A = _sfc_main$2A.setup;
_sfc_main$2A.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Features/DeleteFeatureForm.vue");
  return _sfc_setup$2A ? _sfc_setup$2A(props, ctx) : void 0;
};
var DeleteFeatureForm = /* @__PURE__ */ _export_sfc(_sfc_main$2A, [["ssrRender", _sfc_ssrRender$2y]]);
var DeleteFeatureForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteFeatureForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2z = {
  components: {
    FeaturesLayout
  }
};
function _sfc_ssrRender$2x(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_features_layout = vue.resolveComponent("features-layout");
  _push(serverRenderer.ssrRenderComponent(_component_features_layout, _attrs, null, _parent));
}
const _sfc_setup$2z = _sfc_main$2z.setup;
_sfc_main$2z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Features/Index.vue");
  return _sfc_setup$2z ? _sfc_setup$2z(props, ctx) : void 0;
};
var Index$m = /* @__PURE__ */ _export_sfc(_sfc_main$2z, [["ssrRender", _sfc_ssrRender$2x]]);
var Index$n = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$m
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2y = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput
  },
  props: { feature: Object },
  data() {
    return {
      form: this.$inertia.form({
        _method: "PATCH",
        name: this.feature.name
      })
    };
  },
  methods: {
    updateFeature() {
      this.form.patch(route("features.update", this.feature), {
        errorBag: "updateFeature",
        preserveScroll: true,
        preserveState: false
      });
    }
  }
};
function _sfc_ssrRender$2w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.updateFeature }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.feature.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.feature.name), 1)
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update this feature. Plants containing this feature will have the changes reflected immediately. `);
      } else {
        return [
          vue.createTextVNode(" Update this feature. Plants containing this feature will have the changes reflected immediately. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Feature Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Feature Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
          disabled: $data.form.processing || !$data.form.isDirty
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Feature`);
            } else {
              return [
                vue.createTextVNode("Save Feature")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
            disabled: $data.form.processing || !$data.form.isDirty
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Feature")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2y = _sfc_main$2y.setup;
_sfc_main$2y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Features/UpdateFeatureForm.vue");
  return _sfc_setup$2y ? _sfc_setup$2y(props, ctx) : void 0;
};
var UpdateFeatureForm = /* @__PURE__ */ _export_sfc(_sfc_main$2y, [["ssrRender", _sfc_ssrRender$2w]]);
var UpdateFeatureForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateFeatureForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2x = {
  components: {
    FeaturesLayout,
    UpdateFeatureForm,
    DeleteFeatureForm
  },
  props: {
    feature: Object
  }
};
function _sfc_ssrRender$2v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_features_layout = vue.resolveComponent("features-layout");
  const _component_update_feature_form = vue.resolveComponent("update-feature-form");
  const _component_delete_feature_form = vue.resolveComponent("delete-feature-form");
  _push(serverRenderer.ssrRenderComponent(_component_features_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_update_feature_form, { feature: $props.feature }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_delete_feature_form, {
          feature: $props.feature,
          class: "py-6"
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_update_feature_form, { feature: $props.feature }, null, 8, ["feature"]),
          vue.createVNode(_component_delete_feature_form, {
            feature: $props.feature,
            class: "py-6"
          }, null, 8, ["feature"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2x = _sfc_main$2x.setup;
_sfc_main$2x.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Features/Show.vue");
  return _sfc_setup$2x ? _sfc_setup$2x(props, ctx) : void 0;
};
var Show$m = /* @__PURE__ */ _export_sfc(_sfc_main$2x, [["ssrRender", _sfc_ssrRender$2v]]);
var Show$n = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$m
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2w = {
  components: {
    JetButton,
    JetInput,
    JetInputError,
    JetLabel,
    SearchInput
  },
  data() {
    return {
      id: "",
      loading: false
    };
  },
  methods: {
    searchInventory() {
      inertia.Inertia.get(route("inventory.show", this.id));
    },
    updateLoadingState() {
      inertia.Inertia.on("start", () => {
        this.loading = true;
      });
      inertia.Inertia.on("finish", (event) => {
        this.loading = false;
      });
    }
  },
  mounted() {
    this.updateLoadingState();
  }
};
function _sfc_ssrRender$2u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_SearchInput = vue.resolveComponent("SearchInput");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<form${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "flex items-center space-x-2 max-w-lg" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_SearchInput, {
    modelValue: $data.id,
    "onUpdate:modelValue": ($event) => $data.id = $event,
    class: "mt-0 w-full",
    ref: "search",
    autofocus: !_ctx.route().current("inventory.index"),
    disabled: $data.loading,
    placeholder: "Search by plant id",
    title: "Must be a valid id",
    inputmode: "numeric",
    pattern: "\\d*"
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    type: "submit",
    disabled: !$data.id
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Search`);
      } else {
        return [
          vue.createTextVNode("Search")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</form>`);
}
const _sfc_setup$2w = _sfc_main$2w.setup;
_sfc_main$2w.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Inventory/Components/SearchInventory.vue");
  return _sfc_setup$2w ? _sfc_setup$2w(props, ctx) : void 0;
};
var SearchInventory = /* @__PURE__ */ _export_sfc(_sfc_main$2w, [["ssrRender", _sfc_ssrRender$2u]]);
var SearchInventory$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": SearchInventory
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2v = {};
function _sfc_ssrRender$2t(_ctx, _push, _parent, _attrs) {
  _push(`<table${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "table-auto bg-white sm:rounded-lg min-w-full overflow-auto" }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</table>`);
}
const _sfc_setup$2v = _sfc_main$2v.setup;
_sfc_main$2v.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Tables/TableTable.vue");
  return _sfc_setup$2v ? _sfc_setup$2v(props, ctx) : void 0;
};
var TableTable = /* @__PURE__ */ _export_sfc(_sfc_main$2v, [["ssrRender", _sfc_ssrRender$2t]]);
const _sfc_main$2u = {};
function _sfc_ssrRender$2s(_ctx, _push, _parent, _attrs) {
  _push(`<thead${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "sticky top-0 z-10 bg-white border-b border-gray-100" }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</thead>`);
}
const _sfc_setup$2u = _sfc_main$2u.setup;
_sfc_main$2u.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Tables/TableHead.vue");
  return _sfc_setup$2u ? _sfc_setup$2u(props, ctx) : void 0;
};
var TableHead = /* @__PURE__ */ _export_sfc(_sfc_main$2u, [["ssrRender", _sfc_ssrRender$2s]]);
const _sfc_main$2t = {
  props: {
    items: {
      type: Object
    }
  },
  computed: {
    links() {
      return this.items.links.filter(
        (link) => !link.label.includes("Next") && !link.label.includes("Previous")
      );
    }
  },
  onMounted() {
    console.log(this.items.links);
  }
};
function _sfc_ssrRender$2r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = vue.resolveComponent("Link");
  if ($props.items.links.length > 3) {
    _push(`<nav${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "border-t border-gray-200 px-4 flex items-center justify-between sm:px-0" }, _attrs))}><div class="-mt-px w-0 flex-1 flex">`);
    if (!$props.items.prev_page_url) {
      _push(`<div class="border-t-2 border-transparent pt-4 pr-1 inline-flex items-center text-sm font-medium text-gray-500 cursor-not-allowed"><svg class="mr-3 h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18"></path></svg> Previous </div>`);
    } else {
      _push(serverRenderer.ssrRenderComponent(_component_Link, {
        href: $props.items.prev_page_url,
        class: "border-t-2 border-transparent pt-4 pr-1 inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<svg class="mr-3 h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18"${_scopeId}></path></svg> Previous `);
          } else {
            return [
              (vue.openBlock(), vue.createBlock("svg", {
                class: "mr-3 h-5 w-5 text-gray-400",
                fill: "none",
                stroke: "currentColor",
                viewBox: "0 0 24 24",
                xmlns: "http://www.w3.org/2000/svg"
              }, [
                vue.createVNode("path", {
                  "stroke-linecap": "round",
                  "stroke-linejoin": "round",
                  "stroke-width": "2",
                  d: "M7 16l-4-4m0 0l4-4m-4 4h18"
                })
              ])),
              vue.createTextVNode(" Previous ")
            ];
          }
        }),
        _: 1
      }, _parent));
    }
    _push(`</div><div class="hidden md:-mt-px md:flex"><!--[-->`);
    serverRenderer.ssrRenderList($options.links, (link) => {
      _push(`<!--[-->`);
      if (link.url) {
        _push(serverRenderer.ssrRenderComponent(_component_Link, {
          href: link.url,
          class: ["border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium", {
            "border-green-500 text-green-600": link.active
          }]
        }, {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`${serverRenderer.ssrInterpolate(link.label)}`);
            } else {
              return [
                vue.createTextVNode(vue.toDisplayString(link.label), 1)
              ];
            }
          }),
          _: 2
        }, _parent));
      } else {
        _push(`<span class="border-transparent text-gray-500 border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium"> ... </span>`);
      }
      _push(`<!--]-->`);
    });
    _push(`<!--]--></div><div class="-mt-px w-0 flex-1 flex justify-end">`);
    if (!$props.items.next_page_url) {
      _push(`<div class="border-t-2 border-transparent pt-4 pl-1 inline-flex items-center text-sm font-medium text-gray-500 cursor-not-allowed"> Next <svg class="ml-3 h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path></svg></div>`);
    } else {
      _push(serverRenderer.ssrRenderComponent(_component_Link, {
        href: $props.items.next_page_url,
        class: "border-t-2 border-transparent pt-4 pl-1 inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Next <svg class="ml-3 h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"${_scopeId}></path></svg>`);
          } else {
            return [
              vue.createTextVNode(" Next "),
              (vue.openBlock(), vue.createBlock("svg", {
                class: "ml-3 h-5 w-5 text-gray-400",
                fill: "none",
                stroke: "currentColor",
                viewBox: "0 0 24 24",
                xmlns: "http://www.w3.org/2000/svg"
              }, [
                vue.createVNode("path", {
                  "stroke-linecap": "round",
                  "stroke-linejoin": "round",
                  "stroke-width": "2",
                  d: "M17 8l4 4m0 0l-4 4m4-4H3"
                })
              ]))
            ];
          }
        }),
        _: 1
      }, _parent));
    }
    _push(`</div></nav>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$2t = _sfc_main$2t.setup;
_sfc_main$2t.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Pagination.vue");
  return _sfc_setup$2t ? _sfc_setup$2t(props, ctx) : void 0;
};
var Pagination = /* @__PURE__ */ _export_sfc(_sfc_main$2t, [["ssrRender", _sfc_ssrRender$2r]]);
const _sfc_main$2s = {};
function _sfc_ssrRender$2q(_ctx, _push, _parent, _attrs) {
  _push(`<td${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "px-4 py-4 whitespace-nowrap text-sm text-gray-700" }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</td>`);
}
const _sfc_setup$2s = _sfc_main$2s.setup;
_sfc_main$2s.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Tables/TableD.vue");
  return _sfc_setup$2s ? _sfc_setup$2s(props, ctx) : void 0;
};
var TableD = /* @__PURE__ */ _export_sfc(_sfc_main$2s, [["ssrRender", _sfc_ssrRender$2q]]);
const _sfc_main$2r = {
  components: {
    TableD
  },
  props: {
    item: Object,
    itemSelected: Boolean
  },
  data() {
    return {
      selected: this.itemSelected
    };
  },
  emits: ["selected"],
  watch: {
    itemSelected() {
      this.selected = this.itemSelected;
    }
  }
};
function _sfc_ssrRender$2p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_table_d = vue.resolveComponent("table-d");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_Link = vue.resolveComponent("Link");
  _push(`<tr${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    tabindex: "0",
    class: "px-2"
  }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_table_d, { class: "sticky left-0 bg-white" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          class: "sr-only",
          for: "item-selected" + $props.item.id
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Select`);
            } else {
              return [
                vue.createTextVNode("Select")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          id: "item-selected" + $props.item.id,
          onChange: ($event) => _ctx.$emit("selected"),
          value: $props.item.id,
          modelValue: $data.selected,
          "onUpdate:modelValue": ($event) => $data.selected = $event,
          checked: $data.selected
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_label, {
            class: "sr-only",
            for: "item-selected" + $props.item.id
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Select")
            ]),
            _: 1
          }, 8, ["for"]),
          vue.createVNode(_component_jet_checkbox, {
            id: "item-selected" + $props.item.id,
            onChange: ($event) => _ctx.$emit("selected"),
            value: $props.item.id,
            modelValue: $data.selected,
            "onUpdate:modelValue": ($event) => $data.selected = $event,
            checked: $data.selected
          }, null, 8, ["id", "onChange", "value", "modelValue", "onUpdate:modelValue", "checked"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.item.id)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.item.id), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.item.quantity)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.item.quantity), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate(_ctx.formatDate($props.item.created_at))}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString(_ctx.formatDate($props.item.created_at)), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate(_ctx.formatDate($props.item.updated_at))}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString(_ctx.formatDate($props.item.updated_at)), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.item.product.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.item.product.name), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.item.size.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.item.size.name), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      var _a, _b;
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate((_a = $props.item.nursery_location) == null ? void 0 : _a.location_code)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString((_b = $props.item.nursery_location) == null ? void 0 : _b.location_code), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.item.block.BlockDisplayName)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.item.block.BlockDisplayName), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.item.place_name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.item.place_name), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_Link, {
          href: _ctx.route("inventory.show", $props.item.id),
          class: "link"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Edit`);
            } else {
              return [
                vue.createTextVNode("Edit")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_Link, {
            href: _ctx.route("inventory.show", $props.item.id),
            class: "link"
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Edit")
            ]),
            _: 1
          }, 8, ["href"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</tr>`);
}
const _sfc_setup$2r = _sfc_main$2r.setup;
_sfc_main$2r.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Inventory/Components/InventoryLineItem.vue");
  return _sfc_setup$2r ? _sfc_setup$2r(props, ctx) : void 0;
};
var InventoryLineItem = /* @__PURE__ */ _export_sfc(_sfc_main$2r, [["ssrRender", _sfc_ssrRender$2p]]);
var InventoryLineItem$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventoryLineItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2q = {
  components: {
    ExternalLinkIcon: outline.ExternalLinkIcon,
    ArrowDownIcon: outline.ArrowDownIcon,
    ArrowUpIcon: outline.ArrowUpIcon,
    DetailsSection,
    TableTable,
    TableHead,
    TableH,
    SearchInput,
    Pagination,
    InventoryLineItem,
    ButtonLink
  },
  props: {
    inventory: {
      type: Object
    },
    filters: {
      type: Object
    }
  },
  data() {
    var _a;
    return {
      allSelected: false,
      selected: [],
      search: this.filters.search || "",
      orderBy: this.filters.orderBy || "",
      orderByDirection: (_a = this.filters.orderByDirection) != null ? _a : "desc"
    };
  },
  computed: {
    selectedItems() {
      return this.inventory.data.filter(
        (item) => this.selected.includes(item.id)
      );
    }
  },
  watch: {
    selected: {
      handler() {
        this.allSelected = this.selected.length === this.inventory.data.length;
      },
      deep: true
    },
    search: _debounce__default["default"](function(value) {
      this.updateSearch();
    }, 500)
  },
  methods: {
    toggleAllSelected() {
      this.allSelected = !this.allSelected;
      this.selected = this.allSelected ? this.inventory.data.map((item) => item.id) : [];
    },
    toggleSelected(currentItem) {
      if (this.selected.includes(currentItem.id)) {
        this.selected = this.selected.filter(
          (item) => item !== currentItem.id
        );
      } else {
        this.selected.push(currentItem.id);
      }
    },
    isItemSelected(currentItem) {
      return this.selected.includes(currentItem.id);
    },
    updateItemBy(value) {
      if (this.orderBy === value) {
        this.orderByDirection = this.orderByDirection === "desc" ? "asc" : "desc";
      } else {
        this.orderBy = value;
        this.orderByDirection = "desc";
      }
      this.updateSearch();
    },
    updateSearch() {
      this.$inertia.get(
        this.route("inventory.index"),
        {
          search: this.search,
          orderBy: this.orderBy,
          orderByDirection: this.orderByDirection,
          includePrinted: this.filters.includePrinted
        },
        {
          preserveState: true,
          replace: true
        }
      );
    },
    showItem(item) {
      this.$inertia.get(route("inventory.show", item));
    }
  }
};
function _sfc_ssrRender$2o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_search_input = vue.resolveComponent("search-input");
  const _component_table_table = vue.resolveComponent("table-table");
  const _component_table_head = vue.resolveComponent("table-head");
  const _component_table_h = vue.resolveComponent("table-h");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_InventoryLineItem = vue.resolveComponent("InventoryLineItem");
  const _component_pagination = vue.resolveComponent("pagination");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, () => {
          _push2(`All Inventory`);
        }, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "title", {}, () => [
            vue.createTextVNode("All Inventory")
          ])
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_search_input, {
          modelValue: $data.search,
          "onUpdate:modelValue": ($event) => $data.search = $event
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_search_input, {
            modelValue: $data.search,
            "onUpdate:modelValue": ($event) => $data.search = $event
          }, null, 8, ["modelValue", "onUpdate:modelValue"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      var _a, _b;
      if (_push2) {
        _push2(`<div class="col-span-6 overflow-auto"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_table_table, { class: "text-left" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_table_head, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, { class: "sticky left-0 bg-white" }, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div${_scopeId4}>`);
                          _push5(serverRenderer.ssrRenderComponent(_component_jet_label, {
                            class: "sr-only",
                            for: "select-all"
                          }, {
                            default: vue.withCtx((_5, _push6, _parent6, _scopeId5) => {
                              if (_push6) {
                                _push6(`Select all`);
                              } else {
                                return [
                                  vue.createTextVNode("Select all")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent5, _scopeId4));
                          _push5(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
                            id: "select-all",
                            checked: $data.allSelected,
                            onChange: $options.toggleAllSelected
                          }, null, _parent5, _scopeId4));
                          _push5(`</div>`);
                        } else {
                          return [
                            vue.createVNode("div", null, [
                              vue.createVNode(_component_jet_label, {
                                class: "sr-only",
                                for: "select-all"
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode("Select all")
                                ]),
                                _: 1
                              }),
                              vue.createVNode(_component_jet_checkbox, {
                                id: "select-all",
                                checked: $data.allSelected,
                                onChange: $options.toggleAllSelected
                              }, null, 8, ["checked", "onChange"])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Inventory ID`);
                        } else {
                          return [
                            vue.createTextVNode("Inventory ID")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Quantity`);
                        } else {
                          return [
                            vue.createTextVNode("Quantity")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Date Added`);
                        } else {
                          return [
                            vue.createTextVNode("Date Added")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Last Inventoried`);
                        } else {
                          return [
                            vue.createTextVNode("Last Inventoried")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Product Name`);
                        } else {
                          return [
                            vue.createTextVNode("Product Name")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Size`);
                        } else {
                          return [
                            vue.createTextVNode("Size")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Nursery`);
                        } else {
                          return [
                            vue.createTextVNode("Nursery")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Block`);
                        } else {
                          return [
                            vue.createTextVNode("Block")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Place`);
                        } else {
                          return [
                            vue.createTextVNode("Place")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, null, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                        default: vue.withCtx(() => [
                          vue.createVNode("div", null, [
                            vue.createVNode(_component_jet_label, {
                              class: "sr-only",
                              for: "select-all"
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode("Select all")
                              ]),
                              _: 1
                            }),
                            vue.createVNode(_component_jet_checkbox, {
                              id: "select-all",
                              checked: $data.allSelected,
                              onChange: $options.toggleAllSelected
                            }, null, 8, ["checked", "onChange"])
                          ])
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Inventory ID")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Quantity")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Date Added")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Last Inventoried")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Product Name")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Size")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Nursery")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Block")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Place")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<tbody${_scopeId2}><!--[-->`);
              serverRenderer.ssrRenderList($props.inventory.data, (item) => {
                _push3(serverRenderer.ssrRenderComponent(_component_InventoryLineItem, {
                  key: item.id,
                  item,
                  itemSelected: $options.isItemSelected(item),
                  onSelected: ($event) => $options.toggleSelected(item)
                }, null, _parent3, _scopeId2));
              });
              _push3(`<!--]--></tbody>`);
            } else {
              return [
                vue.createVNode(_component_table_head, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", null, [
                          vue.createVNode(_component_jet_label, {
                            class: "sr-only",
                            for: "select-all"
                          }, {
                            default: vue.withCtx(() => [
                              vue.createTextVNode("Select all")
                            ]),
                            _: 1
                          }),
                          vue.createVNode(_component_jet_checkbox, {
                            id: "select-all",
                            checked: $data.allSelected,
                            onChange: $options.toggleAllSelected
                          }, null, 8, ["checked", "onChange"])
                        ])
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Inventory ID")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Quantity")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Date Added")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Last Inventoried")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Product Name")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Size")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Nursery")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Block")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Place")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h)
                  ]),
                  _: 1
                }),
                vue.createVNode("tbody", null, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.inventory.data, (item) => {
                    return vue.openBlock(), vue.createBlock(_component_InventoryLineItem, {
                      key: item.id,
                      item,
                      itemSelected: $options.isItemSelected(item),
                      onSelected: ($event) => $options.toggleSelected(item)
                    }, null, 8, ["item", "itemSelected", "onSelected"]);
                  }), 128))
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        if (((_a = $props.inventory.data) == null ? void 0 : _a.length) < 1) {
          _push2(`<div class="p-4"${_scopeId}><div class="text-gray-500"${_scopeId}>No Inventory found.</div></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.inventory.data) {
          _push2(serverRenderer.ssrRenderComponent(_component_pagination, { items: $props.inventory }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6 overflow-auto" }, [
            vue.createVNode(_component_table_table, { class: "text-left" }, {
              default: vue.withCtx(() => [
                vue.createVNode(_component_table_head, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", null, [
                          vue.createVNode(_component_jet_label, {
                            class: "sr-only",
                            for: "select-all"
                          }, {
                            default: vue.withCtx(() => [
                              vue.createTextVNode("Select all")
                            ]),
                            _: 1
                          }),
                          vue.createVNode(_component_jet_checkbox, {
                            id: "select-all",
                            checked: $data.allSelected,
                            onChange: $options.toggleAllSelected
                          }, null, 8, ["checked", "onChange"])
                        ])
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Inventory ID")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Quantity")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Date Added")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Last Inventoried")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Product Name")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Size")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Nursery")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Block")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Place")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h)
                  ]),
                  _: 1
                }),
                vue.createVNode("tbody", null, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.inventory.data, (item) => {
                    return vue.openBlock(), vue.createBlock(_component_InventoryLineItem, {
                      key: item.id,
                      item,
                      itemSelected: $options.isItemSelected(item),
                      onSelected: ($event) => $options.toggleSelected(item)
                    }, null, 8, ["item", "itemSelected", "onSelected"]);
                  }), 128))
                ])
              ]),
              _: 1
            }),
            ((_b = $props.inventory.data) == null ? void 0 : _b.length) < 1 ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "p-4"
            }, [
              vue.createVNode("div", { class: "text-gray-500" }, "No Inventory found.")
            ])) : vue.createCommentVNode("", true),
            $props.inventory.data ? (vue.openBlock(), vue.createBlock(_component_pagination, {
              key: 1,
              items: $props.inventory
            }, null, 8, ["items"])) : vue.createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$2q = _sfc_main$2q.setup;
_sfc_main$2q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Inventory/Components/InventoryList.vue");
  return _sfc_setup$2q ? _sfc_setup$2q(props, ctx) : void 0;
};
var InventoryList = /* @__PURE__ */ _export_sfc(_sfc_main$2q, [["ssrRender", _sfc_ssrRender$2o]]);
var InventoryList$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventoryList
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2p = {
  components: {
    AppLayout,
    MainArea,
    Card,
    InventoryTabs,
    SearchInventory,
    InventoryList
  },
  props: {
    inventory: {
      type: Object,
      required: true
    },
    filters: {
      type: Object
    }
  }
};
function _sfc_ssrRender$2n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_InventoryTabs = vue.resolveComponent("InventoryTabs");
  const _component_card = vue.resolveComponent("card");
  const _component_search_inventory = vue.resolveComponent("search-inventory");
  const _component_InventoryList = vue.resolveComponent("InventoryList");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: false }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_InventoryTabs, null, null, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_card, { class: "max-w-screen-sm" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_search_inventory, null, null, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_search_inventory)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_InventoryList, {
                class: "mt-6",
                inventory: $props.inventory,
                filters: $props.filters
              }, null, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_InventoryTabs),
                vue.createVNode(_component_card, { class: "max-w-screen-sm" }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_search_inventory)
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_InventoryList, {
                  class: "mt-6",
                  inventory: $props.inventory,
                  filters: $props.filters
                }, null, 8, ["inventory", "filters"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: false }, {
              default: vue.withCtx(() => [
                vue.createVNode(_component_InventoryTabs),
                vue.createVNode(_component_card, { class: "max-w-screen-sm" }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_search_inventory)
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_InventoryList, {
                  class: "mt-6",
                  inventory: $props.inventory,
                  filters: $props.filters
                }, null, 8, ["inventory", "filters"])
              ]),
              _: 1
            })
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2p = _sfc_main$2p.setup;
_sfc_main$2p.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Inventory/Index.vue");
  return _sfc_setup$2p ? _sfc_setup$2p(props, ctx) : void 0;
};
var Index$k = /* @__PURE__ */ _export_sfc(_sfc_main$2p, [["ssrRender", _sfc_ssrRender$2n]]);
var Index$l = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$k
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2o = {
  components: {
    JetLabel,
    JetButton,
    JetCheckbox: JetCheckBox,
    JetInput,
    SelectBox
  },
  props: {
    inventory: Object,
    sizes: Array
  },
  data() {
    return {
      sizeData: {
        autosize: false,
        autosizeSize: null,
        recentSizes: []
      },
      autosizedNotice: {
        wasAutosized: true,
        message: null
      },
      selectedSize: this.sizes.find(
        (size) => size.id == this.inventory.size_id
      ),
      form: this.$inertia.form({
        size_id: this.inventory.size_id
      })
    };
  },
  computed: {
    nextSize() {
      if (this.selectedSize.next_size_id) {
        return this.sizes.find(
          (size) => size.id == this.selectedSize.next_size_id
        );
      }
    },
    autosizeLabel() {
      if (this.sizeData.autosizeSize) {
        return "Autosize to " + this.sizeData.autosizeSize.name;
      } else {
        return "Autosize";
      }
    }
  },
  mounted() {
    if (localStorage.getItem("sizeData")) {
      try {
        this.sizeData = JSON.parse(localStorage.getItem("sizeData"));
      } catch (error) {
        localStorage.removeItem("sizeData");
      }
      if (this.sizeData.autosize && this.sizeData.autosizeSize && this.inventory.id != localStorage.lastInventoryId) {
        if (localStorage.lastProductId == this.inventory.product_id) {
          new Promise((resolve, reject) => {
            this.selectedSize = this.sizeData.autosizeSize;
            resolve();
          }).then(() => {
            this.autosizedNotice = {
              wasAutosized: true,
              message: "Autosized to " + this.selectedSize.name
            };
          });
        } else {
          this.sizeData.autosize = false;
          this.autosizedNotice = {
            wasAutosized: false,
            message: "New Product. Size was not autosized"
          };
        }
      }
    }
  },
  beforeUnmount() {
    localStorage.lastProductId = this.inventory.product_id;
  },
  watch: {
    sizeData: {
      handler(data) {
        localStorage.setItem("sizeData", JSON.stringify(data));
      },
      deep: true
    },
    selectedSize(value) {
      if (!this.sizeData.recentSizes.map((item) => item.id).includes(value.id) && value) {
        if (this.sizeData.recentSizes.length >= 3) {
          this.sizeData.recentSizes.shift();
        }
        this.sizeData.recentSizes.push(value);
      }
      if (value) {
        this.form.size_id = value.id;
        this.updateSize();
      }
      this.autosizedNotice.message = null;
    }
  },
  methods: {
    assignNextSize() {
      this.selectedSize = this.nextSize;
    },
    currentSize(size) {
      return this.selectedSize.id == size.id;
    },
    updateSize() {
      this.form.patch(route("inventory.update", this.inventory));
    }
  }
};
function _sfc_ssrRender$2m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_JetButton = vue.resolveComponent("JetButton");
  const _component_JetLabel = vue.resolveComponent("JetLabel");
  const _component_JetCheckbox = vue.resolveComponent("JetCheckbox");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "py-4 grid gap-3" }, _attrs))}><h2 class="text-xl">Plant Size</h2>`);
  if ($data.autosizedNotice.message) {
    _push(`<p class="${serverRenderer.ssrRenderClass([
      $data.autosizedNotice.wasAutosized ? "text-green-600" : "text-red-500"
    ])}">${serverRenderer.ssrInterpolate($data.autosizedNotice.message)}</p>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<div class="flex items-center space-x-4">`);
  _push(serverRenderer.ssrRenderComponent(_component_select_box, {
    class: "w-full flex items-center space-x-2",
    id: "size",
    items: $props.sizes,
    selectedItem: $data.selectedSize,
    modelValue: $data.selectedSize,
    "onUpdate:modelValue": ($event) => $data.selectedSize = $event,
    showLabel: false
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    disabled: !$options.nextSize,
    onClick: $options.assignNextSize,
    class: "max-w-xs flex-shrink-0"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Next Size Up`);
      } else {
        return [
          vue.createTextVNode("Next Size Up")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="flex items-center space-x-2">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, { class: "text-lg" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Change to: `);
      } else {
        return [
          vue.createTextVNode("Change to: ")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--[-->`);
  serverRenderer.ssrRenderList($data.sizeData.recentSizes, (recent) => {
    _push(serverRenderer.ssrRenderComponent(_component_JetButton, {
      key: recent.id,
      disabled: this.selectedSize.id == recent.id,
      onClick: ($event) => $data.selectedSize = recent
    }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`${serverRenderer.ssrInterpolate(recent.name)}`);
        } else {
          return [
            vue.createTextVNode(vue.toDisplayString(recent.name), 1)
          ];
        }
      }),
      _: 2
    }, _parent));
  });
  _push(`<!--]--></div><div class="flex items-center space-x-2">`);
  _push(serverRenderer.ssrRenderComponent(_component_JetLabel, {
    for: "autosize",
    class: "text-lg"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($options.autosizeLabel)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($options.autosizeLabel), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_JetCheckbox, {
    checked: $data.sizeData.autosize,
    modelValue: $data.sizeData.autosize,
    "onUpdate:modelValue": ($event) => $data.sizeData.autosize = $event
  }, null, _parent));
  _push(`</div><div class="flex items-center space-x-2"><!--[-->`);
  serverRenderer.ssrRenderList($data.sizeData.recentSizes, (recent) => {
    var _a;
    _push(serverRenderer.ssrRenderComponent(_component_JetButton, {
      key: recent.id + "recent",
      onClick: ($event) => $data.sizeData.autosizeSize = recent,
      disabled: ((_a = $data.sizeData.autosizeSize) == null ? void 0 : _a.id) == recent.id
    }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`${serverRenderer.ssrInterpolate(recent.name)}`);
        } else {
          return [
            vue.createTextVNode(vue.toDisplayString(recent.name), 1)
          ];
        }
      }),
      _: 2
    }, _parent));
  });
  _push(`<!--]--></div></div>`);
}
const _sfc_setup$2o = _sfc_main$2o.setup;
_sfc_main$2o.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Inventory/Components/InventorySizeUpdate.vue");
  return _sfc_setup$2o ? _sfc_setup$2o(props, ctx) : void 0;
};
var InventorySizeUpdate = /* @__PURE__ */ _export_sfc(_sfc_main$2o, [["ssrRender", _sfc_ssrRender$2m]]);
var InventorySizeUpdate$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventorySizeUpdate
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2n = {
  components: { JetInput, JetLabel },
  props: {
    inventory: Object
  },
  data() {
    return {
      form: this.$inertia.form(this.inventory)
    };
  },
  methods: {
    updateInventory() {
      this.form.patch(route("inventory.update", this.inventory));
    }
  }
};
function _sfc_ssrRender$2l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_JetLabel = vue.resolveComponent("JetLabel");
  const _component_jet_input = vue.resolveComponent("jet-input");
  if ($props.inventory.type == "group") {
    _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "py-4 w-full flex items-center space-x-2" }, _attrs))}>`);
    _push(serverRenderer.ssrRenderComponent(_component_JetLabel, {
      for: "quantity",
      class: "text-lg w-full"
    }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`Quantity in Group`);
        } else {
          return [
            vue.createTextVNode("Quantity in Group")
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_jet_input, {
      id: "quantity",
      type: "number",
      onChange: $options.updateInventory,
      modelValue: $data.form.quantity,
      "onUpdate:modelValue": ($event) => $data.form.quantity = $event,
      class: "block w-full"
    }, null, _parent));
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$2n = _sfc_main$2n.setup;
_sfc_main$2n.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Inventory/Components/InventoryQuantityUpdate.vue");
  return _sfc_setup$2n ? _sfc_setup$2n(props, ctx) : void 0;
};
var InventoryQuantityUpdate = /* @__PURE__ */ _export_sfc(_sfc_main$2n, [["ssrRender", _sfc_ssrRender$2l]]);
var InventoryQuantityUpdate$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventoryQuantityUpdate
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2m = {
  components: {
    ChevronLeftIcon: ChevronLeftIcon__default["default"],
    ChevronRightIcon: ChevronRightIcon__default["default"],
    JetDialogModal,
    JetConfirmationModal,
    EditIcon: EditIcon__default["default"],
    JetInputError,
    JetLabel,
    JetCheckbox: JetCheckBox,
    JetButton,
    JetSecondaryButton,
    SelectBox
  },
  props: {
    inventory: Object
  },
  data() {
    return {
      loading: false,
      locationData: {
        nextPlace: null,
        previousPlace: null,
        autoLocate: true,
        autoLocateToNext: true
      },
      autoLocateNotice: {
        wasAutoLocated: true,
        message: null
      },
      confirmingReplace: false,
      editingInventoryLocation: false,
      selectedBlock: this.inventory.block,
      blocks: this.$page.props.blocks,
      row: this.inventory.place ? { name: this.inventory.place.row_number } : null,
      place: this.inventory.place,
      places: [],
      form: this.$inertia.form({
        block_id: this.inventory.block_id,
        place_id: this.inventory.place_id,
        confirm_replace: null
      })
    };
  },
  watch: {
    locationData: {
      handler(value) {
        localStorage.setItem("locationData", JSON.stringify(value));
      },
      deep: true
    },
    selectedBlock(block) {
      if (block) {
        this.form.block_id = block.id;
        this.row = null;
        this.getPlaces(block);
      } else {
        this.form.block_id = null;
      }
    },
    row(row) {
      var _a;
      if (((_a = this.place) == null ? void 0 : _a.row_number) != (row == null ? void 0 : row.name)) {
        this.place = null;
      }
    },
    place(place) {
      if (place) {
        this.form.place_id = place.id;
        this.row = { name: place.row_number };
        this.updateNextandPrevious();
      } else {
        this.form.place_id = null;
      }
    }
  },
  mounted() {
    var _a;
    if (localStorage.getItem("locationData")) {
      try {
        this.locationData = JSON.parse(
          localStorage.getItem("locationData")
        );
      } catch (e2) {
        localStorage.removeItem("locationData");
      }
    }
    if (this.inventory.type == "group") {
      this.locationData.autoLocate = false;
    }
    if (this.locationData.autoLocate && this.inventory.id != localStorage.lastInventoryId) {
      const data = this.locationData;
      if (data.autoLocateToNext) {
        if (data.nextPlace) {
          this.assignBlock(data.nextPlace);
          this.$nextTick(() => {
            new Promise((resolve) => {
              setTimeout(() => {
                this.assignNextPlace(data.nextPlace);
                resolve();
              }, 50);
            }).then(() => {
              this.makeAutoLocateNotice(
                true,
                `Autolocated to next place: row# ${this.place.row_number}, plant# ${this.place.plant_number}`
              );
            });
          });
        } else {
          this.makeAutoLocateNotice(
            false,
            "Was not autolocated. No more places in current row."
          );
          this.locationData.autoLocate = false;
        }
      } else if (data.previousPlace) {
        this.assignBlock(data.previousPlace);
        this.$nextTick(() => {
          new Promise((resolve) => {
            setTimeout(() => {
              this.assignNextPlace(data.previousPlace);
              resolve();
            }, 50);
          }).then(() => {
            this.makeAutoLocateNotice(
              true,
              `Autolocated to previous place: Row# ${this.place.row_number}, Plant# ${this.place.plant_number}`
            );
          });
        });
      } else {
        this.makeAutoLocateNotice(
          false,
          "Was not autolocated. Reached first place in current row."
        );
        this.locationData.autoLocate = false;
      }
    }
    if ((_a = this.selectedBlock) == null ? void 0 : _a.has_places) {
      this.getPlaces(this.selectedBlock);
    }
  },
  emits: ["autolocated"],
  computed: {
    rows() {
      return [
        ...new Set(this.places.map((place) => place.row_number))
      ].map((row) => {
        let obj = {};
        obj.name = row;
        return obj;
      });
    },
    rowPlantNumbers() {
      if (this.places.length && this.row) {
        return this.places.filter(
          (place) => place.row_number == this.row.name
        );
      }
    },
    autolocateLabel() {
      if (this.locationData.autoLocate) {
        if (this.locationData.autoLocateToNext) {
          return this.locationData.nextPlace ? `Autolocate to Row: ${this.locationData.nextPlace.row_number}, Plant: ${this.locationData.nextPlace.plant_number}` : "Reached last place in row.";
        } else {
          return this.locationData.previousPlace ? `Autolocate to Row: ${this.locationData.previousPlace.row_number}, Plant: ${this.locationData.previousPlace.plant_number}` : "Reached first place in row.";
        }
      }
      return "Autolocate?";
    }
  },
  methods: {
    updateNextandPrevious() {
      if (this.place) {
        this.locationData.previousPlace = this.places.filter(
          (place) => {
            return place.plant_number === this.place.plant_number - 1 && place.row_number === this.place.row_number;
          }
        )[0];
        this.locationData.nextPlace = this.places.filter((place) => {
          return place.plant_number === this.place.plant_number + 1 && place.row_number === this.place.row_number;
        })[0];
      }
    },
    assignNextPlace(location) {
      if (location) {
        this.place = location;
      }
      this.$nextTick(() => {
        this.updateInventoryLocation();
      });
      this.autoLocateNotice.message = null;
      this.$emit("autolocated", this.autoLocateNotice);
    },
    assignBlock(place) {
      this.selectedBlock = this.blocks.find(
        (block) => block.id = place.block_id
      );
    },
    makeAutoLocateNotice(wasAutoLocated, message) {
      this.autoLocateNotice = {
        wasAutoLocated,
        message
      };
      this.$emit("autolocated", this.autoLocateNotice);
    },
    confirm() {
      this.form.confirm_replace = true;
      this.confirmingReplace = false;
      this.form.clearErrors();
      this.updateInventoryLocation();
    },
    dontConfirm() {
      this.autoLocateNotice.message = null;
      this.confirmingReplace = false;
      this.form.clearErrors();
      this.$inertia.reload();
    },
    updateInventoryLocation() {
      this.form.patch(route("inventory.update", this.inventory), {
        onSuccess: (page) => {
          this.editingInventoryLocation = false;
          this.form.confirm_replace = null;
        },
        onError: (errors) => {
          if (errors.confirm_replace) {
            this.editingInventoryLocation = false;
            this.confirmingReplace = true;
          }
        }
      });
    },
    getPlaces(block) {
      this.loading = true;
      axios.get(route("api.places.index", block), {
        Headers: { "Cache-Control": "cache" }
      }).then((res) => {
        this.places = res.data;
        this.loading = false;
        this.updateNextandPrevious();
      }).catch((error) => {
        console.error(error.message);
      });
    }
  }
};
function _sfc_ssrRender$2k(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_EditIcon = vue.resolveComponent("EditIcon");
  const _component_ChevronLeftIcon = vue.resolveComponent("ChevronLeftIcon");
  const _component_ChevronRightIcon = vue.resolveComponent("ChevronRightIcon");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "py-4 grid gap-4" }, _attrs))}><div class="flex flex-wrap items-center justify-between"><h2 class="text-xl">Inventory Location</h2>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    onClick: ($event) => $data.editingInventoryLocation = true,
    class: "ml-auto pl-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_EditIcon, { class: "w-4 h-4 mr-2" }, null, _parent2, _scopeId));
        _push2(` Edit`);
      } else {
        return [
          vue.createVNode(_component_EditIcon, { class: "w-4 h-4 mr-2" }),
          vue.createTextVNode(" Edit")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
  if ($props.inventory.block) {
    _push(`<p>Block: ${serverRenderer.ssrInterpolate($props.inventory.block.name)}</p>`);
  } else {
    _push(`<p class="text-red-500">Location Unasigned!</p>`);
  }
  if ($props.inventory.block && $props.inventory.block.has_places && !$props.inventory.place && $props.inventory.type != "group") {
    _push(`<p class="text-red-500"> Place Unasigned! </p>`);
  } else {
    _push(`<!---->`);
  }
  if ($props.inventory.type != "group") {
    _push(`<div>`);
    if ($props.inventory.block && $props.inventory.place) {
      _push(`<div class="grid gap-4"><p> Place: Row number: ${serverRenderer.ssrInterpolate($props.inventory.place.row_number)} Plant Number: ${serverRenderer.ssrInterpolate($props.inventory.place.plant_number)}</p>`);
      if ($props.inventory.block && $props.inventory.place) {
        _push(`<div class="flex items-center justify-between space-x-2 w-full">`);
        _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
          disabled: !$data.locationData.previousPlace,
          onClick: ($event) => $options.assignNextPlace($data.locationData.previousPlace),
          class: "flex-shrink-0 pl-2"
        }, {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(serverRenderer.ssrRenderComponent(_component_ChevronLeftIcon, { class: "w-4 h-4 mr-2" }, null, _parent2, _scopeId));
              _push2(` Previous`);
            } else {
              return [
                vue.createVNode(_component_ChevronLeftIcon, { class: "w-4 h-4 mr-2" }),
                vue.createTextVNode(" Previous")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
          disabled: !$data.locationData.nextPlace,
          onClick: ($event) => $options.assignNextPlace($data.locationData.nextPlace),
          class: "flex-shrink-0 pr-2"
        }, {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Next`);
              _push2(serverRenderer.ssrRenderComponent(_component_ChevronRightIcon, { class: "w-4 h-4 ml-2" }, null, _parent2, _scopeId));
            } else {
              return [
                vue.createTextVNode("Next"),
                vue.createVNode(_component_ChevronRightIcon, { class: "w-4 h-4 ml-2" })
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(serverRenderer.ssrRenderComponent(_component_jet_label, { class: "text-lg" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${serverRenderer.ssrInterpolate($options.autolocateLabel)} `);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
              checked: $data.locationData.autoLocate,
              modelValue: $data.locationData.autoLocate,
              "onUpdate:modelValue": ($event) => $data.locationData.autoLocate = $event,
              class: "ml-2"
            }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createTextVNode(vue.toDisplayString($options.autolocateLabel) + " ", 1),
              vue.createVNode(_component_jet_checkbox, {
                checked: $data.locationData.autoLocate,
                modelValue: $data.locationData.autoLocate,
                "onUpdate:modelValue": ($event) => $data.locationData.autoLocate = $event,
                class: "ml-2"
              }, null, 8, ["checked", "modelValue", "onUpdate:modelValue"])
            ];
          }
        }),
        _: 1
      }, _parent));
      if ($data.locationData.autoLocate) {
        _push(`<div class="flex space-between-4 items-center">`);
        _push(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Autolocate to previous <input type="radio"${serverRenderer.ssrRenderAttr("value", false)}${serverRenderer.ssrIncludeBooleanAttr(serverRenderer.ssrLooseEqual($data.locationData.autoLocateToNext, false)) ? " checked" : ""} class="ml-2 border-gray-300 shadow-sm focus:border-none focus:ring-1 focus:ring-current focus:ring-opacity-50 cursor-pointer text-green-600"${_scopeId}>`);
            } else {
              return [
                vue.createTextVNode("Autolocate to previous "),
                vue.withDirectives(vue.createVNode("input", {
                  type: "radio",
                  value: false,
                  "onUpdate:modelValue": ($event) => $data.locationData.autoLocateToNext = $event,
                  class: "ml-2 border-gray-300 shadow-sm focus:border-none focus:ring-1 focus:ring-current focus:ring-opacity-50 cursor-pointer text-green-600"
                }, null, 8, ["onUpdate:modelValue"]), [
                  [vue.vModelRadio, $data.locationData.autoLocateToNext]
                ])
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`Autolocate to next <input type="radio"${serverRenderer.ssrRenderAttr("value", true)}${serverRenderer.ssrIncludeBooleanAttr(serverRenderer.ssrLooseEqual($data.locationData.autoLocateToNext, true)) ? " checked" : ""} class="ml-2 border-gray-300 shadow-sm focus:border-none focus:ring-1 focus:ring-current focus:ring-opacity-50 cursor-pointer text-green-600"${_scopeId}>`);
            } else {
              return [
                vue.createTextVNode("Autolocate to next "),
                vue.withDirectives(vue.createVNode("input", {
                  type: "radio",
                  value: true,
                  "onUpdate:modelValue": ($event) => $data.locationData.autoLocateToNext = $event,
                  class: "ml-2 border-gray-300 shadow-sm focus:border-none focus:ring-1 focus:ring-current focus:ring-opacity-50 cursor-pointer text-green-600"
                }, null, 8, ["onUpdate:modelValue"]), [
                  [vue.vModelRadio, $data.locationData.autoLocateToNext]
                ])
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.confirmingReplace,
    onClose: $options.dontConfirm
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`There is another item in this place. Are you sure you want to replace that item?`);
      } else {
        return [
          vue.createTextVNode("There is another item in this place. Are you sure you want to replace that item?")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`The inventory item located in this place will be given an unnasigned location.`);
      } else {
        return [
          vue.createTextVNode("The inventory item located in this place will be given an unnasigned location.")
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between items-center w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.dontConfirm }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`No, Nevermind`);
            } else {
              return [
                vue.createTextVNode("No, Nevermind")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          onClick: $options.confirm,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Yes, I&#39;m sure`);
            } else {
              return [
                vue.createTextVNode("Yes, I'm sure")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between items-center w-full" }, [
            vue.createVNode(_component_jet_secondary_button, { onClick: $options.dontConfirm }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("No, Nevermind")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_button, {
              onClick: $options.confirm,
              class: { "opacity-25": $data.form.processing },
              disabled: $data.form.processing
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Yes, I'm sure")
              ]),
              _: 1
            }, 8, ["onClick", "class", "disabled"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.editingInventoryLocation,
    onClose: ($event) => $data.editingInventoryLocation = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Edit Inventory Location`);
      } else {
        return [
          vue.createTextVNode("Edit Inventory Location")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update this inventory location.`);
      } else {
        return [
          vue.createTextVNode(" Update this inventory location.")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      var _a, _b;
      if (_push2) {
        _push2(`<form${_scopeId}><div class="col-span-6 grid gap-4"${_scopeId}><div class="grid gap-4 sm:grid-cols-2"${_scopeId}><div class="sm:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Block Location",
          items: $data.blocks,
          selectedItem: $data.selectedBlock,
          modelValue: $data.selectedBlock,
          "onUpdate:modelValue": ($event) => $data.selectedBlock = $event
        }, null, _parent2, _scopeId));
        if (!$data.form.block_id) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.block_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div>`);
        if (((_a = $data.selectedBlock) == null ? void 0 : _a.has_places) && $props.inventory.type != "group") {
          _push2(`<div${_scopeId}>`);
          if (!$data.loading) {
            _push2(`<div class="grid gap-4 sm:grid-cols-2"${_scopeId}><div class="sm:col-span-1"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
              labelValue: "Row Number",
              items: $options.rows,
              selectedItem: $data.row,
              modelValue: $data.row,
              "onUpdate:modelValue": ($event) => $data.row = $event
            }, null, _parent2, _scopeId));
            if (!$data.form.block_id) {
              _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
                message: $data.form.errors.block_id,
                class: "mt-2"
              }, null, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
              labelValue: "Plant Number",
              items: $options.rowPlantNumbers,
              selectedItem: $data.place,
              modelValue: $data.place,
              "onUpdate:modelValue": ($event) => $data.place = $event,
              nameValue: "plant_number"
            }, null, _parent2, _scopeId));
            if (!$data.form.block_id) {
              _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
                message: $data.form.errors.block_id,
                class: "mt-2"
              }, null, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div>`);
          } else {
            _push2(`<div class="text-sm"${_scopeId}>Loading Places...</div>`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.updateInventoryLocation, ["prevent"]),
            onKeydown: vue.withKeys($options.updateInventoryLocation, ["enter"])
          }, [
            vue.createVNode("div", { class: "col-span-6 grid gap-4" }, [
              vue.createVNode("div", { class: "grid gap-4 sm:grid-cols-2" }, [
                vue.createVNode("div", { class: "sm:col-span-2" }, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Block Location",
                    items: $data.blocks,
                    selectedItem: $data.selectedBlock,
                    modelValue: $data.selectedBlock,
                    "onUpdate:modelValue": ($event) => $data.selectedBlock = $event
                  }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                  !$data.form.block_id ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.block_id,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ])
              ]),
              ((_b = $data.selectedBlock) == null ? void 0 : _b.has_places) && $props.inventory.type != "group" ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
                !$data.loading ? (vue.openBlock(), vue.createBlock("div", {
                  key: 0,
                  class: "grid gap-4 sm:grid-cols-2"
                }, [
                  vue.createVNode("div", { class: "sm:col-span-1" }, [
                    vue.createVNode(_component_select_box, {
                      labelValue: "Row Number",
                      items: $options.rows,
                      selectedItem: $data.row,
                      modelValue: $data.row,
                      "onUpdate:modelValue": ($event) => $data.row = $event
                    }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                    !$data.form.block_id ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                      key: 0,
                      message: $data.form.errors.block_id,
                      class: "mt-2"
                    }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                  ]),
                  vue.createVNode("div", { class: "sm:col-span-1" }, [
                    vue.createVNode(_component_select_box, {
                      labelValue: "Plant Number",
                      items: $options.rowPlantNumbers,
                      selectedItem: $data.place,
                      modelValue: $data.place,
                      "onUpdate:modelValue": ($event) => $data.place = $event,
                      nameValue: "plant_number"
                    }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                    !$data.form.block_id ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                      key: 0,
                      message: $data.form.errors.block_id,
                      class: "mt-2"
                    }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                  ])
                ])) : (vue.openBlock(), vue.createBlock("div", {
                  key: 1,
                  class: "text-sm"
                }, "Loading Places..."))
              ])) : vue.createCommentVNode("", true)
            ])
          ], 40, ["onSubmit", "onKeydown"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between items-center w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.editingInventoryLocation = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.updateInventoryLocation,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Location`);
            } else {
              return [
                vue.createTextVNode("Save Location")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between items-center w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.editingInventoryLocation = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_button, {
                type: "submit",
                onClick: $options.updateInventoryLocation,
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Save Location")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$2m = _sfc_main$2m.setup;
_sfc_main$2m.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Inventory/Components/InventoryLocationUpdate.vue");
  return _sfc_setup$2m ? _sfc_setup$2m(props, ctx) : void 0;
};
var InventoryLocationUpdate = /* @__PURE__ */ _export_sfc(_sfc_main$2m, [["ssrRender", _sfc_ssrRender$2k]]);
var InventoryLocationUpdate$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventoryLocationUpdate
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2l = {
  components: {
    PrinterIcon: outline.PrinterIcon
  }
};
function _sfc_ssrRender$2j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_PrinterIcon = vue.resolveComponent("PrinterIcon");
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "btn btn-sm btn-outline pl-2 flex items-center" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_PrinterIcon, { class: "w-6 h-6 stroke-current mr-2" }, null, _parent));
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$2l = _sfc_main$2l.setup;
_sfc_main$2l.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Buttons/PrintButton.vue");
  return _sfc_setup$2l ? _sfc_setup$2l(props, ctx) : void 0;
};
var PrintButton = /* @__PURE__ */ _export_sfc(_sfc_main$2l, [["ssrRender", _sfc_ssrRender$2j]]);
const _sfc_main$2k = {
  components: {
    XCircleIcon: solid.XCircleIcon
  },
  props: {
    title: {
      type: String,
      default: "Error"
    },
    message: {
      type: String,
      default: "An error has occurred. Please try refreshing the page."
    }
  }
};
function _sfc_ssrRender$2i(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_XCircleIcon = vue.resolveComponent("XCircleIcon");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "rounded-md bg-red-50 p-4" }, _attrs))}><div class="flex"><div class="flex-shrink-0">`);
  _push(serverRenderer.ssrRenderComponent(_component_XCircleIcon, {
    class: "h-5 w-5 text-red-400",
    "aria-hidden": "true"
  }, null, _parent));
  _push(`</div><div class="ml-3"><h3 class="text-sm text-red-800">${serverRenderer.ssrInterpolate($props.title)}</h3>`);
  if ($props.message) {
    _push(`<div class="mt-2 text-sm text-red-700">${serverRenderer.ssrInterpolate($props.message)}</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div></div></div>`);
}
const _sfc_setup$2k = _sfc_main$2k.setup;
_sfc_main$2k.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/ErrorMessage.vue");
  return _sfc_setup$2k ? _sfc_setup$2k(props, ctx) : void 0;
};
var ErrorMessage = /* @__PURE__ */ _export_sfc(_sfc_main$2k, [["ssrRender", _sfc_ssrRender$2i]]);
const _sfc_main$2j = {
  components: {
    PrintButton,
    DialogModal: JetDialogModal,
    ErrorMessage
  },
  props: {
    inventory: {
      type: Object,
      required: true
    }
  },
  data() {
    return {
      confirmingQuantity: false,
      quantityConfirmed: false,
      form: this.$inertia.form({
        inventory: this.inventory.id,
        quantity: this.inventory.quantity
      })
    };
  },
  methods: {
    sendToQueue() {
      this.form.post(route("reprint-queue.store"), {
        onSuccess: () => {
          this.confirmingQuantity = false;
        }
      });
    },
    confirmQuantity() {
      if (this.inventory.quantity > 1) {
        this.confirmingQuantity = true;
      } else {
        this.sendToQueue();
      }
    }
  }
};
function _sfc_ssrRender$2h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_DialogModal = vue.resolveComponent("DialogModal");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_print_button = vue.resolveComponent("print-button");
  const _component_ErrorMessage = vue.resolveComponent("ErrorMessage");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "pt-4 flex flex-col items-center" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_DialogModal, {
    onClose: ($event) => $data.confirmingQuantity = false,
    show: $data.confirmingQuantity
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` How many tags would you like to print? `);
      } else {
        return [
          vue.createTextVNode(" How many tags would you like to print? ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          class: "w-full",
          min: 1,
          max: $props.inventory.quantity,
          type: "number",
          modelValue: $data.form.quantity,
          "onUpdate:modelValue": ($event) => $data.form.quantity = $event
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_input, {
            class: "w-full",
            min: 1,
            max: $props.inventory.quantity,
            type: "number",
            modelValue: $data.form.quantity,
            "onUpdate:modelValue": ($event) => $data.form.quantity = $event
          }, null, 8, ["max", "modelValue", "onUpdate:modelValue"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex items-center justify-between"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.confirmingQuantity = false,
          class: "mr-4 ml-0"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.sendToQueue
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Send to Queue`);
            } else {
              return [
                vue.createTextVNode("Send to Queue")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex items-center justify-between" }, [
            vue.createVNode(_component_jet_secondary_button, {
              onClick: ($event) => $data.confirmingQuantity = false,
              class: "mr-4 ml-0"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_button, {
              type: "submit",
              onClick: $options.sendToQueue
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Send to Queue")
              ]),
              _: 1
            }, 8, ["onClick"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_print_button, {
    disabled: $data.form.processing,
    onClick: $options.confirmQuantity,
    type: "button"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Send Inventory to Print Queue`);
      } else {
        return [
          vue.createTextVNode("Send Inventory to Print Queue")
        ];
      }
    }),
    _: 1
  }, _parent));
  if ($data.form.hasErrors) {
    _push(serverRenderer.ssrRenderComponent(_component_ErrorMessage, { class: "mt-4" }, null, _parent));
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$2j = _sfc_main$2j.setup;
_sfc_main$2j.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Inventory/Components/ReprintTag.vue");
  return _sfc_setup$2j ? _sfc_setup$2j(props, ctx) : void 0;
};
var ReprintTag = /* @__PURE__ */ _export_sfc(_sfc_main$2j, [["ssrRender", _sfc_ssrRender$2h]]);
var ReprintTag$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ReprintTag
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2i = {
  components: {
    AppLayout,
    Card,
    MainArea,
    SearchInventory,
    InventorySizeUpdate,
    InventoryQuantityUpdate,
    InventoryLocationUpdate,
    ReprintTag
  },
  props: {
    inventory: Object,
    sizes: Array
  },
  data() {
    return {
      autoLocateNotice: {
        wasAutoLocated: false,
        message: null
      }
    };
  },
  unmounted() {
    localStorage.lastInventoryId = this.inventory.id;
  },
  methods: {
    updateLocatedNotice(event) {
      this.autoLocateNotice = event;
    }
  }
};
function _sfc_ssrRender$2g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_AppLayout = vue.resolveComponent("AppLayout");
  const _component_MainArea = vue.resolveComponent("MainArea");
  const _component_Card = vue.resolveComponent("Card");
  const _component_SearchInventory = vue.resolveComponent("SearchInventory");
  const _component_inventory_quantity_update = vue.resolveComponent("inventory-quantity-update");
  const _component_inventory_size_update = vue.resolveComponent("inventory-size-update");
  const _component_inventory_location_update = vue.resolveComponent("inventory-location-update");
  const _component_ReprintTag = vue.resolveComponent("ReprintTag");
  _push(serverRenderer.ssrRenderComponent(_component_AppLayout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_MainArea, { dontShowOnMobile: false }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_Card, { class: "max-w-screen-sm" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_SearchInventory, null, null, _parent4, _scopeId3));
                    _push4(`<div class="mt-6 grid divide-y divide-gray-100"${_scopeId3}><div class="py-4"${_scopeId3}><h1 class="text-xl"${_scopeId3}>${serverRenderer.ssrInterpolate($props.inventory.product.name)}</h1><p class="text-lg"${_scopeId3}>${serverRenderer.ssrInterpolate($props.inventory.type == "group" ? "Group " : "Plant ")}#: <span class="text-green-600"${_scopeId3}>${serverRenderer.ssrInterpolate($props.inventory.id)}</span></p>`);
                    if ($data.autoLocateNotice.message) {
                      _push4(`<p class="${serverRenderer.ssrRenderClass([
                        $data.autoLocateNotice.wasAutoLocated ? "text-green-600" : "text-red-500",
                        "mt-2"
                      ])}"${_scopeId3}>${serverRenderer.ssrInterpolate($data.autoLocateNotice.message)}</p>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`</div>`);
                    _push4(serverRenderer.ssrRenderComponent(_component_inventory_quantity_update, { inventory: $props.inventory }, null, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_inventory_size_update, {
                      sizes: $props.sizes,
                      inventory: $props.inventory
                    }, null, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_inventory_location_update, {
                      inventory: $props.inventory,
                      onAutolocated: $options.updateLocatedNotice
                    }, null, _parent4, _scopeId3));
                    _push4(`<p class="py-4"${_scopeId3}> Last Inventoried: ${serverRenderer.ssrInterpolate($props.inventory.last_inventory_date)}</p>`);
                    _push4(serverRenderer.ssrRenderComponent(_component_ReprintTag, { inventory: $props.inventory }, null, _parent4, _scopeId3));
                    _push4(`</div>`);
                  } else {
                    return [
                      vue.createVNode(_component_SearchInventory),
                      vue.createVNode("div", { class: "mt-6 grid divide-y divide-gray-100" }, [
                        vue.createVNode("div", { class: "py-4" }, [
                          vue.createVNode("h1", { class: "text-xl" }, vue.toDisplayString($props.inventory.product.name), 1),
                          vue.createVNode("p", { class: "text-lg" }, [
                            vue.createTextVNode(vue.toDisplayString($props.inventory.type == "group" ? "Group " : "Plant ") + "#: ", 1),
                            vue.createVNode("span", { class: "text-green-600" }, vue.toDisplayString($props.inventory.id), 1)
                          ]),
                          $data.autoLocateNotice.message ? (vue.openBlock(), vue.createBlock("p", {
                            key: 0,
                            class: [
                              $data.autoLocateNotice.wasAutoLocated ? "text-green-600" : "text-red-500",
                              "mt-2"
                            ]
                          }, vue.toDisplayString($data.autoLocateNotice.message), 3)) : vue.createCommentVNode("", true)
                        ]),
                        vue.createVNode(_component_inventory_quantity_update, { inventory: $props.inventory }, null, 8, ["inventory"]),
                        vue.createVNode(_component_inventory_size_update, {
                          sizes: $props.sizes,
                          inventory: $props.inventory
                        }, null, 8, ["sizes", "inventory"]),
                        vue.createVNode(_component_inventory_location_update, {
                          inventory: $props.inventory,
                          onAutolocated: $options.updateLocatedNotice
                        }, null, 8, ["inventory", "onAutolocated"]),
                        vue.createVNode("p", { class: "py-4" }, " Last Inventoried: " + vue.toDisplayString($props.inventory.last_inventory_date), 1),
                        vue.createVNode(_component_ReprintTag, { inventory: $props.inventory }, null, 8, ["inventory"])
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_Card, { class: "max-w-screen-sm" }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_SearchInventory),
                    vue.createVNode("div", { class: "mt-6 grid divide-y divide-gray-100" }, [
                      vue.createVNode("div", { class: "py-4" }, [
                        vue.createVNode("h1", { class: "text-xl" }, vue.toDisplayString($props.inventory.product.name), 1),
                        vue.createVNode("p", { class: "text-lg" }, [
                          vue.createTextVNode(vue.toDisplayString($props.inventory.type == "group" ? "Group " : "Plant ") + "#: ", 1),
                          vue.createVNode("span", { class: "text-green-600" }, vue.toDisplayString($props.inventory.id), 1)
                        ]),
                        $data.autoLocateNotice.message ? (vue.openBlock(), vue.createBlock("p", {
                          key: 0,
                          class: [
                            $data.autoLocateNotice.wasAutoLocated ? "text-green-600" : "text-red-500",
                            "mt-2"
                          ]
                        }, vue.toDisplayString($data.autoLocateNotice.message), 3)) : vue.createCommentVNode("", true)
                      ]),
                      vue.createVNode(_component_inventory_quantity_update, { inventory: $props.inventory }, null, 8, ["inventory"]),
                      vue.createVNode(_component_inventory_size_update, {
                        sizes: $props.sizes,
                        inventory: $props.inventory
                      }, null, 8, ["sizes", "inventory"]),
                      vue.createVNode(_component_inventory_location_update, {
                        inventory: $props.inventory,
                        onAutolocated: $options.updateLocatedNotice
                      }, null, 8, ["inventory", "onAutolocated"]),
                      vue.createVNode("p", { class: "py-4" }, " Last Inventoried: " + vue.toDisplayString($props.inventory.last_inventory_date), 1),
                      vue.createVNode(_component_ReprintTag, { inventory: $props.inventory }, null, 8, ["inventory"])
                    ])
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_MainArea, { dontShowOnMobile: false }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_Card, { class: "max-w-screen-sm" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_SearchInventory),
                  vue.createVNode("div", { class: "mt-6 grid divide-y divide-gray-100" }, [
                    vue.createVNode("div", { class: "py-4" }, [
                      vue.createVNode("h1", { class: "text-xl" }, vue.toDisplayString($props.inventory.product.name), 1),
                      vue.createVNode("p", { class: "text-lg" }, [
                        vue.createTextVNode(vue.toDisplayString($props.inventory.type == "group" ? "Group " : "Plant ") + "#: ", 1),
                        vue.createVNode("span", { class: "text-green-600" }, vue.toDisplayString($props.inventory.id), 1)
                      ]),
                      $data.autoLocateNotice.message ? (vue.openBlock(), vue.createBlock("p", {
                        key: 0,
                        class: [
                          $data.autoLocateNotice.wasAutoLocated ? "text-green-600" : "text-red-500",
                          "mt-2"
                        ]
                      }, vue.toDisplayString($data.autoLocateNotice.message), 3)) : vue.createCommentVNode("", true)
                    ]),
                    vue.createVNode(_component_inventory_quantity_update, { inventory: $props.inventory }, null, 8, ["inventory"]),
                    vue.createVNode(_component_inventory_size_update, {
                      sizes: $props.sizes,
                      inventory: $props.inventory
                    }, null, 8, ["sizes", "inventory"]),
                    vue.createVNode(_component_inventory_location_update, {
                      inventory: $props.inventory,
                      onAutolocated: $options.updateLocatedNotice
                    }, null, 8, ["inventory", "onAutolocated"]),
                    vue.createVNode("p", { class: "py-4" }, " Last Inventoried: " + vue.toDisplayString($props.inventory.last_inventory_date), 1),
                    vue.createVNode(_component_ReprintTag, { inventory: $props.inventory }, null, 8, ["inventory"])
                  ])
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2i = _sfc_main$2i.setup;
_sfc_main$2i.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Inventory/Show.vue");
  return _sfc_setup$2i ? _sfc_setup$2i(props, ctx) : void 0;
};
var Show$k = /* @__PURE__ */ _export_sfc(_sfc_main$2i, [["ssrRender", _sfc_ssrRender$2g]]);
var Show$l = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$k
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2h = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput
  },
  data() {
    return {
      form: this.$inertia.form({
        _method: "POST",
        name: "",
        location_code: "",
        address: "",
        city: "",
        state: "",
        zip: ""
      })
    };
  },
  methods: {
    createLocation() {
      this.form.post(route("locations.store"), {
        errorBag: "createLocation",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$2f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.createLocation }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create a Location`);
      } else {
        return [
          vue.createTextVNode("Create a Location")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a new nursery location where you sell or grow plants. `);
      } else {
        return [
          vue.createTextVNode(" Create a new nursery location where you sell or grow plants. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid col-span-6 gap-4"${_scopeId}><div class="grid grid-cols-6 gap-2"${_scopeId}><div class="col-span-4 sm:col-span-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Location Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "organization"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-2 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "location_code",
          value: "Code"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "location_code",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.location_code,
          "onUpdate:modelValue": ($event) => $data.form.location_code = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.location_code,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "address",
          value: "Street Address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "address",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.address,
          "onUpdate:modelValue": ($event) => $data.form.address = $event,
          autocomplete: "address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.address,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "city",
          value: "City"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "city",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.city,
          "onUpdate:modelValue": ($event) => $data.form.city = $event,
          autocomplete: "address-level2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.city,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "state",
          value: "State"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "state",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.state,
          "onUpdate:modelValue": ($event) => $data.form.state = $event,
          autocomplete: "address-level1"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.state,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "zip",
          value: "Zip"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "zip",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.zip,
          "onUpdate:modelValue": ($event) => $data.form.zip = $event,
          autocomplete: "postal-code"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.zip,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid col-span-6 gap-4" }, [
            vue.createVNode("div", { class: "grid grid-cols-6 gap-2" }, [
              vue.createVNode("div", { class: "col-span-4 sm:col-span-5" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Location Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "organization"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-2 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "location_code",
                  value: "Code"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "location_code",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.location_code,
                  "onUpdate:modelValue": ($event) => $data.form.location_code = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.location_code,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ]),
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "address",
                  value: "Street Address"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "address",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.address,
                  "onUpdate:modelValue": ($event) => $data.form.address = $event,
                  autocomplete: "address"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.address,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "city",
                  value: "City"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "city",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.city,
                  "onUpdate:modelValue": ($event) => $data.form.city = $event,
                  autocomplete: "address-level2"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.city,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "state",
                  value: "State"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "state",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.state,
                  "onUpdate:modelValue": ($event) => $data.form.state = $event,
                  autocomplete: "address-level1"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.state,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "zip",
                  value: "Zip"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "zip",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.zip,
                  "onUpdate:modelValue": ($event) => $data.form.zip = $event,
                  autocomplete: "postal-code"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.zip,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Location`);
            } else {
              return [
                vue.createTextVNode("Save Location")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Location")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2h = _sfc_main$2h.setup;
_sfc_main$2h.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/NurseryLocations/CreateLocationForm.vue");
  return _sfc_setup$2h ? _sfc_setup$2h(props, ctx) : void 0;
};
var CreateLocationForm = /* @__PURE__ */ _export_sfc(_sfc_main$2h, [["ssrRender", _sfc_ssrRender$2f]]);
var CreateLocationForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateLocationForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2g = {
  components: {
    PageAside,
    AsideLink,
    ButtonLink,
    EmptyState,
    JetSectionTitle: SectionTitle
  },
  props: {
    locations: Array
  },
  computed: {
    locationsLength: function() {
      return this.locations.length;
    }
  }
};
function _sfc_ssrRender$2e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_page_aside = vue.resolveComponent("page-aside");
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_aside_link = vue.resolveComponent("aside-link");
  const _component_empty_state = vue.resolveComponent("empty-state");
  _push(serverRenderer.ssrRenderComponent(_component_page_aside, vue.mergeProps({
    showOnMobile: _ctx.route().current("locations.index")
  }, _attrs), {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Nursery Locations`);
            } else {
              return [
                vue.createTextVNode("Nursery Locations")
              ];
            }
          }),
          aside: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_button_link, {
                href: _ctx.route("locations.create")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`New Location`);
                  } else {
                    return [
                      vue.createTextVNode("New Location")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_button_link, {
                  href: _ctx.route("locations.create")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("New Location")
                  ]),
                  _: 1
                }, 8, ["href"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_section_title, null, {
            title: vue.withCtx(() => [
              vue.createTextVNode("Nursery Locations")
            ]),
            aside: vue.withCtx(() => [
              vue.createVNode(_component_button_link, {
                href: _ctx.route("locations.create")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New Location")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            _: 1
          })
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white"${_scopeId}><ul class="divide-y divide-gray-200"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($props.locations, (location) => {
          _push2(`<li class="bg-white"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_aside_link, {
            href: _ctx.route("locations.show", location.id),
            current: _ctx.route().current("locations.show", location.id) || _ctx.route().current("locations.edit", location.id)
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex-1 min-w-0"${_scopeId2}><div class="focus:outline-none"${_scopeId2}><span class="absolute inset-0" aria-hidden="true"${_scopeId2}></span><p class="text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate(location.name)}</p>`);
                if (location.city) {
                  _push3(`<p class="text-sm text-gray-500 truncate"${_scopeId2}>${serverRenderer.ssrInterpolate(location.city)}`);
                  if (location.state) {
                    _push3(`<span${_scopeId2}>, ${serverRenderer.ssrInterpolate(location.state)}</span>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                    vue.createVNode("div", { class: "focus:outline-none" }, [
                      vue.createVNode("span", {
                        class: "absolute inset-0",
                        "aria-hidden": "true"
                      }),
                      vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(location.name), 1),
                      location.city ? (vue.openBlock(), vue.createBlock("p", {
                        key: 0,
                        class: "text-sm text-gray-500 truncate"
                      }, [
                        vue.createTextVNode(vue.toDisplayString(location.city), 1),
                        location.state ? (vue.openBlock(), vue.createBlock("span", { key: 0 }, ", " + vue.toDisplayString(location.state), 1)) : vue.createCommentVNode("", true)
                      ])) : vue.createCommentVNode("", true)
                    ])
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</li>`);
        });
        _push2(`<!--]--></ul></div>`);
        if ($options.locationsLength < 1 && _ctx.route().current("locations.index")) {
          _push2(serverRenderer.ssrRenderComponent(_component_empty_state, {
            heading: "No Locations",
            subtitle: "Get started by creating a new location.",
            "button-text": "New Location",
            href: _ctx.route("locations.create")
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", { class: "bg-white" }, [
            vue.createVNode("ul", { class: "divide-y divide-gray-200" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.locations, (location) => {
                return vue.openBlock(), vue.createBlock("li", {
                  key: location.id,
                  class: "bg-white"
                }, [
                  vue.createVNode(_component_aside_link, {
                    href: _ctx.route("locations.show", location.id),
                    current: _ctx.route().current("locations.show", location.id) || _ctx.route().current("locations.edit", location.id)
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                        vue.createVNode("div", { class: "focus:outline-none" }, [
                          vue.createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(location.name), 1),
                          location.city ? (vue.openBlock(), vue.createBlock("p", {
                            key: 0,
                            class: "text-sm text-gray-500 truncate"
                          }, [
                            vue.createTextVNode(vue.toDisplayString(location.city), 1),
                            location.state ? (vue.openBlock(), vue.createBlock("span", { key: 0 }, ", " + vue.toDisplayString(location.state), 1)) : vue.createCommentVNode("", true)
                          ])) : vue.createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 2
                  }, 1032, ["href", "current"])
                ]);
              }), 128))
            ])
          ]),
          $options.locationsLength < 1 && _ctx.route().current("locations.index") ? (vue.openBlock(), vue.createBlock(_component_empty_state, {
            key: 0,
            heading: "No Locations",
            subtitle: "Get started by creating a new location.",
            "button-text": "New Location",
            href: _ctx.route("locations.create")
          }, null, 8, ["href"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2g = _sfc_main$2g.setup;
_sfc_main$2g.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/NurseryLocations/LocationsAside.vue");
  return _sfc_setup$2g ? _sfc_setup$2g(props, ctx) : void 0;
};
var LocationsAside = /* @__PURE__ */ _export_sfc(_sfc_main$2g, [["ssrRender", _sfc_ssrRender$2e]]);
var LocationsAside$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": LocationsAside
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2f = {
  components: {
    LocationsAside,
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    locations() {
      return this.$page.props.locations;
    },
    isIndex() {
      return route().current("locations.index");
    }
  }
};
function _sfc_ssrRender$2d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  const _component_locations_aside = vue.resolveComponent("locations-aside");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb" class="xl:hidden"${_scopeId2}><div class="px-4 md:pb-2"${_scopeId2}>`);
                if (_ctx.route().current("locations.*")) {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("locations.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Locations`);
                      } else {
                        return [
                          vue.createTextVNode("Locations")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("locations.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("locations.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Locations")
                      ]),
                      _: 1
                    }, 8, ["href"])) : vue.createCommentVNode("", true)
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_locations_aside, { locations: $options.locations }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
              default: vue.withCtx(() => [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("locations.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("locations.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Locations")
                      ]),
                      _: 1
                    }, 8, ["href"])) : vue.createCommentVNode("", true)
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ]),
              _: 3
            }, 8, ["dontShowOnMobile"]),
            vue.createVNode(_component_locations_aside, { locations: $options.locations }, null, 8, ["locations"])
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$2f = _sfc_main$2f.setup;
_sfc_main$2f.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/NurseryLocations/LocationsLayout.vue");
  return _sfc_setup$2f ? _sfc_setup$2f(props, ctx) : void 0;
};
var LocationsLayout = /* @__PURE__ */ _export_sfc(_sfc_main$2f, [["ssrRender", _sfc_ssrRender$2d]]);
var LocationsLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": LocationsLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2e = {
  components: {
    CreateLocationForm,
    LocationsLayout
  }
};
function _sfc_ssrRender$2c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_locations_layout = vue.resolveComponent("locations-layout");
  const _component_create_location_form = vue.resolveComponent("create-location-form");
  _push(serverRenderer.ssrRenderComponent(_component_locations_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_location_form, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_location_form)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2e = _sfc_main$2e.setup;
_sfc_main$2e.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/NurseryLocations/Create.vue");
  return _sfc_setup$2e ? _sfc_setup$2e(props, ctx) : void 0;
};
var Create$g = /* @__PURE__ */ _export_sfc(_sfc_main$2e, [["ssrRender", _sfc_ssrRender$2c]]);
var Create$h = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$g
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2d = {
  props: { location: Object },
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingLocationDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmLocationDeletion() {
      this.confirmingLocationDeletion = true;
    },
    deleteLocation() {
      this.form.delete(route("locations.destroy", this.location), {
        errorBag: "deleteLocation"
      });
    }
  }
};
function _sfc_ssrRender$2b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Location `);
      } else {
        return [
          vue.createTextVNode(" Delete Location ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete this location. `);
      } else {
        return [
          vue.createTextVNode(" Delete this location. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a location is deleted, all blocks in this location will be deleted, and all inventory in blocks at this nursery location will given an unnasigned location. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmLocationDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Location `);
            } else {
              return [
                vue.createTextVNode(" Delete Location ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingLocationDeletion,
          onClose: ($event) => $data.confirmingLocationDeletion = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Location `);
            } else {
              return [
                vue.createTextVNode(" Delete Location ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this location? `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete this location? ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingLocationDeletion = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteLocation,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Location `);
                  } else {
                    return [
                      vue.createTextVNode(" Delete Location ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingLocationDeletion = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.deleteLocation,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Delete Location ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a location is deleted, all blocks in this location will be deleted, and all inventory in blocks at this nursery location will given an unnasigned location. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmLocationDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete Location ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingLocationDeletion,
            onClose: ($event) => $data.confirmingLocationDeletion = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Delete Location ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete this location? ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingLocationDeletion = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteLocation,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Delete Location ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2d = _sfc_main$2d.setup;
_sfc_main$2d.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/NurseryLocations/DeleteLocationForm.vue");
  return _sfc_setup$2d ? _sfc_setup$2d(props, ctx) : void 0;
};
var DeleteLocationForm = /* @__PURE__ */ _export_sfc(_sfc_main$2d, [["ssrRender", _sfc_ssrRender$2b]]);
var DeleteLocationForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteLocationForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2c = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput,
    SelectBox,
    ButtonLink
  },
  props: { location: Object },
  data() {
    return {
      form: this.$inertia.form({
        _method: "PATCH",
        name: this.location.name,
        location_code: this.location.location_code,
        address: this.location.address,
        city: this.location.city,
        state: this.location.state,
        zip: this.location.zip
      })
    };
  },
  methods: {
    updateLocation() {
      this.form.patch(route("locations.update", this.location), {
        errorBag: "updateLocation",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$2a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.updateLocation }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.location.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.location.name), 1)
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_button_link, {
          href: _ctx.route("locations.show", $props.location)
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`View Blocks`);
            } else {
              return [
                vue.createTextVNode("View Blocks")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_button_link, {
            href: _ctx.route("locations.show", $props.location)
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("View Blocks")
            ]),
            _: 1
          }, 8, ["href"])
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid col-span-6 gap-4"${_scopeId}><div class="grid grid-cols-6 gap-2"${_scopeId}><div class="col-span-4 sm:col-span-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Location Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "organization"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-2 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "location_code",
          value: "Code"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "location_code",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.location_code,
          "onUpdate:modelValue": ($event) => $data.form.location_code = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.location_code,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "address",
          value: "Street Address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "address",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.address,
          "onUpdate:modelValue": ($event) => $data.form.address = $event,
          autocomplete: "address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.address,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "city",
          value: "City"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "city",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.city,
          "onUpdate:modelValue": ($event) => $data.form.city = $event,
          autocomplete: "address-level2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.city,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "state",
          value: "State"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "state",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.state,
          "onUpdate:modelValue": ($event) => $data.form.state = $event,
          autocomplete: "address-level1"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.state,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "zip",
          value: "Zip"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "zip",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.zip,
          "onUpdate:modelValue": ($event) => $data.form.zip = $event,
          autocomplete: "postal-code"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.zip,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid col-span-6 gap-4" }, [
            vue.createVNode("div", { class: "grid grid-cols-6 gap-2" }, [
              vue.createVNode("div", { class: "col-span-4 sm:col-span-5" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Location Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "organization"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-2 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "location_code",
                  value: "Code"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "location_code",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.location_code,
                  "onUpdate:modelValue": ($event) => $data.form.location_code = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.location_code,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ]),
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "address",
                  value: "Street Address"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "address",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.address,
                  "onUpdate:modelValue": ($event) => $data.form.address = $event,
                  autocomplete: "address"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.address,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "city",
                  value: "City"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "city",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.city,
                  "onUpdate:modelValue": ($event) => $data.form.city = $event,
                  autocomplete: "address-level2"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.city,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "state",
                  value: "State"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "state",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.state,
                  "onUpdate:modelValue": ($event) => $data.form.state = $event,
                  autocomplete: "address-level1"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.state,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "zip",
                  value: "Zip"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "zip",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.zip,
                  "onUpdate:modelValue": ($event) => $data.form.zip = $event,
                  autocomplete: "postal-code"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.zip,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
          disabled: $data.form.processing || !$data.form.isDirty
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Location`);
            } else {
              return [
                vue.createTextVNode("Save Location")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
            disabled: $data.form.processing || !$data.form.isDirty
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Location")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2c = _sfc_main$2c.setup;
_sfc_main$2c.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/NurseryLocations/UpdateLocationForm.vue");
  return _sfc_setup$2c ? _sfc_setup$2c(props, ctx) : void 0;
};
var UpdateLocationForm = /* @__PURE__ */ _export_sfc(_sfc_main$2c, [["ssrRender", _sfc_ssrRender$2a]]);
var UpdateLocationForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateLocationForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2b = {
  components: {
    LocationsLayout,
    UpdateLocationForm,
    DeleteLocationForm
  },
  props: {
    location: Object
  }
};
function _sfc_ssrRender$29(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_locations_layout = vue.resolveComponent("locations-layout");
  const _component_update_location_form = vue.resolveComponent("update-location-form");
  const _component_delete_location_form = vue.resolveComponent("delete-location-form");
  _push(serverRenderer.ssrRenderComponent(_component_locations_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="space-y-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_update_location_form, { location: $props.location }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_delete_location_form, { location: $props.location }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "space-y-6" }, [
            vue.createVNode(_component_update_location_form, { location: $props.location }, null, 8, ["location"]),
            vue.createVNode(_component_delete_location_form, { location: $props.location }, null, 8, ["location"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$2b = _sfc_main$2b.setup;
_sfc_main$2b.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/NurseryLocations/Edit.vue");
  return _sfc_setup$2b ? _sfc_setup$2b(props, ctx) : void 0;
};
var Edit = /* @__PURE__ */ _export_sfc(_sfc_main$2b, [["ssrRender", _sfc_ssrRender$29]]);
var Edit$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Edit
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2a = {
  components: {
    LocationsLayout
  }
};
function _sfc_ssrRender$28(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_locations_layout = vue.resolveComponent("locations-layout");
  _push(serverRenderer.ssrRenderComponent(_component_locations_layout, _attrs, null, _parent));
}
const _sfc_setup$2a = _sfc_main$2a.setup;
_sfc_main$2a.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/NurseryLocations/Index.vue");
  return _sfc_setup$2a ? _sfc_setup$2a(props, ctx) : void 0;
};
var Index$i = /* @__PURE__ */ _export_sfc(_sfc_main$2a, [["ssrRender", _sfc_ssrRender$28]]);
var Index$j = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$i
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$29 = {
  components: {
    ButtonLink,
    DetailsSection
  },
  props: { location: Object }
};
function _sfc_ssrRender$27(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_button_link = vue.resolveComponent("button-link");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.location.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.location.name), 1)
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_button_link, {
          href: _ctx.route("locations.edit", $props.location)
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Edit Details`);
            } else {
              return [
                vue.createTextVNode("Edit Details")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_button_link, {
            href: _ctx.route("locations.edit", $props.location)
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Edit Details")
            ]),
            _: 1
          }, 8, ["href"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="sm:col-span-1"${_scopeId}><dt class="text-sm text-gray-500"${_scopeId}>Address</dt><dd class="mt-1 text-sm text-gray-900"${_scopeId}>${serverRenderer.ssrInterpolate($props.location.address)}</dd><dd class="mt-1 text-sm text-gray-900"${_scopeId}>${serverRenderer.ssrInterpolate($props.location.city)} ${serverRenderer.ssrInterpolate($props.location.state)} ${serverRenderer.ssrInterpolate($props.location.zip)}</dd></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "sm:col-span-1" }, [
            vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Address"),
            vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.location.address), 1),
            vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.location.city) + " " + vue.toDisplayString($props.location.state) + " " + vue.toDisplayString($props.location.zip), 1)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$29 = _sfc_main$29.setup;
_sfc_main$29.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/NurseryLocations/LocationDetails.vue");
  return _sfc_setup$29 ? _sfc_setup$29(props, ctx) : void 0;
};
var LocationDetails = /* @__PURE__ */ _export_sfc(_sfc_main$29, [["ssrRender", _sfc_ssrRender$27]]);
var LocationDetails$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": LocationDetails
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$28 = {
  components: {
    LocationsLayout,
    LocationDetails
  },
  props: {
    location: Object
  }
};
function _sfc_ssrRender$26(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_locations_layout = vue.resolveComponent("locations-layout");
  const _component_LocationDetails = vue.resolveComponent("LocationDetails");
  _push(serverRenderer.ssrRenderComponent(_component_locations_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="space-y-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_LocationDetails, { location: $props.location }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "space-y-6" }, [
            vue.createVNode(_component_LocationDetails, { location: $props.location }, null, 8, ["location"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$28 = _sfc_main$28.setup;
_sfc_main$28.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/NurseryLocations/Show.vue");
  return _sfc_setup$28 ? _sfc_setup$28(props, ctx) : void 0;
};
var Show$i = /* @__PURE__ */ _export_sfc(_sfc_main$28, [["ssrRender", _sfc_ssrRender$26]]);
var Show$j = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$i
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$27 = {
  components: {
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    isIndex() {
      return route().current("orders.index") || route().current("archived-orders.index");
    }
  }
};
function _sfc_ssrRender$25(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: false }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb"${_scopeId2}><div class="px-4 md:pb-2"${_scopeId2}>`);
                if (_ctx.route().current("orders.*")) {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("orders.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Orders`);
                      } else {
                        return [
                          vue.createTextVNode("Orders")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("orders.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("orders.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Orders")
                      ]),
                      _: 1
                    }, 8, ["href"])) : vue.createCommentVNode("", true)
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_main_area, { dontShowOnMobile: false }, {
            default: vue.withCtx(() => [
              !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                key: 0,
                "aria-label": "Breadcrumb"
              }, [
                vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                  _ctx.route().current("orders.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                    key: 0,
                    href: _ctx.route("orders.index")
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Orders")
                    ]),
                    _: 1
                  }, 8, ["href"])) : vue.createCommentVNode("", true)
                ])
              ])) : vue.createCommentVNode("", true),
              vue.createVNode("div", { class: "py-2" }, [
                vue.renderSlot(_ctx.$slots, "default")
              ])
            ]),
            _: 3
          })
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$27 = _sfc_main$27.setup;
_sfc_main$27.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/OrdersLayout.vue");
  return _sfc_setup$27 ? _sfc_setup$27(props, ctx) : void 0;
};
var OrdersLayout = /* @__PURE__ */ _export_sfc(_sfc_main$27, [["ssrRender", _sfc_ssrRender$25]]);
var OrdersLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": OrdersLayout
}, Symbol.toStringTag, { value: "Module" }));
var SearchSelectBox_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$26 = {
  components: {
    CheckIcon: solid.CheckIcon,
    SelectorIcon: solid.SelectorIcon,
    XCircleIcon: solid.XCircleIcon,
    JetInput,
    JetLabel
  },
  props: {
    items: Array,
    selectedItem: Object | Boolean,
    labelValue: { type: String, default: "Select Option" },
    showLabel: { type: Boolean, default: true },
    nameValue: { type: String, default: "name" }
  },
  data: function() {
    return {
      search: this.selectedItem ? this.selectedItem[this.nameValue] : "",
      searchItems: this.items,
      selected: this.selectedItem,
      isOpen: false
    };
  },
  methods: {
    filterItems: function(search) {
      this.searchItems = this.items.filter(
        (item) => item[this.nameValue].toLowerCase().includes(search.toLowerCase())
      );
    },
    updateItem: function(item) {
      if (item) {
        this.selected = item;
        this.isOpen = false;
      } else {
        this.addItem();
      }
    },
    addItem() {
      if (this.search.length) {
        this.$emit("add", this.search);
        this.isOpen = false;
      }
    },
    clearSearch() {
      this.search = "";
      this.searchItems = this.items;
      document.getElementById("items-input").focus();
    },
    openIfNotEnter(e2) {
      if (e2.keyCode !== 13) {
        this.isOpen = true;
      }
    },
    isSelected(item) {
      return this.selected && this.selected.id === item.id;
    }
  },
  watch: {
    selectedItem: function(newValue) {
      this.selected = newValue;
    },
    items: function(newValue) {
      this.searchItems = newValue;
    },
    isOpen(isOpen) {
      if (!isOpen) {
        if (this.selected) {
          this.search = this.selected[this.nameValue];
        }
      }
    },
    selectedItem() {
      this.selected = this.selectedItem;
    },
    selected(value) {
      if (value) {
        this.$emit("update", value.id);
        this.search = value[this.nameValue];
      }
    },
    search(searchValue) {
      this.filterItems(searchValue);
    }
  }
};
function _sfc_ssrRender$24(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_XCircleIcon = vue.resolveComponent("XCircleIcon");
  const _component_SelectorIcon = vue.resolveComponent("SelectorIcon");
  const _component_CheckIcon = vue.resolveComponent("CheckIcon");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "form-control" }, _attrs))} data-v-fb661e32>`);
  if ($props.showLabel) {
    _push(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "items-input" }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`${serverRenderer.ssrInterpolate($props.labelValue)}`);
        } else {
          return [
            vue.createTextVNode(vue.toDisplayString($props.labelValue), 1)
          ];
        }
      }),
      _: 1
    }, _parent));
  } else {
    _push(`<!---->`);
  }
  if (_ctx.isOpen) {
    _push(`<div class="fixed inset-0 z-10" data-v-fb661e32></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<div class="relative z-20" data-v-fb661e32>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_input, {
    type: "text",
    autocomplete: "off",
    onKeydown: [($event) => $options.updateItem(_ctx.searchItems[0]), $options.openIfNotEnter],
    onClick: ($event) => _ctx.isOpen = true,
    id: "items-input",
    placeholder: "Select " + $props.labelValue,
    modelValue: _ctx.search,
    "onUpdate:modelValue": ($event) => _ctx.search = $event,
    class: "w-full"
  }, null, _parent));
  _push(`<span class="${serverRenderer.ssrRenderClass([_ctx.isOpen && _ctx.search.length ? "" : "pointer-events-none", "absolute inset-y-0 right-0 flex items-center pr-2"])}" data-v-fb661e32>`);
  if (_ctx.search.length && _ctx.isOpen) {
    _push(serverRenderer.ssrRenderComponent(_component_XCircleIcon, {
      onClick: $options.clearSearch,
      class: [
        "h-5 w-5",
        _ctx.isOpen ? "text-gray-900" : "text-gray-500"
      ]
    }, null, _parent));
  } else {
    _push(serverRenderer.ssrRenderComponent(_component_SelectorIcon, {
      class: "h-5 w-5 text-gray-400",
      "aria-hidden": "true"
    }, null, _parent));
  }
  _push(`</span><div style="${serverRenderer.ssrRenderStyle(_ctx.isOpen ? null : { display: "none" })}" id="items-list" class="absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-gray-700 ring-opacity-5 overflow-auto focus:outline-none sm:text-sm group" data-v-fb661e32><!--[-->`);
  serverRenderer.ssrRenderList(_ctx.searchItems, (item, index) => {
    _push(`<div${serverRenderer.ssrRenderAttr("tabindex", _ctx.isOpen ? "0" : "-1")} class="${serverRenderer.ssrRenderClass([[
      $options.isSelected(item) ? "font-semibold" : "font-normal",
      "block truncate"
    ], "group text-gray-900 cursor-default relative py-2 pl-3 pr-9 bg-white active:outline-none focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 focus:bg-gray-500 focus:text-white"])}" data-v-fb661e32>${serverRenderer.ssrInterpolate(item[$props.nameValue])} `);
    if ($options.isSelected(item)) {
      _push(`<span class="group-focus:text-white text-gray-500 absolute inset-y-0 right-0 flex items-center pr-4" data-v-fb661e32>`);
      _push(serverRenderer.ssrRenderComponent(_component_CheckIcon, {
        class: "h-5 w-5",
        "aria-hidden": "true"
      }, null, _parent));
      _push(`</span>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  });
  _push(`<!--]--><div tabindex="0" class="focus:text-white cursor-default relative py-2 pl-3 pr-9 focus:bg-gray-500 active:outline-none focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500" data-v-fb661e32>${serverRenderer.ssrInterpolate(`Add ${_ctx.search}?`)}</div></div></div></div>`);
}
const _sfc_setup$26 = _sfc_main$26.setup;
_sfc_main$26.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Forms/SearchSelectBox.vue");
  return _sfc_setup$26 ? _sfc_setup$26(props, ctx) : void 0;
};
var SearchSelectBox = /* @__PURE__ */ _export_sfc(_sfc_main$26, [["ssrRender", _sfc_ssrRender$24], ["__scopeId", "data-v-fb661e32"]]);
const _sfc_main$25 = {
  props: {
    modelValue: {},
    errorMessage: {
      type: String,
      required: false
    }
  },
  computed: {
    holdInventoryLabel() {
      return this.modelValue ? "Inventory on hold until quote expires." : "Hold Inventory?";
    },
    proxyChecked: {
      get() {
        return this.modelValue;
      },
      set(val) {
        this.$emit("update:modelValue", val);
      }
    }
  },
  emits: ["update:modelValue"]
};
function _sfc_ssrRender$23(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "col-span-2 justify-self-end" }, _attrs))}><div class="form-control"><label class="cursor-pointer label"><span class="label-text mr-4">${serverRenderer.ssrInterpolate($options.holdInventoryLabel)}</span><input id="hold_inventory" type="checkbox" class="toggle"${serverRenderer.ssrIncludeBooleanAttr(Array.isArray($options.proxyChecked) ? serverRenderer.ssrLooseContain($options.proxyChecked, null) : $options.proxyChecked) ? " checked" : ""}></label></div>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
    message: $props.errorMessage,
    class: "mt-2"
  }, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$25 = _sfc_main$25.setup;
_sfc_main$25.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/QuoteHoldInventoryCheckmark.vue");
  return _sfc_setup$25 ? _sfc_setup$25(props, ctx) : void 0;
};
var QuoteHoldInventoryCheckmark = /* @__PURE__ */ _export_sfc(_sfc_main$25, [["ssrRender", _sfc_ssrRender$23]]);
var QuoteHoldInventoryCheckmark$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": QuoteHoldInventoryCheckmark
}, Symbol.toStringTag, { value: "Module" }));
var LoadingState_vue_vue_type_style_index_0_scoped_true_lang = "";
const _sfc_main$24 = {
  props: {
    loading: Boolean
  }
};
function _sfc_ssrRender$22(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  if ($props.loading) {
    _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "flex justify-center items-center p-6" }, _attrs))} data-v-4be81afa><div class="spinner-border animate-spin inline-block w-8 h-8 border-2 border-gray-700 rounded-full" data-v-4be81afa></div></div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$24 = _sfc_main$24.setup;
_sfc_main$24.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/LoadingState.vue");
  return _sfc_setup$24 ? _sfc_setup$24(props, ctx) : void 0;
};
var LoadingState = /* @__PURE__ */ _export_sfc(_sfc_main$24, [["ssrRender", _sfc_ssrRender$22], ["__scopeId", "data-v-4be81afa"]]);
const _sfc_main$23 = {
  components: {
    DetailsSection,
    EmptyState,
    LoadingState
  },
  props: {
    customer: {
      type: Object,
      required: false
    }
  },
  data() {
    return {
      loading: false,
      orders: [],
      quotes: []
    };
  },
  watch: {
    customer() {
      this.getOrders();
    }
  },
  mounted() {
    this.getOrders();
  },
  methods: {
    getOrders() {
      var _a;
      this.loading = true;
      axios__default["default"].get(route("api.sales.index", { customer: (_a = this.customer) == null ? void 0 : _a.id })).then((response) => {
        this.orders = response.data.orders;
        this.quotes = response.data.quotes;
      }).catch((error) => {
        console.error(error.message);
      }).finally(() => {
        this.loading = false;
      });
    },
    showOrder(order) {
      this.showPopup(route(order.route, order.id));
    }
  }
};
function _sfc_ssrRender$21(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_loading_state = vue.resolveComponent("loading-state");
  const _component_empty_state = vue.resolveComponent("empty-state");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "space-y-4" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_details_section, null, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Customer Orders`);
      } else {
        return [
          vue.createTextVNode("Customer Orders")
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($data.loading) {
          _push2(serverRenderer.ssrRenderComponent(_component_loading_state, { loading: $data.loading }, null, _parent2, _scopeId));
        } else if (!$data.orders.length) {
          _push2(serverRenderer.ssrRenderComponent(_component_empty_state, {
            heading: "No Open Orders",
            showIcon: false,
            align: "left",
            class: "p-0"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<div class="max-h-52 overflow-y-auto"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList($data.orders, (order) => {
            _push2(`<a class="flex items-center justify-between py-2"${serverRenderer.ssrRenderAttr("href", _ctx.route("orders.show", order.id))} target="_blank"${_scopeId}><span${_scopeId}>${serverRenderer.ssrInterpolate(order.full_name)}</span><span class="link"${_scopeId}>View</span></a>`);
          });
          _push2(`<!--]--></div>`);
        }
      } else {
        return [
          $data.loading ? (vue.openBlock(), vue.createBlock(_component_loading_state, {
            key: 0,
            loading: $data.loading
          }, null, 8, ["loading"])) : !$data.orders.length ? (vue.openBlock(), vue.createBlock(_component_empty_state, {
            key: 1,
            heading: "No Open Orders",
            showIcon: false,
            align: "left",
            class: "p-0"
          })) : (vue.openBlock(), vue.createBlock("div", {
            key: 2,
            class: "max-h-52 overflow-y-auto"
          }, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.orders, (order) => {
              return vue.openBlock(), vue.createBlock("a", {
                key: "order.id",
                class: "flex items-center justify-between py-2",
                href: _ctx.route("orders.show", order.id),
                target: "_blank"
              }, [
                vue.createVNode("span", null, vue.toDisplayString(order.full_name), 1),
                vue.createVNode("span", { class: "link" }, "View")
              ], 8, ["href"]);
            }), 128))
          ]))
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_details_section, null, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Customer Quotes`);
      } else {
        return [
          vue.createTextVNode("Customer Quotes")
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($data.loading) {
          _push2(serverRenderer.ssrRenderComponent(_component_loading_state, { loading: $data.loading }, null, _parent2, _scopeId));
        } else if (!$data.quotes.length) {
          _push2(serverRenderer.ssrRenderComponent(_component_empty_state, {
            heading: "No Open Quotes",
            showIcon: false,
            align: "left",
            class: "p-0"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<div class="max-h-52 overflow-y-auto"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList($data.quotes, (order) => {
            _push2(`<a class="flex items-center justify-between py-2"${serverRenderer.ssrRenderAttr("href", _ctx.route("quotes.show", order.id))} target="_blank"${_scopeId}><span${_scopeId}>${serverRenderer.ssrInterpolate(order.full_name)}</span><span class="link"${_scopeId}>View</span></a>`);
          });
          _push2(`<!--]--></div>`);
        }
      } else {
        return [
          $data.loading ? (vue.openBlock(), vue.createBlock(_component_loading_state, {
            key: 0,
            loading: $data.loading
          }, null, 8, ["loading"])) : !$data.quotes.length ? (vue.openBlock(), vue.createBlock(_component_empty_state, {
            key: 1,
            heading: "No Open Quotes",
            showIcon: false,
            align: "left",
            class: "p-0"
          })) : (vue.openBlock(), vue.createBlock("div", {
            key: 2,
            class: "max-h-52 overflow-y-auto"
          }, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.quotes, (order) => {
              return vue.openBlock(), vue.createBlock("a", {
                key: "order.id",
                class: "flex items-center justify-between py-2",
                href: _ctx.route("quotes.show", order.id),
                target: "_blank"
              }, [
                vue.createVNode("span", null, vue.toDisplayString(order.full_name), 1),
                vue.createVNode("span", { class: "link" }, "View")
              ], 8, ["href"]);
            }), 128))
          ]))
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$23 = _sfc_main$23.setup;
_sfc_main$23.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/CompanyOpenOrders.vue");
  return _sfc_setup$23 ? _sfc_setup$23(props, ctx) : void 0;
};
var CompanyOpenOrders = /* @__PURE__ */ _export_sfc(_sfc_main$23, [["ssrRender", _sfc_ssrRender$21]]);
var CompanyOpenOrders$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CompanyOpenOrders
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$22 = {
  components: {
    JetSectionTitle: SectionTitle,
    JetButton,
    JetFormSection,
    JetInput,
    JetCheckbox: JetCheckBox,
    JetInputError,
    JetLabel,
    SelectBox,
    SearchSelectBox,
    TextAreaInput,
    Modal,
    CreateCustomerForm,
    QuoteHoldInventoryCheckmark,
    CompanyOpenOrders
  },
  props: {
    customers: {
      type: Array,
      required: true
    },
    isQuote: {
      type: Boolean,
      default: false
    }
  },
  data() {
    return {
      creatingCustomer: false,
      customerName: "",
      customerContacts: [],
      teamMembers: this.$page.props.teamMembers,
      orderCustomer: null,
      contact: null,
      teamMember: this.$page.props.teamMembers.find(
        (member) => member.id === this.$page.props.user.id
      ),
      order: this.$inertia.form({
        _method: "POST",
        date: new Date().toISOString().slice(0, -14),
        quote_expires: new Date(new Date().getTime() + 2592e6).toISOString().slice(0, -14),
        hold_inventory: false,
        notes: "",
        items: [],
        customer_id: null,
        contact_id: null,
        team_member_id: this.$page.props.user.id,
        is_taxable: true
      })
    };
  },
  watch: {
    orderCustomer(orderCustomer) {
      if (orderCustomer) {
        this.order.customer_id = orderCustomer.id;
        this.customerContacts = orderCustomer.contacts ? orderCustomer.contacts : [];
        this.contact = null;
        this.order.is_taxable = orderCustomer.is_taxable;
      } else {
        this.order.customer_id = null;
        this.contact = null;
      }
    },
    contact(value) {
      if (value) {
        this.order.contact_id = value.id;
      } else {
        this.order.contact_id = null;
      }
    },
    teamMember(value) {
      if (value) {
        this.order.team_member_id = value.id;
      } else {
        this.order.team_member_id = null;
      }
    }
  },
  methods: {
    createOrder() {
      if (this.isQuote) {
        this.order.post(route("quotes.store"));
      } else {
        this.order.post(route("orders.store"));
      }
    },
    updateCustomer(customerId) {
      this.orderCustomer = this.customers.find(
        (customer) => customer.id == customerId
      );
    },
    addCustomer(customerName) {
      this.customerName = customerName;
      this.creatingCustomer = true;
    },
    createdCustomer(newCustomer) {
      inertia.Inertia.reload();
      this.customers.push(newCustomer);
      this.updateCustomer(newCustomer.id);
      this.creatingCustomer = false;
    }
  }
};
function _sfc_ssrRender$20(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_modal = vue.resolveComponent("modal");
  const _component_create_customer_form = vue.resolveComponent("create-customer-form");
  const _component_search_select_box = vue.resolveComponent("search-select-box");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_QuoteHoldInventoryCheckmark = vue.resolveComponent("QuoteHoldInventoryCheckmark");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_company_open_orders = vue.resolveComponent("company-open-orders");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "xl:flex items-start xl:space-x-6 space-y-6 xl:space-y-0" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, {
    onSubmitted: $options.createOrder,
    class: "xl:w-3/4"
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create ${serverRenderer.ssrInterpolate($props.isQuote ? "Quote" : "Order")}`);
      } else {
        return [
          vue.createTextVNode("Create " + vue.toDisplayString($props.isQuote ? "Quote" : "Order"), 1)
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a new customer ${serverRenderer.ssrInterpolate($props.isQuote ? "quote" : "order")}. `);
      } else {
        return [
          vue.createTextVNode(" Create a new customer " + vue.toDisplayString($props.isQuote ? "quote" : "order") + ". ", 1)
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6 grid gap-6"${_scopeId}><div class="grid sm:grid-cols-2 lg:grid-cols-5 gap-4 2xl:gap-x-20 lg:gap-y-8"${_scopeId}><div class="col-span-1 lg:col-span-3 grid gap-4 lg:grid-cols-2"${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_modal, {
          show: $data.creatingCustomer,
          onClose: ($event) => $data.creatingCustomer = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_create_customer_form, {
                onCreated: $options.createdCustomer,
                redirect: false,
                customerName: $data.customerName
              }, null, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_create_customer_form, {
                  onCreated: $options.createdCustomer,
                  redirect: false,
                  customerName: $data.customerName
                }, null, 8, ["onCreated", "customerName"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_search_select_box, {
          labelValue: "Customer",
          items: $props.customers,
          selectedItem: $data.orderCustomer,
          onUpdate: $options.updateCustomer,
          onAdd: $options.addCustomer
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.order.errors.customer_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div style="${serverRenderer.ssrRenderStyle($data.orderCustomer && $data.customerContacts.length ? null : { display: "none" })}"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Customer Contact",
          items: $data.customerContacts,
          modelValue: $data.contact,
          "onUpdate:modelValue": ($event) => $data.contact = $event,
          selectedItem: $data.contact
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.order.errors.contact_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class=""${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Sales Person",
          items: $data.teamMembers,
          selectedItem: $data.teamMember,
          modelValue: $data.teamMember,
          "onUpdate:modelValue": ($event) => $data.teamMember = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.order.errors.team_member_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="col-span-1 lg:col-span-2 grid grid-cols-2 gap-4"${_scopeId}><div class="${serverRenderer.ssrRenderClass(
          $props.isQuote ? "" : "col-span-2 justify-self-end"
        )}"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "date",
          value: "Date"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "date",
          type: "date",
          class: "block w-full",
          modelValue: $data.order.date,
          "onUpdate:modelValue": ($event) => $data.order.date = $event,
          required: ""
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.order.errors.date,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        if ($props.isQuote) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "quote_expires",
            value: "Expire Date"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "quote_expires",
            type: "date",
            class: "block w-full",
            modelValue: $data.order.quote_expires,
            "onUpdate:modelValue": ($event) => $data.order.quote_expires = $event,
            required: ""
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.order.errors.quote_expires,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.isQuote) {
          _push2(serverRenderer.ssrRenderComponent(_component_QuoteHoldInventoryCheckmark, {
            modelValue: $data.order.hold_inventory,
            "onUpdate:modelValue": ($event) => $data.order.hold_inventory = $event,
            errorMessage: $data.order.errors.hold_inventory
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-2 lg:col-span-5 sm:flex"${_scopeId}><div class="form-control sm:w-1/4 mb-6 sm:mb-0 sm:mt-4"${_scopeId}><label class="label cursor-pointer"${_scopeId}><span class="label-text"${_scopeId}>Taxable</span>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          class: "mr-2",
          checked: $data.order.is_taxable,
          modelValue: $data.order.is_taxable,
          "onUpdate:modelValue": ($event) => $data.order.is_taxable = $event
        }, null, _parent2, _scopeId));
        _push2(`</label></div><div class="sm:w-3/4 sm:ml-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "notes",
          value: "Notes"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "notes",
          type: "notes",
          class: "block w-full",
          modelValue: $data.order.notes,
          "onUpdate:modelValue": ($event) => $data.order.notes = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.order.errors.notes,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6 grid gap-6" }, [
            vue.createVNode("div", { class: "grid sm:grid-cols-2 lg:grid-cols-5 gap-4 2xl:gap-x-20 lg:gap-y-8" }, [
              vue.createVNode("div", { class: "col-span-1 lg:col-span-3 grid gap-4 lg:grid-cols-2" }, [
                vue.createVNode("div", null, [
                  vue.createVNode(_component_modal, {
                    show: $data.creatingCustomer,
                    onClose: ($event) => $data.creatingCustomer = false
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_create_customer_form, {
                        onCreated: $options.createdCustomer,
                        redirect: false,
                        customerName: $data.customerName
                      }, null, 8, ["onCreated", "customerName"])
                    ]),
                    _: 1
                  }, 8, ["show", "onClose"]),
                  vue.createVNode(_component_search_select_box, {
                    labelValue: "Customer",
                    items: $props.customers,
                    selectedItem: $data.orderCustomer,
                    onUpdate: $options.updateCustomer,
                    onAdd: $options.addCustomer
                  }, null, 8, ["items", "selectedItem", "onUpdate", "onAdd"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.order.errors.customer_id,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.withDirectives(vue.createVNode("div", null, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Customer Contact",
                    items: $data.customerContacts,
                    modelValue: $data.contact,
                    "onUpdate:modelValue": ($event) => $data.contact = $event,
                    selectedItem: $data.contact
                  }, null, 8, ["items", "modelValue", "onUpdate:modelValue", "selectedItem"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.order.errors.contact_id,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ], 512), [
                  [
                    vue.vShow,
                    $data.orderCustomer && $data.customerContacts.length
                  ]
                ]),
                vue.createVNode("div", { class: "" }, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Sales Person",
                    items: $data.teamMembers,
                    selectedItem: $data.teamMember,
                    modelValue: $data.teamMember,
                    "onUpdate:modelValue": ($event) => $data.teamMember = $event
                  }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.order.errors.team_member_id,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ]),
              vue.createVNode("div", { class: "col-span-1 lg:col-span-2 grid grid-cols-2 gap-4" }, [
                vue.createVNode("div", {
                  class: $props.isQuote ? "" : "col-span-2 justify-self-end"
                }, [
                  vue.createVNode(_component_jet_label, {
                    for: "date",
                    value: "Date"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "date",
                    type: "date",
                    class: "block w-full",
                    modelValue: $data.order.date,
                    "onUpdate:modelValue": ($event) => $data.order.date = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.order.errors.date,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ], 2),
                $props.isQuote ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
                  vue.createVNode(_component_jet_label, {
                    for: "quote_expires",
                    value: "Expire Date"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "quote_expires",
                    type: "date",
                    class: "block w-full",
                    modelValue: $data.order.quote_expires,
                    "onUpdate:modelValue": ($event) => $data.order.quote_expires = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.order.errors.quote_expires,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])) : vue.createCommentVNode("", true),
                $props.isQuote ? (vue.openBlock(), vue.createBlock(_component_QuoteHoldInventoryCheckmark, {
                  key: 1,
                  modelValue: $data.order.hold_inventory,
                  "onUpdate:modelValue": ($event) => $data.order.hold_inventory = $event,
                  errorMessage: $data.order.errors.hold_inventory
                }, null, 8, ["modelValue", "onUpdate:modelValue", "errorMessage"])) : vue.createCommentVNode("", true)
              ]),
              vue.createVNode("div", { class: "sm:col-span-2 lg:col-span-5 sm:flex" }, [
                vue.createVNode("div", { class: "form-control sm:w-1/4 mb-6 sm:mb-0 sm:mt-4" }, [
                  vue.createVNode("label", { class: "label cursor-pointer" }, [
                    vue.createVNode("span", { class: "label-text" }, "Taxable"),
                    vue.createVNode(_component_jet_checkbox, {
                      class: "mr-2",
                      checked: $data.order.is_taxable,
                      modelValue: $data.order.is_taxable,
                      "onUpdate:modelValue": ($event) => $data.order.is_taxable = $event
                    }, null, 8, ["checked", "modelValue", "onUpdate:modelValue"])
                  ])
                ]),
                vue.createVNode("div", { class: "sm:w-3/4 sm:ml-4" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "notes",
                    value: "Notes"
                  }),
                  vue.createVNode(_component_text_area_input, {
                    id: "notes",
                    type: "notes",
                    class: "block w-full",
                    modelValue: $data.order.notes,
                    "onUpdate:modelValue": ($event) => $data.order.notes = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.order.errors.notes,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.order.processing },
          disabled: $data.order.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`New ${serverRenderer.ssrInterpolate($props.isQuote ? "quote" : "order")}`);
            } else {
              return [
                vue.createTextVNode("New " + vue.toDisplayString($props.isQuote ? "quote" : "order"), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.order.processing },
            disabled: $data.order.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("New " + vue.toDisplayString($props.isQuote ? "quote" : "order"), 1)
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_company_open_orders, {
    customer: $data.orderCustomer,
    class: "xl:w-1/4"
  }, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$22 = _sfc_main$22.setup;
_sfc_main$22.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/OrderCreate.vue");
  return _sfc_setup$22 ? _sfc_setup$22(props, ctx) : void 0;
};
var OrderCreate = /* @__PURE__ */ _export_sfc(_sfc_main$22, [["ssrRender", _sfc_ssrRender$20]]);
var OrderCreate$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": OrderCreate
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$21 = {
  components: {
    OrdersLayout,
    OrderCreate
  },
  props: ["customers"]
};
function _sfc_ssrRender$1$(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_orders_layout = vue.resolveComponent("orders-layout");
  const _component_OrderCreate = vue.resolveComponent("OrderCreate");
  _push(serverRenderer.ssrRenderComponent(_component_orders_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_OrderCreate, { customers: $props.customers }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_OrderCreate, { customers: $props.customers }, null, 8, ["customers"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$21 = _sfc_main$21.setup;
_sfc_main$21.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Create.vue");
  return _sfc_setup$21 ? _sfc_setup$21(props, ctx) : void 0;
};
var Create$e = /* @__PURE__ */ _export_sfc(_sfc_main$21, [["ssrRender", _sfc_ssrRender$1$]]);
var Create$f = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$e
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$20 = {
  components: {
    ExternalLinkIcon: outline.ExternalLinkIcon,
    ArrowDownIcon: outline.ArrowDownIcon,
    ArrowUpIcon: outline.ArrowUpIcon,
    DetailsSection,
    TableTable,
    TableHead,
    TableH,
    TableD,
    SearchInput,
    Pagination
  },
  props: {
    orders: {
      type: Object
    },
    areQuotes: {
      type: Boolean,
      default: false
    },
    filters: {
      type: Object
    }
  },
  data() {
    return {
      search: this.filters.search || "",
      orderBy: this.filters.orderBy || "",
      orderByDirection: this.filters.orderByDirection || ""
    };
  },
  watch: {
    search: _debounce__default["default"](function(value) {
      this.updateSearch();
    }, 200)
  },
  methods: {
    formatDate: (value) => moment__default["default"](value).format("MM/DD/YYYY"),
    updateOrderBy(value) {
      if (this.orderBy === value) {
        this.orderByDirection = this.orderByDirection === "desc" ? "asc" : "desc";
      } else {
        this.orderBy = value;
        this.orderByDirection = "desc";
      }
      this.updateSearch();
    },
    updateSearch() {
      if (this.areQuotes) {
        this.$inertia.get(
          this.route("quotes.index"),
          {
            search: this.search,
            orderBy: this.orderBy,
            orderByDirection: this.orderByDirection
          },
          {
            preserveState: true,
            replace: true
          }
        );
      } else {
        this.$inertia.get(
          this.route("orders.index"),
          {
            search: this.search,
            orderBy: this.orderBy,
            orderByDirection: this.orderByDirection
          },
          {
            preserveState: true,
            replace: true
          }
        );
      }
    },
    showOrder(order) {
      order.is_quote ? this.$inertia.get(route("quotes.show", order)) : this.$inertia.get(route("orders.show", order));
    }
  }
};
function _sfc_ssrRender$1_(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_search_input = vue.resolveComponent("search-input");
  const _component_table_table = vue.resolveComponent("table-table");
  const _component_table_head = vue.resolveComponent("table-head");
  const _component_table_h = vue.resolveComponent("table-h");
  const _component_ArrowUpIcon = vue.resolveComponent("ArrowUpIcon");
  const _component_ArrowDownIcon = vue.resolveComponent("ArrowDownIcon");
  const _component_table_d = vue.resolveComponent("table-d");
  const _component_pagination = vue.resolveComponent("pagination");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, () => {
          _push2(`Recent ${serverRenderer.ssrInterpolate($props.areQuotes ? "Quotes" : "Orders")} ${serverRenderer.ssrInterpolate($data.search ? "for " + $data.search : "")}`);
        }, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "title", {}, () => [
            vue.createTextVNode("Recent " + vue.toDisplayString($props.areQuotes ? "Quotes" : "Orders") + " " + vue.toDisplayString($data.search ? "for " + $data.search : ""), 1)
          ])
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_search_input, {
          modelValue: $data.search,
          "onUpdate:modelValue": ($event) => $data.search = $event
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_search_input, {
            modelValue: $data.search,
            "onUpdate:modelValue": ($event) => $data.search = $event
          }, null, 8, ["modelValue", "onUpdate:modelValue"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6 overflow-auto"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_table_table, { class: "text-left" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_table_head, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="${serverRenderer.ssrRenderClass([$data.orderBy == "id" ? "text-gray-900" : "", "select-none cursor-pointer flex items-center"])}"${_scopeId4}>${serverRenderer.ssrInterpolate($props.areQuotes ? "Quote #" : "Order #")} `);
                          if ($data.orderBy == "id" && $data.orderByDirection == "asc") {
                            _push5(serverRenderer.ssrRenderComponent(_component_ArrowUpIcon, { class: "ml-2 w-3 h-3" }, null, _parent5, _scopeId4));
                          } else {
                            _push5(serverRenderer.ssrRenderComponent(_component_ArrowDownIcon, { class: "ml-2 w-3 h-3" }, null, _parent5, _scopeId4));
                          }
                          _push5(`</div>`);
                        } else {
                          return [
                            vue.createVNode("div", {
                              class: ["select-none cursor-pointer flex items-center", $data.orderBy == "id" ? "text-gray-900" : ""],
                              onClick: ($event) => $options.updateOrderBy("id")
                            }, [
                              vue.createTextVNode(vue.toDisplayString($props.areQuotes ? "Quote #" : "Order #") + " ", 1),
                              $data.orderBy == "id" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                                key: 0,
                                class: "ml-2 w-3 h-3"
                              })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                                key: 1,
                                class: "ml-2 w-3 h-3"
                              }))
                            ], 10, ["onClick"])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="${serverRenderer.ssrRenderClass([$data.orderBy == "date" ? "text-gray-900" : "", "select-none cursor-pointer flex items-center"])}"${_scopeId4}> Date `);
                          if ($data.orderBy == "date" && $data.orderByDirection == "asc") {
                            _push5(serverRenderer.ssrRenderComponent(_component_ArrowUpIcon, { class: "ml-2 w-3 h-3" }, null, _parent5, _scopeId4));
                          } else {
                            _push5(serverRenderer.ssrRenderComponent(_component_ArrowDownIcon, { class: "ml-2 w-3 h-3" }, null, _parent5, _scopeId4));
                          }
                          _push5(`</div>`);
                        } else {
                          return [
                            vue.createVNode("div", {
                              class: ["select-none cursor-pointer flex items-center", $data.orderBy == "date" ? "text-gray-900" : ""],
                              onClick: ($event) => $options.updateOrderBy("date")
                            }, [
                              vue.createTextVNode(" Date "),
                              $data.orderBy == "date" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                                key: 0,
                                class: "ml-2 w-3 h-3"
                              })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                                key: 1,
                                class: "ml-2 w-3 h-3"
                              }))
                            ], 10, ["onClick"])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="${serverRenderer.ssrRenderClass([
                            $data.orderBy == "customer" ? "text-gray-900" : "",
                            "select-none cursor-pointer flex items-center"
                          ])}"${_scopeId4}> Customer `);
                          if ($data.orderBy == "customer" && $data.orderByDirection == "asc") {
                            _push5(serverRenderer.ssrRenderComponent(_component_ArrowUpIcon, { class: "ml-2 w-3 h-3" }, null, _parent5, _scopeId4));
                          } else {
                            _push5(serverRenderer.ssrRenderComponent(_component_ArrowDownIcon, { class: "ml-2 w-3 h-3" }, null, _parent5, _scopeId4));
                          }
                          _push5(`</div>`);
                        } else {
                          return [
                            vue.createVNode("div", {
                              class: [
                                "select-none cursor-pointer flex items-center",
                                $data.orderBy == "customer" ? "text-gray-900" : ""
                              ],
                              onClick: ($event) => $options.updateOrderBy("customer")
                            }, [
                              vue.createTextVNode(" Customer "),
                              $data.orderBy == "customer" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                                key: 0,
                                class: "ml-2 w-3 h-3"
                              })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                                key: 1,
                                class: "ml-2 w-3 h-3"
                              }))
                            ], 10, ["onClick"])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Status`);
                        } else {
                          return [
                            vue.createTextVNode("Status")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Total`);
                        } else {
                          return [
                            vue.createTextVNode("Total")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createVNode("div", {
                            class: ["select-none cursor-pointer flex items-center", $data.orderBy == "id" ? "text-gray-900" : ""],
                            onClick: ($event) => $options.updateOrderBy("id")
                          }, [
                            vue.createTextVNode(vue.toDisplayString($props.areQuotes ? "Quote #" : "Order #") + " ", 1),
                            $data.orderBy == "id" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                              key: 0,
                              class: "ml-2 w-3 h-3"
                            })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                              key: 1,
                              class: "ml-2 w-3 h-3"
                            }))
                          ], 10, ["onClick"])
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createVNode("div", {
                            class: ["select-none cursor-pointer flex items-center", $data.orderBy == "date" ? "text-gray-900" : ""],
                            onClick: ($event) => $options.updateOrderBy("date")
                          }, [
                            vue.createTextVNode(" Date "),
                            $data.orderBy == "date" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                              key: 0,
                              class: "ml-2 w-3 h-3"
                            })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                              key: 1,
                              class: "ml-2 w-3 h-3"
                            }))
                          ], 10, ["onClick"])
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createVNode("div", {
                            class: [
                              "select-none cursor-pointer flex items-center",
                              $data.orderBy == "customer" ? "text-gray-900" : ""
                            ],
                            onClick: ($event) => $options.updateOrderBy("customer")
                          }, [
                            vue.createTextVNode(" Customer "),
                            $data.orderBy == "customer" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                              key: 0,
                              class: "ml-2 w-3 h-3"
                            })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                              key: 1,
                              class: "ml-2 w-3 h-3"
                            }))
                          ], 10, ["onClick"])
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Status")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Total")
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<tbody${_scopeId2}><!--[-->`);
              serverRenderer.ssrRenderList($props.orders.data, (order) => {
                _push3(`<tr tabindex="0" class="px-2 border-b border-gray-50 last:border-transparent hover:border-black focus:border-black transition cursor-pointer"${_scopeId2}>`);
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(order.id)}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(order.id), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate($options.formatDate(order.date))}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString($options.formatDate(order.date)), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(order.customer.name)}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(order.customer.name), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    var _a, _b;
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(order.is_quote ? order.status : (_a = order.deliveryStatus) == null ? void 0 : _a.name)}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(order.is_quote ? order.status : (_b = order.deliveryStatus) == null ? void 0 : _b.name), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(_ctx.formatMoney(order.grand_total))}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(_ctx.formatMoney(order.grand_total)), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(`</tr>`);
              });
              _push3(`<!--]--></tbody>`);
            } else {
              return [
                vue.createVNode(_component_table_head, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", {
                          class: ["select-none cursor-pointer flex items-center", $data.orderBy == "id" ? "text-gray-900" : ""],
                          onClick: ($event) => $options.updateOrderBy("id")
                        }, [
                          vue.createTextVNode(vue.toDisplayString($props.areQuotes ? "Quote #" : "Order #") + " ", 1),
                          $data.orderBy == "id" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                            key: 0,
                            class: "ml-2 w-3 h-3"
                          })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                            key: 1,
                            class: "ml-2 w-3 h-3"
                          }))
                        ], 10, ["onClick"])
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", {
                          class: ["select-none cursor-pointer flex items-center", $data.orderBy == "date" ? "text-gray-900" : ""],
                          onClick: ($event) => $options.updateOrderBy("date")
                        }, [
                          vue.createTextVNode(" Date "),
                          $data.orderBy == "date" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                            key: 0,
                            class: "ml-2 w-3 h-3"
                          })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                            key: 1,
                            class: "ml-2 w-3 h-3"
                          }))
                        ], 10, ["onClick"])
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", {
                          class: [
                            "select-none cursor-pointer flex items-center",
                            $data.orderBy == "customer" ? "text-gray-900" : ""
                          ],
                          onClick: ($event) => $options.updateOrderBy("customer")
                        }, [
                          vue.createTextVNode(" Customer "),
                          $data.orderBy == "customer" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                            key: 0,
                            class: "ml-2 w-3 h-3"
                          })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                            key: 1,
                            class: "ml-2 w-3 h-3"
                          }))
                        ], 10, ["onClick"])
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Status")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Total")
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                vue.createVNode("tbody", null, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.orders.data, (order) => {
                    return vue.openBlock(), vue.createBlock("tr", {
                      key: order.id,
                      tabindex: "0",
                      class: "px-2 border-b border-gray-50 last:border-transparent hover:border-black focus:border-black transition cursor-pointer",
                      onClick: ($event) => $options.showOrder(order)
                    }, [
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(order.id), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString($options.formatDate(order.date)), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(order.customer.name), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => {
                          var _a;
                          return [
                            vue.createTextVNode(vue.toDisplayString(order.is_quote ? order.status : (_a = order.deliveryStatus) == null ? void 0 : _a.name), 1)
                          ];
                        }),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(_ctx.formatMoney(order.grand_total)), 1)
                        ]),
                        _: 2
                      }, 1024)
                    ], 8, ["onClick"]);
                  }), 128))
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        if ($props.orders.data.length < 1) {
          _push2(`<div class="p-4"${_scopeId}><div class="text-gray-500"${_scopeId}> No ${serverRenderer.ssrInterpolate($props.areQuotes ? "quotes" : "orders")} found${serverRenderer.ssrInterpolate($data.search ? " for " + $data.search : "")}. </div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_pagination, { items: $props.orders }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6 overflow-auto" }, [
            vue.createVNode(_component_table_table, { class: "text-left" }, {
              default: vue.withCtx(() => [
                vue.createVNode(_component_table_head, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", {
                          class: ["select-none cursor-pointer flex items-center", $data.orderBy == "id" ? "text-gray-900" : ""],
                          onClick: ($event) => $options.updateOrderBy("id")
                        }, [
                          vue.createTextVNode(vue.toDisplayString($props.areQuotes ? "Quote #" : "Order #") + " ", 1),
                          $data.orderBy == "id" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                            key: 0,
                            class: "ml-2 w-3 h-3"
                          })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                            key: 1,
                            class: "ml-2 w-3 h-3"
                          }))
                        ], 10, ["onClick"])
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", {
                          class: ["select-none cursor-pointer flex items-center", $data.orderBy == "date" ? "text-gray-900" : ""],
                          onClick: ($event) => $options.updateOrderBy("date")
                        }, [
                          vue.createTextVNode(" Date "),
                          $data.orderBy == "date" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                            key: 0,
                            class: "ml-2 w-3 h-3"
                          })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                            key: 1,
                            class: "ml-2 w-3 h-3"
                          }))
                        ], 10, ["onClick"])
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", {
                          class: [
                            "select-none cursor-pointer flex items-center",
                            $data.orderBy == "customer" ? "text-gray-900" : ""
                          ],
                          onClick: ($event) => $options.updateOrderBy("customer")
                        }, [
                          vue.createTextVNode(" Customer "),
                          $data.orderBy == "customer" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                            key: 0,
                            class: "ml-2 w-3 h-3"
                          })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                            key: 1,
                            class: "ml-2 w-3 h-3"
                          }))
                        ], 10, ["onClick"])
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Status")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Total")
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                vue.createVNode("tbody", null, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.orders.data, (order) => {
                    return vue.openBlock(), vue.createBlock("tr", {
                      key: order.id,
                      tabindex: "0",
                      class: "px-2 border-b border-gray-50 last:border-transparent hover:border-black focus:border-black transition cursor-pointer",
                      onClick: ($event) => $options.showOrder(order)
                    }, [
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(order.id), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString($options.formatDate(order.date)), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(order.customer.name), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => {
                          var _a;
                          return [
                            vue.createTextVNode(vue.toDisplayString(order.is_quote ? order.status : (_a = order.deliveryStatus) == null ? void 0 : _a.name), 1)
                          ];
                        }),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(_ctx.formatMoney(order.grand_total)), 1)
                        ]),
                        _: 2
                      }, 1024)
                    ], 8, ["onClick"]);
                  }), 128))
                ])
              ]),
              _: 1
            }),
            $props.orders.data.length < 1 ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "p-4"
            }, [
              vue.createVNode("div", { class: "text-gray-500" }, " No " + vue.toDisplayString($props.areQuotes ? "quotes" : "orders") + " found" + vue.toDisplayString($data.search ? " for " + $data.search : "") + ". ", 1)
            ])) : vue.createCommentVNode("", true),
            vue.createVNode(_component_pagination, { items: $props.orders }, null, 8, ["items"])
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$20 = _sfc_main$20.setup;
_sfc_main$20.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/OrdersView.vue");
  return _sfc_setup$20 ? _sfc_setup$20(props, ctx) : void 0;
};
var ViewOrders = /* @__PURE__ */ _export_sfc(_sfc_main$20, [["ssrRender", _sfc_ssrRender$1_]]);
var OrdersView = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ViewOrders
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1$ = {
  components: {
    OrdersLayout,
    ButtonLink,
    DetailsSection,
    HeadingOne,
    CompletedOrdersCard,
    ActiveQuotesCard,
    ViewOrders
  },
  props: {
    orders: {
      type: Object
    },
    filters: {
      type: Object
    }
  }
};
function _sfc_ssrRender$1Z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_orders_layout = vue.resolveComponent("orders-layout");
  const _component_heading_one = vue.resolveComponent("heading-one");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_active_quotes_card = vue.resolveComponent("active-quotes-card");
  const _component_view_orders = vue.resolveComponent("view-orders");
  _push(serverRenderer.ssrRenderComponent(_component_orders_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between items-center w-full pb-9 px-2 lg:px-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_heading_one, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Orders`);
            } else {
              return [
                vue.createTextVNode("Orders")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_button_link, {
          href: _ctx.route("orders.create")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`New Order`);
            } else {
              return [
                vue.createTextVNode("New Order")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div class="grid gap-6 lg:gap-8"${_scopeId}><div class="grid gap-4 lg:gap-6 md:grid-cols-3 text-gray-900"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_active_quotes_card, null, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_view_orders, {
          orders: $props.orders,
          filters: $props.filters
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between items-center w-full pb-9 px-2 lg:px-4" }, [
            vue.createVNode(_component_heading_one, null, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Orders")
              ]),
              _: 1
            }),
            vue.createVNode(_component_button_link, {
              href: _ctx.route("orders.create")
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("New Order")
              ]),
              _: 1
            }, 8, ["href"])
          ]),
          vue.createVNode("div", { class: "grid gap-6 lg:gap-8" }, [
            vue.createVNode("div", { class: "grid gap-4 lg:gap-6 md:grid-cols-3 text-gray-900" }, [
              vue.createVNode(_component_active_quotes_card)
            ]),
            vue.createVNode(_component_view_orders, {
              orders: $props.orders,
              filters: $props.filters
            }, null, 8, ["orders", "filters"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1$ = _sfc_main$1$.setup;
_sfc_main$1$.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Index.vue");
  return _sfc_setup$1$ ? _sfc_setup$1$(props, ctx) : void 0;
};
var Index$g = /* @__PURE__ */ _export_sfc(_sfc_main$1$, [["ssrRender", _sfc_ssrRender$1Z]]);
var Index$h = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$g
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1_ = {
  props: {
    as: {
      type: String,
      default: "div"
    }
  }
};
function _sfc_ssrRender$1Y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.as), vue.mergeProps({ class: "flex items-center justify-between hover:bg-gray-100 uppercase text-sm p-2 cursor-pointer" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1_ = _sfc_main$1_.setup;
_sfc_main$1_.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Lists/SmallLineItem.vue");
  return _sfc_setup$1_ ? _sfc_setup$1_(props, ctx) : void 0;
};
var SmallLineItem = /* @__PURE__ */ _export_sfc(_sfc_main$1_, [["ssrRender", _sfc_ssrRender$1Y]]);
const _sfc_main$1Z = {
  components: {
    SmallLineItem
  },
  props: {
    item: {
      type: Object,
      required: true
    },
    orderId: {
      type: Number,
      required: false
    }
  },
  computed: {
    itemIsNotInThisOrder() {
      return this.item.order_id !== this.orderId;
    }
  },
  methods: {
    viewOrder() {
      this.item.sale.is_quote ? this.showPopup(
        route("quotes.show", this.item.order_id),
        "View Order"
      ) : this.showPopup(
        route("orders.show", this.item.order_id),
        "View Order"
      );
    }
  }
};
function _sfc_ssrRender$1X(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_SmallLineItem = vue.resolveComponent("SmallLineItem");
  _push(serverRenderer.ssrRenderComponent(_component_SmallLineItem, vue.mergeProps({ onClick: $options.viewOrder }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($options.itemIsNotInThisOrder) {
          _push2(`<div class="text-black"${_scopeId}>${serverRenderer.ssrInterpolate($props.item.is_quote ? "Quote #" : "Order #")} ${serverRenderer.ssrInterpolate($props.item.order_id)}, ${serverRenderer.ssrInterpolate($props.item.sale.customer.name)}</div>`);
        } else {
          _push2(`<div class="text-black"${_scopeId}>${serverRenderer.ssrInterpolate($props.item.is_quote ? `Quote # ${$props.item.order_id} (This Quote)` : `Order # ${$props.item.order_id} (This Order)`)}</div>`);
        }
        _push2(`<div${_scopeId}>Qt:${serverRenderer.ssrInterpolate($props.item.quantity)}</div>`);
      } else {
        return [
          $options.itemIsNotInThisOrder ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "text-black"
          }, vue.toDisplayString($props.item.is_quote ? "Quote #" : "Order #") + " " + vue.toDisplayString($props.item.order_id) + ", " + vue.toDisplayString($props.item.sale.customer.name), 1)) : (vue.openBlock(), vue.createBlock("div", {
            key: 1,
            class: "text-black"
          }, vue.toDisplayString($props.item.is_quote ? `Quote # ${$props.item.order_id} (This Quote)` : `Order # ${$props.item.order_id} (This Order)`), 1)),
          vue.createVNode("div", null, "Qt:" + vue.toDisplayString($props.item.quantity), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1Z = _sfc_main$1Z.setup;
_sfc_main$1Z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/ProductHoldItem.vue");
  return _sfc_setup$1Z ? _sfc_setup$1Z(props, ctx) : void 0;
};
var ProductHoldItem = /* @__PURE__ */ _export_sfc(_sfc_main$1Z, [["ssrRender", _sfc_ssrRender$1X]]);
var ProductHoldItem$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ProductHoldItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1Y = {
  components: {
    TabContainer,
    TabLink,
    ErrorMessage,
    ProductHoldItem,
    LoadingState
  },
  props: {
    orderId: {
      type: Number,
      required: false
    },
    product: {
      type: [Object, Boolean],
      required: false
    },
    size: {
      type: [Object, Boolean],
      required: false
    }
  },
  mounted() {
    if (this.product) {
      this.getSoldAndHoldInventoryItemsForProduct(this.product);
    }
  },
  data() {
    return {
      loading: true,
      error: false,
      onHoldInventoryQuoteItems: [],
      soldProductOrderItems: [],
      viewingOnHold: true
    };
  },
  computed: {
    soldProductInventoryForSize() {
      return this.soldProductOrderItems.filter(
        (item) => {
          var _a;
          return item.size_id == ((_a = this.size) == null ? void 0 : _a.id);
        }
      );
    },
    onHoldProductInventoryForSize() {
      return this.onHoldInventoryQuoteItems.filter(
        (item) => {
          var _a;
          return item.size_id == ((_a = this.size) == null ? void 0 : _a.id);
        }
      );
    },
    quantitySold() {
      return this.soldProductInventoryForSize.reduce(
        (total, item) => total + item.quantity,
        0
      );
    },
    quantityOnHold() {
      return this.onHoldProductInventoryForSize.reduce(
        (total, item) => total + item.quantity,
        0
      );
    }
  },
  watch: {
    product(newProduct) {
      this.getSoldAndHoldInventoryItemsForProduct(newProduct);
    }
  },
  methods: {
    getSoldAndHoldInventoryItemsForProduct(product) {
      if (product) {
        this.error = false;
        this.loading = true;
        axios.get(route("api.products.orders.index", product)).then((response) => {
          this.onHoldInventoryQuoteItems = response.data.onHold;
          this.soldProductOrderItems = response.data.inventorySold;
          this.updateViewingOnHold();
        }).catch((error) => {
          this.error = true;
          console.error(error.message);
        }).finally(() => {
          this.loading = false;
        });
      } else {
        this.resetSoldAndHoldInventoryItems();
      }
    },
    resetSoldAndHoldInventoryItems() {
      this.onHoldInventoryQuoteItems = [];
      this.soldProductOrderItems = [];
    },
    updateViewingOnHold() {
      this.viewingOnHold = this.quantityOnHold > this.quantitySold;
    }
  }
};
function _sfc_ssrRender$1W(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_tab_container = vue.resolveComponent("tab-container");
  const _component_tab_link = vue.resolveComponent("tab-link");
  const _component_ErrorMessage = vue.resolveComponent("ErrorMessage");
  const _component_LoadingState = vue.resolveComponent("LoadingState");
  const _component_product_hold_item = vue.resolveComponent("product-hold-item");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_tab_container, { class: "px-0 py-0 uppercase tracking-wide" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_tab_link, {
          as: "button",
          current: $data.viewingOnHold,
          class: "px-2",
          onClick: ($event) => $data.viewingOnHold = true
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`On Hold<span class="badge badge-outline badge-sm ml-2"${_scopeId2}>${serverRenderer.ssrInterpolate($options.quantityOnHold)}</span>`);
            } else {
              return [
                vue.createTextVNode("On Hold"),
                vue.createVNode("span", { class: "badge badge-outline badge-sm ml-2" }, vue.toDisplayString($options.quantityOnHold), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_tab_link, {
          as: "button",
          class: "px-2",
          current: !$data.viewingOnHold,
          onClick: ($event) => $data.viewingOnHold = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Sold<span class="badge badge-outline badge-sm ml-2"${_scopeId2}>${serverRenderer.ssrInterpolate($options.quantitySold)}</span>`);
            } else {
              return [
                vue.createTextVNode("Sold"),
                vue.createVNode("span", { class: "badge badge-outline badge-sm ml-2" }, vue.toDisplayString($options.quantitySold), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_tab_link, {
            as: "button",
            current: $data.viewingOnHold,
            class: "px-2",
            onClick: ($event) => $data.viewingOnHold = true
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("On Hold"),
              vue.createVNode("span", { class: "badge badge-outline badge-sm ml-2" }, vue.toDisplayString($options.quantityOnHold), 1)
            ]),
            _: 1
          }, 8, ["current", "onClick"]),
          vue.createVNode(_component_tab_link, {
            as: "button",
            class: "px-2",
            current: !$data.viewingOnHold,
            onClick: ($event) => $data.viewingOnHold = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Sold"),
              vue.createVNode("span", { class: "badge badge-outline badge-sm ml-2" }, vue.toDisplayString($options.quantitySold), 1)
            ]),
            _: 1
          }, 8, ["current", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div>`);
  if ($data.error) {
    _push(serverRenderer.ssrRenderComponent(_component_ErrorMessage, null, null, _parent));
  } else if ($data.loading) {
    _push(serverRenderer.ssrRenderComponent(_component_LoadingState, { loading: "loading" }, null, _parent));
  } else if ($data.viewingOnHold) {
    _push(`<div class="py-4"><!--[-->`);
    serverRenderer.ssrRenderList($options.onHoldProductInventoryForSize, (item) => {
      _push(serverRenderer.ssrRenderComponent(_component_product_hold_item, {
        item,
        key: item.id
      }, null, _parent));
    });
    _push(`<!--]-->`);
    if (!$options.onHoldProductInventoryForSize.length) {
      _push(`<div><p class="text-gray-600 px-2">No items on hold.</p></div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  } else {
    _push(`<div class="py-4"><!--[-->`);
    serverRenderer.ssrRenderList($options.soldProductInventoryForSize, (item) => {
      _push(serverRenderer.ssrRenderComponent(_component_product_hold_item, {
        item,
        orderId: $props.orderId,
        key: item.id
      }, null, _parent));
    });
    _push(`<!--]-->`);
    if (!$options.soldProductInventoryForSize.length) {
      _push(`<div><p class="text-gray-600 px-2"> No items in uncompleted orders. </p></div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  }
  _push(`</div></div>`);
}
const _sfc_setup$1Y = _sfc_main$1Y.setup;
_sfc_main$1Y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/ProductHoldView.vue");
  return _sfc_setup$1Y ? _sfc_setup$1Y(props, ctx) : void 0;
};
var ProductHoldView = /* @__PURE__ */ _export_sfc(_sfc_main$1Y, [["ssrRender", _sfc_ssrRender$1W]]);
var ProductHoldView$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ProductHoldView
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1X = {};
function _sfc_ssrRender$1V(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "alert alert-info" }, _attrs))}><div class="flex-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="w-6 h-6 mx-2 stroke-current"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg><label>Loading...</label></div></div>`);
}
const _sfc_setup$1X = _sfc_main$1X.setup;
_sfc_main$1X.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Messages/Loading.vue");
  return _sfc_setup$1X ? _sfc_setup$1X(props, ctx) : void 0;
};
var Loading = /* @__PURE__ */ _export_sfc(_sfc_main$1X, [["ssrRender", _sfc_ssrRender$1V]]);
const _sfc_main$1W = {
  components: { ErrorMessage, Loading },
  props: {
    product: Object | Boolean,
    size: Object | Boolean
  },
  data() {
    return {
      loading: false,
      error: false,
      quantities: {
        inNursery: 0,
        availableForSale: 0,
        onHold: 0,
        ready: 0
      }
    };
  },
  mounted() {
    this.getQuantities();
  },
  watch: {
    product() {
      this.getQuantities();
    },
    size() {
      this.getQuantities();
    },
    quantities: {
      handler() {
        this.$emit("update", this.quantities);
      },
      deep: true
    }
  },
  methods: {
    getQuantities() {
      if (this.product && this.size) {
        this.error = false;
        this.loading = true;
        axios.get(
          route("api.inventory.quantities", [
            this.product.id,
            this.size.id
          ])
        ).then((response) => {
          this.quantities.inNursery = response.data.total;
          this.quantities.ready = response.data.ready;
          this.quantities.onHold = response.data.on_hold;
          this.quantities.availableForSale = response.data.available;
        }).catch((error) => {
          this.error = true;
          console.error(error.message);
        }).finally(() => {
          this.loading = false;
        });
      } else {
        this.resetQuantities();
      }
    },
    resetQuantities() {
      this.quantities.inNursery = 0;
      this.quantities.ready = 0;
      this.quantities.onHold = 0;
      this.quantities.availableForSale = 0;
    }
  }
};
function _sfc_ssrRender$1U(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ErrorMessage = vue.resolveComponent("ErrorMessage");
  const _component_Loading = vue.resolveComponent("Loading");
  const _component_jet_label = vue.resolveComponent("jet-label");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  if ($data.error) {
    _push(serverRenderer.ssrRenderComponent(_component_ErrorMessage, null, null, _parent));
  } else if ($data.loading) {
    _push(serverRenderer.ssrRenderComponent(_component_Loading, null, null, _parent));
  } else {
    _push(`<div class="flex flex-col items-end sm:text-right divide-y">`);
    _push(serverRenderer.ssrRenderComponent(_component_jet_label, {
      "data-tip": "The total amount of these items in inventory. They may be ready, but their ready date states not.",
      class: "py-2 mr-0 tooltip lg:tooltip-right",
      value: "Total In Nursery: " + $data.quantities.inNursery
    }, null, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_jet_label, {
      "data-tip": "Inventory that is ready to sell - inventory in orders that haven't been completed yet.",
      class: "py-2 mr-0 tooltip lg:tooltip-right",
      value: "Ready to sell: " + $data.quantities.availableForSale
    }, null, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_jet_label, {
      class: "py-2 mr-0",
      value: "On Hold: " + $data.quantities.onHold
    }, null, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_jet_label, {
      "data-tip": "The amount ready to sell - the amount of inventory in active quotes on hold.",
      class: "py-2 mr-0 font-bold text-base tooltip lg:tooltip-right",
      value: "Available For Sale: " + $data.quantities.availableForSale
    }, null, _parent));
    _push(`</div>`);
  }
  _push(`</div>`);
}
const _sfc_setup$1W = _sfc_main$1W.setup;
_sfc_main$1W.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/InventoryDetail.vue");
  return _sfc_setup$1W ? _sfc_setup$1W(props, ctx) : void 0;
};
var InventoryDetail$2 = /* @__PURE__ */ _export_sfc(_sfc_main$1W, [["ssrRender", _sfc_ssrRender$1U]]);
var InventoryDetail$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventoryDetail$2
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1V = {
  components: {
    JetConfirmationModal
  },
  props: {
    selectedProduct: {
      type: Object,
      required: false
    },
    quantity: {
      type: Number,
      required: false
    },
    quantityAvailable: {
      type: Number,
      required: false
    },
    show: {
      type: Boolean,
      required: true
    }
  },
  data() {
    return {
      confirmingQuantity: this.show
    };
  },
  watch: {
    show() {
      this.confirmingQuantity = this.show;
    }
  },
  emits: ["quantity-confirmed"],
  methods: {
    confirmed() {
      this.confirmingQuantity = false;
      this.$emit("quantity-confirmed");
    }
  }
};
function _sfc_ssrRender$1T(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, vue.mergeProps({
    show: $data.confirmingQuantity,
    onClose: ($event) => $data.confirmingQuantity = false
  }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Confirm Quantity `);
      } else {
        return [
          vue.createTextVNode(" Confirm Quantity ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      var _a, _b;
      if (_push2) {
        _push2(` The amount of ${serverRenderer.ssrInterpolate((_a = $props.selectedProduct) == null ? void 0 : _a.name)} available for sale is: ${serverRenderer.ssrInterpolate($props.quantityAvailable)}. Are you sure you want to add ${serverRenderer.ssrInterpolate($props.quantity)} to this order? `);
      } else {
        return [
          vue.createTextVNode(" The amount of " + vue.toDisplayString((_b = $props.selectedProduct) == null ? void 0 : _b.name) + " available for sale is: " + vue.toDisplayString($props.quantityAvailable) + ". Are you sure you want to add " + vue.toDisplayString($props.quantity) + " to this order? ", 1)
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.confirmingQuantity = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Nevermind Edit `);
            } else {
              return [
                vue.createTextVNode(" Nevermind Edit ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: "ml-2",
          onClick: $options.confirmed
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Yes, Confirm `);
            } else {
              return [
                vue.createTextVNode(" Yes, Confirm ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.confirmingQuantity = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Nevermind Edit ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_button, {
            class: "ml-2",
            onClick: $options.confirmed
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Yes, Confirm ")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1V = _sfc_main$1V.setup;
_sfc_main$1V.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/ItemConfirmQuantity.vue");
  return _sfc_setup$1V ? _sfc_setup$1V(props, ctx) : void 0;
};
var ItemConfirmQuantity = /* @__PURE__ */ _export_sfc(_sfc_main$1V, [["ssrRender", _sfc_ssrRender$1T]]);
var ItemConfirmQuantity$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ItemConfirmQuantity
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1U = {
  components: {
    Switch: vue$1.Switch,
    SwitchDescription: vue$1.SwitchDescription,
    SwitchGroup: vue$1.SwitchGroup,
    SwitchLabel: vue$1.SwitchLabel,
    JetActionMessage,
    JetDialogModal,
    PlusIcon: outline.PlusIcon,
    ProductHoldView,
    InventoryDetail: InventoryDetail$2,
    ItemConfirmQuantity
  },
  props: { order: Object },
  data() {
    var _a, _b;
    return {
      priceLevelId: (_b = (_a = this.$page.props.order) == null ? void 0 : _a.customer) == null ? void 0 : _b.customer_price_level_id,
      addAnother: true,
      products: this.$page.props.products,
      sizes: this.$page.props.sizes,
      selectedProduct: null,
      selectedSize: null,
      creatingOrderItem: false,
      availableForSale: 0,
      confirmingQuantity: false,
      confirmedQuantity: false,
      form: this.$inertia.form({
        _method: "POST",
        product_id: null,
        size_id: null,
        original_quantity: null,
        quantity: null,
        unit_price: null,
        no_discount: false
      })
    };
  },
  watch: {
    selectedProduct(product) {
      if (product) {
        this.form.product_id = product.id;
      } else {
        this.form.product_id = null;
      }
      this.getProductPrice();
    },
    "form.original_quantity"(value) {
      this.form.quantity = value;
    },
    selectedSize(size) {
      if (size) {
        this.form.size_id = size.id;
      } else {
        this.form.size_id = null;
      }
      this.getProductPrice();
    }
  },
  methods: {
    getProductPrice() {
      if (this.selectedProduct && this.selectedSize) {
        axios.get(
          route("api.product.prices", [
            this.selectedProduct.id,
            this.selectedSize.id
          ])
        ).then((response) => {
          let price = response.data.find(
            (price2) => price2.price_level_id == this.priceLevelId
          ).price;
          this.form.unit_price = price;
          return;
        });
      } else {
        this.form.unit_price = 0;
      }
    },
    updateQuantity(quantityData) {
      this.availableForSale = quantityData.availableForSale;
    },
    viewInventory(product) {
      this.showPopup(
        route("view.show", { id: product.id }),
        "View Inventory"
      );
    },
    saveAndClose() {
      this.addAnother = false;
      this.createOrderItem();
    },
    confirmed() {
      this.confirmingQuantity = false;
      this.confirmedQuantity = true;
      this.create();
    },
    createOrderItem() {
      if (this.form.quantity > this.availableForSale) {
        this.confirmingQuantity = true;
      } else {
        this.confirmed();
      }
    },
    create() {
      this.form.post(route("sales.order-items.store", this.order), {
        preserveScroll: true,
        preserveState: true,
        onSuccess: () => {
          this.form.reset();
          this.selectedSize = null;
          this.selectedProduct = null;
          if (this.addAnother == false) {
            this.creatingOrderItem = false;
          }
        }
      });
    }
  }
};
function _sfc_ssrRender$1S(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_PlusIcon = vue.resolveComponent("PlusIcon");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_InventoryDetail = vue.resolveComponent("InventoryDetail");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_product_hold_view = vue.resolveComponent("product-hold-view");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_ItemConfirmQuantity = vue.resolveComponent("ItemConfirmQuantity");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    type: "button",
    onClick: ($event) => $data.creatingOrderItem = true
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_PlusIcon, { class: "w-4 h-4 mr-2" }, null, _parent2, _scopeId));
        _push2(`New Order Item`);
      } else {
        return [
          vue.createVNode(_component_PlusIcon, { class: "w-4 h-4 mr-2" }),
          vue.createTextVNode("New Order Item")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    maxWidth: "4xl",
    show: $data.creatingOrderItem,
    onClose: ($event) => $data.creatingOrderItem = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Add a product or service to ${serverRenderer.ssrInterpolate($props.order.type)}.`);
      } else {
        return [
          vue.createTextVNode("Add a product or service to " + vue.toDisplayString($props.order.type) + ".", 1)
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          style: $data.selectedProduct ? null : { display: "none" },
          onClick: ($event) => $options.viewInventory($data.selectedProduct)
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`View Inventory`);
            } else {
              return [
                vue.createTextVNode("View Inventory")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.withDirectives(vue.createVNode(_component_jet_button, {
            onClick: ($event) => $options.viewInventory($data.selectedProduct)
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("View Inventory")
            ]),
            _: 1
          }, 8, ["onClick"]), [
            [vue.vShow, $data.selectedProduct]
          ])
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid md:grid-cols-6 gap-4"${_scopeId}><form class="md:col-span-4"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="grid gap-4 sm:grid-cols-2"${_scopeId}><div class="sm:col-span-2 min-w-0"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Product",
          items: $data.products,
          selectedItem: $data.selectedProduct,
          modelValue: $data.selectedProduct,
          "onUpdate:modelValue": ($event) => $data.selectedProduct = $event
        }, null, _parent2, _scopeId));
        if (!$data.form.product_id) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.product_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Size",
          items: $data.sizes,
          selectedItem: $data.selectedSize,
          modelValue: $data.selectedSize,
          "onUpdate:modelValue": ($event) => $data.selectedSize = $event
        }, null, _parent2, _scopeId));
        if (!$data.form.size_id) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.size_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="sm:col-span-1 flex items-center mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          id: "no_discount",
          modelValue: $data.form.no_discount,
          "onUpdate:modelValue": ($event) => $data.form.no_discount = $event,
          class: "mr-2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "no_discount" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Don&#39;t apply Discount?`);
            } else {
              return [
                vue.createTextVNode("Don't apply Discount?")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_InventoryDetail, {
          onUpdate: $options.updateQuantity,
          product: $data.selectedProduct,
          size: $data.selectedSize
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="grid gap-4 grid-cols-1 sm:grid-cols-3"${_scopeId}><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "original_quantity",
          value: "Quantity Ordered"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "original_quantity",
          type: "number",
          step: "1",
          class: "mt-1 block w-full",
          modelValue: $data.form.original_quantity,
          "onUpdate:modelValue": ($event) => $data.form.original_quantity = $event,
          required: ""
        }, null, _parent2, _scopeId));
        if (!$data.form.original_quantity) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.original_quantity,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "quantity",
          value: "Quantity Confirmed"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "quantity",
          type: "number",
          step: "1",
          class: "mt-1 block w-full",
          modelValue: $data.form.quantity,
          "onUpdate:modelValue": ($event) => $data.form.quantity = $event,
          required: ""
        }, null, _parent2, _scopeId));
        if (!$data.form.quantity) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.quantity,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "unit_price",
          value: "Unit Price"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "unit_price",
          type: "number",
          step: "0.01",
          class: "mt-1 block w-full",
          modelValue: $data.form.unit_price,
          "onUpdate:modelValue": ($event) => $data.form.unit_price = $event,
          required: ""
        }, null, _parent2, _scopeId));
        if (!$data.form.unit_price) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.unit_price,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div></form>`);
        _push2(serverRenderer.ssrRenderComponent(_component_product_hold_view, {
          class: "md:col-span-2",
          orderId: $props.order.id,
          product: $data.selectedProduct,
          size: $data.selectedSize
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid md:grid-cols-6 gap-4" }, [
            vue.createVNode("form", {
              onSubmit: vue.withModifiers($options.createOrderItem, ["prevent"]),
              onKeydown: vue.withKeys($options.createOrderItem, ["enter"]),
              class: "md:col-span-4"
            }, [
              vue.createVNode("div", { class: "grid gap-4" }, [
                vue.createVNode("div", { class: "grid gap-4 sm:grid-cols-2" }, [
                  vue.createVNode("div", { class: "sm:col-span-2 min-w-0" }, [
                    vue.createVNode(_component_select_box, {
                      labelValue: "Product",
                      items: $data.products,
                      selectedItem: $data.selectedProduct,
                      modelValue: $data.selectedProduct,
                      "onUpdate:modelValue": ($event) => $data.selectedProduct = $event
                    }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                    !$data.form.product_id ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                      key: 0,
                      message: $data.form.errors.product_id,
                      class: "mt-2"
                    }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                  ]),
                  vue.createVNode("div", { class: "sm:col-span-1" }, [
                    vue.createVNode(_component_select_box, {
                      labelValue: "Size",
                      items: $data.sizes,
                      selectedItem: $data.selectedSize,
                      modelValue: $data.selectedSize,
                      "onUpdate:modelValue": ($event) => $data.selectedSize = $event
                    }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                    !$data.form.size_id ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                      key: 0,
                      message: $data.form.errors.size_id,
                      class: "mt-2"
                    }, null, 8, ["message"])) : vue.createCommentVNode("", true),
                    vue.createVNode("div", { class: "sm:col-span-1 flex items-center mt-4" }, [
                      vue.createVNode(_component_jet_checkbox, {
                        id: "no_discount",
                        modelValue: $data.form.no_discount,
                        "onUpdate:modelValue": ($event) => $data.form.no_discount = $event,
                        class: "mr-2"
                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                      vue.createVNode(_component_jet_label, { for: "no_discount" }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Don't apply Discount?")
                        ]),
                        _: 1
                      })
                    ])
                  ]),
                  vue.createVNode(_component_InventoryDetail, {
                    onUpdate: $options.updateQuantity,
                    product: $data.selectedProduct,
                    size: $data.selectedSize
                  }, null, 8, ["onUpdate", "product", "size"])
                ]),
                vue.createVNode("div", { class: "grid gap-4 grid-cols-1 sm:grid-cols-3" }, [
                  vue.createVNode("div", { class: "sm:col-span-1" }, [
                    vue.createVNode(_component_jet_label, {
                      for: "original_quantity",
                      value: "Quantity Ordered"
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "original_quantity",
                      type: "number",
                      step: "1",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.original_quantity,
                      "onUpdate:modelValue": ($event) => $data.form.original_quantity = $event,
                      required: ""
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    !$data.form.original_quantity ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                      key: 0,
                      message: $data.form.errors.original_quantity,
                      class: "mt-2"
                    }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                  ]),
                  vue.createVNode("div", { class: "sm:col-span-1" }, [
                    vue.createVNode(_component_jet_label, {
                      for: "quantity",
                      value: "Quantity Confirmed"
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "quantity",
                      type: "number",
                      step: "1",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.quantity,
                      "onUpdate:modelValue": ($event) => $data.form.quantity = $event,
                      required: ""
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    !$data.form.quantity ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                      key: 0,
                      message: $data.form.errors.quantity,
                      class: "mt-2"
                    }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                  ]),
                  vue.createVNode("div", { class: "sm:col-span-1" }, [
                    vue.createVNode(_component_jet_label, {
                      for: "unit_price",
                      value: "Unit Price"
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "unit_price",
                      type: "number",
                      step: "0.01",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.unit_price,
                      "onUpdate:modelValue": ($event) => $data.form.unit_price = $event,
                      required: ""
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    !$data.form.unit_price ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                      key: 0,
                      message: $data.form.errors.unit_price,
                      class: "mt-2"
                    }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                  ])
                ])
              ])
            ], 40, ["onSubmit", "onKeydown"]),
            vue.createVNode(_component_product_hold_view, {
              class: "md:col-span-2",
              orderId: $props.order.id,
              product: $data.selectedProduct,
              size: $data.selectedSize
            }, null, 8, ["orderId", "product", "size"])
          ])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between items-center w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.creatingOrderItem = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.createOrderItem,
          class: [
            { "opacity-25": $data.form.processing },
            " mb-2 sm:mb-0 sm:mr-2"
          ],
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save and add another Item`);
            } else {
              return [
                vue.createTextVNode("Save and add another Item")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.saveAndClose,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save and Close`);
            } else {
              return [
                vue.createTextVNode("Save and Close")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between items-center w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.creatingOrderItem = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_button, {
                type: "submit",
                onClick: $options.createOrderItem,
                class: [
                  { "opacity-25": $data.form.processing },
                  " mb-2 sm:mb-0 sm:mr-2"
                ],
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Save and add another Item")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"]),
              vue.createVNode(_component_jet_button, {
                type: "submit",
                onClick: $options.saveAndClose,
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Save and Close")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_ItemConfirmQuantity, {
    selectedProduct: $data.selectedProduct,
    quantity: $data.form.quantity,
    quantityAvailable: $data.availableForSale,
    show: $data.confirmingQuantity,
    onQuantityConfirmed: $options.confirmed
  }, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$1U = _sfc_main$1U.setup;
_sfc_main$1U.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/ItemCreate.vue");
  return _sfc_setup$1U ? _sfc_setup$1U(props, ctx) : void 0;
};
var CreateOrderItem = /* @__PURE__ */ _export_sfc(_sfc_main$1U, [["ssrRender", _sfc_ssrRender$1S]]);
var ItemCreate = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateOrderItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1T = {};
function _sfc_ssrRender$1R(_ctx, _push, _parent, _attrs) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "relative md:flex md:space-x-6 py-4 px-4 items-center justify-between cursor-pointer border-b border-gray-50 last:border-transparent hover:border-black" }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div>`);
}
const _sfc_setup$1T = _sfc_main$1T.setup;
_sfc_main$1T.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Lists/LineItem.vue");
  return _sfc_setup$1T ? _sfc_setup$1T(props, ctx) : void 0;
};
var LineItem = /* @__PURE__ */ _export_sfc(_sfc_main$1T, [["ssrRender", _sfc_ssrRender$1R]]);
const _sfc_main$1S = {
  props: { size: { default: 4 } },
  components: {
    EditIcon: EditIcon__default["default"]
  }
};
function _sfc_ssrRender$1Q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_EditIcon = vue.resolveComponent("EditIcon");
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "hover:opacity-50 transition p-2" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_EditIcon, {
    class: ["w-" + $props.size, "h-" + $props.size]
  }, null, _parent));
  _push(`</button>`);
}
const _sfc_setup$1S = _sfc_main$1S.setup;
_sfc_main$1S.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Buttons/EditButton.vue");
  return _sfc_setup$1S ? _sfc_setup$1S(props, ctx) : void 0;
};
var EditButton = /* @__PURE__ */ _export_sfc(_sfc_main$1S, [["ssrRender", _sfc_ssrRender$1Q]]);
const _sfc_main$1R = {
  components: {
    Switch: vue$1.Switch,
    SwitchDescription: vue$1.SwitchDescription,
    SwitchGroup: vue$1.SwitchGroup,
    SwitchLabel: vue$1.SwitchLabel,
    JetDialogModal,
    JetActionMessage,
    EditButton,
    ProductHoldView,
    MoneyInput,
    InventoryDetail: InventoryDetail$2,
    ItemConfirmQuantity
  },
  props: {
    orderItem: Object,
    editing: { type: Boolean, default: false }
  },
  data() {
    var _a, _b;
    return {
      priceLevelId: (_b = (_a = this.$page.props.order) == null ? void 0 : _a.customer) == null ? void 0 : _b.customer_price_level_id,
      products: this.$page.props.products,
      sizes: this.$page.props.sizes,
      selectedProduct: this.$page.props.products.find(
        (product) => product.id == this.orderItem.product_id
      ),
      selectedSize: this.$page.props.sizes.find(
        (size) => size.id == this.orderItem.size_id
      ),
      updatingOrderItem: this.editing,
      confirmedQuantity: false,
      confirmingQuantity: false,
      availableForSale: 0,
      form: this.$inertia.form(this.orderItem)
    };
  },
  watch: {
    editing() {
      this.updatingOrderItem = this.editing;
    },
    selectedProduct() {
      if (this.selectedProduct) {
        this.form.product_id = this.selectedProduct.id;
      } else {
        this.form.product_id = null;
      }
      this.getProductPrice();
    },
    selectedSize(size) {
      if (size) {
        this.form.size_id = size.id;
      } else {
        this.form.size_id = null;
      }
      this.getProductPrice();
    }
  },
  methods: {
    getProductPrice() {
      if (this.selectedProduct && this.selectedSize) {
        axios.get(
          route("api.product.prices", [
            this.selectedProduct.id,
            this.selectedSize.id
          ])
        ).then((response) => {
          let price = response.data.find(
            (price2) => price2.price_level_id == this.priceLevelId
          ).price;
          this.form.unit_price = price;
        });
      } else {
        this.form.unit_price = 0;
      }
    },
    updateQuantity(quantityData) {
      this.availableForSale = quantityData.availableForSale;
    },
    viewInventory(product) {
      this.showPopup(
        route("view.show", { id: product.id }),
        "View Inventory"
      );
    },
    closeForm() {
      this.updatingOrderItem = false;
      this.$emit("close");
    },
    updateOrderItem() {
      if (this.form.quantity - this.orderItem.quantity > this.availableForSale) {
        this.confirmingQuantity = true;
      } else {
        this.confirmed();
      }
    },
    confirmed() {
      this.confirmingQuantity = false;
      this.confirmedQuantity = true;
      this.update();
    },
    update() {
      if (this.confirmedQuantity) {
        this.form.patch(
          route("sales.order-items.update", [
            this.orderItem.order_id,
            this.orderItem.id
          ]),
          {
            preserveScroll: true,
            preserveState: true,
            onSuccess: () => {
              this.confirmedQuantity = false;
              this.updatingOrderItem = false;
              this.$emit("close");
              this.$inertia.visit(
                route("orders.show", [this.orderItem.order_id]),
                {
                  preserveScroll: true
                }
              );
            }
          }
        );
      }
    }
  }
};
function _sfc_ssrRender$1P(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_edit_button = vue.resolveComponent("edit-button");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_InventoryDetail = vue.resolveComponent("InventoryDetail");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_money_input = vue.resolveComponent("money-input");
  const _component_product_hold_view = vue.resolveComponent("product-hold-view");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_ItemConfirmQuantity = vue.resolveComponent("ItemConfirmQuantity");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_edit_button, {
    type: "button",
    onClick: ($event) => $data.updatingOrderItem = true
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Edit`);
      } else {
        return [
          vue.createTextVNode("Edit")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.updatingOrderItem,
    maxWidth: "4xl",
    onClose: $options.closeForm
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Edit`);
      } else {
        return [
          vue.createTextVNode("Edit")
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          style: $data.selectedProduct ? null : { display: "none" },
          onClick: ($event) => $options.viewInventory($data.selectedProduct)
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`View Inventory`);
            } else {
              return [
                vue.createTextVNode("View Inventory")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.withDirectives(vue.createVNode(_component_jet_button, {
            onClick: vue.withModifiers(($event) => $options.viewInventory($data.selectedProduct), ["stop"])
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("View Inventory")
            ]),
            _: 1
          }, 8, ["onClick"]), [
            [vue.vShow, $data.selectedProduct]
          ])
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Edit Item`);
      } else {
        return [
          vue.createTextVNode(" Edit Item")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid md:grid-cols-6 gap-4"${_scopeId}><form class="md:col-span-4"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="grid gap-4 sm:grid-cols-2 items-center"${_scopeId}><div class="sm:col-span-2 min-w-0"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Product",
          items: $data.products,
          selectedItem: $data.selectedProduct,
          modelValue: $data.selectedProduct,
          "onUpdate:modelValue": ($event) => $data.selectedProduct = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.product_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Size",
          items: $data.sizes,
          selectedItem: $data.selectedSize,
          modelValue: $data.selectedSize,
          "onUpdate:modelValue": ($event) => $data.selectedSize = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.size_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`<div class="flex items-center mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          id: "no_discount",
          modelValue: $data.form.no_discount,
          "onUpdate:modelValue": ($event) => $data.form.no_discount = $event,
          class: "mr-2",
          checked: $data.form.no_discount
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "no_discount" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Don&#39;t apply Discount?`);
            } else {
              return [
                vue.createTextVNode("Don't apply Discount?")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_InventoryDetail, {
          onUpdate: $options.updateQuantity,
          product: $data.selectedProduct,
          size: $data.selectedSize
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="grid gap-4 grid-cols-1 sm:grid-cols-3"${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "original_quantity",
          value: "Quantity Ordered"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "original_quantity",
          type: "number",
          step: "1",
          class: "mt-1 block w-full",
          modelValue: $data.form.original_quantity,
          "onUpdate:modelValue": ($event) => $data.form.original_quantity = $event,
          required: ""
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.original_quantity,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "quantity",
          value: "Quantity Confirmed"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "quantity",
          type: "number",
          step: "1",
          class: "mt-1 block w-full",
          modelValue: $data.form.quantity,
          "onUpdate:modelValue": ($event) => $data.form.quantity = $event,
          modelModifiers: { number: true },
          required: ""
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.quantity,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "unit_price",
          value: "Unit Price"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_money_input, {
          id: "unit_price",
          class: "mt-1 block w-full",
          required: "",
          modelValue: $data.form.unit_price,
          "onUpdate:modelValue": ($event) => $data.form.unit_price = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.unit_price,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div></form>`);
        _push2(serverRenderer.ssrRenderComponent(_component_product_hold_view, {
          class: "md:col-span-2",
          orderId: $props.orderItem.order_id,
          product: $data.selectedProduct,
          size: $data.selectedSize
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid md:grid-cols-6 gap-4" }, [
            vue.createVNode("form", {
              onSubmit: vue.withModifiers($options.updateOrderItem, ["prevent"]),
              onKeydown: vue.withKeys($options.updateOrderItem, ["enter"]),
              class: "md:col-span-4"
            }, [
              vue.createVNode("div", { class: "grid gap-4" }, [
                vue.createVNode("div", { class: "grid gap-4 sm:grid-cols-2 items-center" }, [
                  vue.createVNode("div", { class: "sm:col-span-2 min-w-0" }, [
                    vue.createVNode(_component_select_box, {
                      labelValue: "Product",
                      items: $data.products,
                      selectedItem: $data.selectedProduct,
                      modelValue: $data.selectedProduct,
                      "onUpdate:modelValue": ($event) => $data.selectedProduct = $event
                    }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.product_id,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", null, [
                    vue.createVNode(_component_select_box, {
                      labelValue: "Size",
                      items: $data.sizes,
                      selectedItem: $data.selectedSize,
                      modelValue: $data.selectedSize,
                      "onUpdate:modelValue": ($event) => $data.selectedSize = $event
                    }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.size_id,
                      class: "mt-2"
                    }, null, 8, ["message"]),
                    vue.createVNode("div", { class: "flex items-center mt-4" }, [
                      vue.createVNode(_component_jet_checkbox, {
                        id: "no_discount",
                        modelValue: $data.form.no_discount,
                        "onUpdate:modelValue": ($event) => $data.form.no_discount = $event,
                        class: "mr-2",
                        checked: $data.form.no_discount
                      }, null, 8, ["modelValue", "onUpdate:modelValue", "checked"]),
                      vue.createVNode(_component_jet_label, { for: "no_discount" }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Don't apply Discount?")
                        ]),
                        _: 1
                      })
                    ])
                  ]),
                  vue.createVNode(_component_InventoryDetail, {
                    onUpdate: $options.updateQuantity,
                    product: $data.selectedProduct,
                    size: $data.selectedSize
                  }, null, 8, ["onUpdate", "product", "size"])
                ]),
                vue.createVNode("div", { class: "grid gap-4 grid-cols-1 sm:grid-cols-3" }, [
                  vue.createVNode("div", null, [
                    vue.createVNode(_component_jet_label, {
                      for: "original_quantity",
                      value: "Quantity Ordered"
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "original_quantity",
                      type: "number",
                      step: "1",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.original_quantity,
                      "onUpdate:modelValue": ($event) => $data.form.original_quantity = $event,
                      required: ""
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.original_quantity,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", null, [
                    vue.createVNode(_component_jet_label, {
                      for: "quantity",
                      value: "Quantity Confirmed"
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "quantity",
                      type: "number",
                      step: "1",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.quantity,
                      "onUpdate:modelValue": ($event) => $data.form.quantity = $event,
                      modelModifiers: { number: true },
                      required: ""
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.quantity,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", null, [
                    vue.createVNode(_component_jet_label, {
                      for: "unit_price",
                      value: "Unit Price"
                    }),
                    vue.createVNode(_component_money_input, {
                      id: "unit_price",
                      class: "mt-1 block w-full",
                      required: "",
                      modelValue: $data.form.unit_price,
                      "onUpdate:modelValue": ($event) => $data.form.unit_price = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.unit_price,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ])
              ])
            ], 40, ["onSubmit", "onKeydown"]),
            vue.createVNode(_component_product_hold_view, {
              class: "md:col-span-2",
              orderId: $props.orderItem.order_id,
              product: $data.selectedProduct,
              size: $data.selectedSize
            }, null, 8, ["orderId", "product", "size"])
          ])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: $options.closeForm
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.updateOrderItem,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Item`);
            } else {
              return [
                vue.createTextVNode("Save Item")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: $options.closeForm
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_button, {
              type: "submit",
              onClick: $options.updateOrderItem,
              class: { "opacity-25": $data.form.processing },
              disabled: $data.form.processing
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Save Item")
              ]),
              _: 1
            }, 8, ["onClick", "class", "disabled"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_ItemConfirmQuantity, {
    selectedProduct: $data.selectedProduct,
    quantity: $data.form.quantity,
    quantityAvailable: $data.availableForSale,
    show: $data.confirmingQuantity,
    onQuantityConfirmed: $options.confirmed
  }, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$1R = _sfc_main$1R.setup;
_sfc_main$1R.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/ItemEdit.vue");
  return _sfc_setup$1R ? _sfc_setup$1R(props, ctx) : void 0;
};
var EditOrderItem = /* @__PURE__ */ _export_sfc(_sfc_main$1R, [["ssrRender", _sfc_ssrRender$1P]]);
var ItemEdit = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": EditOrderItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1Q = {
  props: { size: { default: 4 } },
  components: {
    DeleteIcon: TrashIcon__default["default"]
  }
};
function _sfc_ssrRender$1O(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_DeleteIcon = vue.resolveComponent("DeleteIcon");
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "hover:opacity-50 transition p-2" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_DeleteIcon, {
    class: ["w-" + $props.size, "h-" + $props.size]
  }, null, _parent));
  _push(`</button>`);
}
const _sfc_setup$1Q = _sfc_main$1Q.setup;
_sfc_main$1Q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Buttons/DeleteButton.vue");
  return _sfc_setup$1Q ? _sfc_setup$1Q(props, ctx) : void 0;
};
var DeleteButton = /* @__PURE__ */ _export_sfc(_sfc_main$1Q, [["ssrRender", _sfc_ssrRender$1O]]);
const _sfc_main$1P = {
  props: ["item"],
  components: {
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton,
    DeleteButton
  },
  data() {
    return {
      confirmingOrderItemDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmOrderItemDeletion() {
      this.confirmingOrderItemDeletion = true;
    },
    deleteOrderItem() {
      this.form.delete(
        route("sales.order-items.destroy", [
          this.item.order_id,
          this.item
        ]),
        {
          errorBag: "deleteOrderItem",
          preserveState: false
        }
      );
    }
  }
};
function _sfc_ssrRender$1N(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_DeleteButton = vue.resolveComponent("DeleteButton");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_DeleteButton, {
    type: "button",
    onClick: $options.confirmOrderItemDeletion
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.confirmingOrderItemDeletion,
    onClose: ($event) => $data.confirmingOrderItemDeletion = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Remove item from ${serverRenderer.ssrInterpolate($props.item.sale_type)}`);
      } else {
        return [
          vue.createTextVNode(" Remove item from " + vue.toDisplayString($props.item.sale_type), 1)
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you want to delete this item? ${serverRenderer.ssrInterpolate($props.item.sale_type == "order" ? "This will add all matched inventory for this item back to inventory." : "")} This action cannot be undone. `);
      } else {
        return [
          vue.createTextVNode(" Are you sure you want to delete this item? " + vue.toDisplayString($props.item.sale_type == "order" ? "This will add all matched inventory for this item back to inventory." : "") + " This action cannot be undone. ", 1)
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.confirmingOrderItemDeletion = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.form.processing }],
          onClick: $options.deleteOrderItem,
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Remove Order Item `);
            } else {
              return [
                vue.createTextVNode(" Remove Order Item ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.confirmingOrderItemDeletion = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.form.processing }],
            onClick: $options.deleteOrderItem,
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Remove Order Item ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$1P = _sfc_main$1P.setup;
_sfc_main$1P.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/ItemDelete.vue");
  return _sfc_setup$1P ? _sfc_setup$1P(props, ctx) : void 0;
};
var DeleteOrderItem = /* @__PURE__ */ _export_sfc(_sfc_main$1P, [["ssrRender", _sfc_ssrRender$1N]]);
var ItemDelete = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteOrderItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1O = {
  components: {
    Check: Check__default["default"],
    LineItem,
    EditOrderItem,
    DeleteOrderItem
  },
  props: {
    item: Object,
    itemSelected: Boolean
  },
  data() {
    return {
      editing: false,
      selected: this.itemSelected,
      form: this.$inertia.form(this.item)
    };
  },
  watch: {
    itemSelected() {
      this.selected = this.itemSelected;
    }
  },
  methods: {
    updateItem() {
      this.form.patch(
        route("sales.order-items.update", [
          this.item.order_id,
          this.item.id
        ])
      );
    }
  }
};
function _sfc_ssrRender$1M(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_LineItem = vue.resolveComponent("LineItem");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_DeleteOrderItem = vue.resolveComponent("DeleteOrderItem");
  const _component_edit_order_item = vue.resolveComponent("edit-order-item");
  _push(serverRenderer.ssrRenderComponent(_component_LineItem, vue.mergeProps({
    onClick: ($event) => $data.editing = true
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex items-center w-full md:w-auto"${_scopeId}><div class="flex items-center h-full hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          class: "sr-only",
          for: "item-selected" + $data.form.id
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Select`);
            } else {
              return [
                vue.createTextVNode("Select")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          id: "item-selected" + $data.form.id,
          onChange: ($event) => _ctx.$emit("selected"),
          value: $data.form.id,
          modelValue: $data.selected,
          "onUpdate:modelValue": ($event) => $data.selected = $event,
          checked: $data.selected
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="w-full md:w-auto"${_scopeId}><div title="Product Name" class="card-title mb-2"${_scopeId}>${serverRenderer.ssrInterpolate($data.form.product_name)}</div><div class="flex items-end flex-row-reverse md:flex-row md:-ml-2 flex-wrap w-full md:w-auto"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_DeleteOrderItem, { item: $props.item }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_edit_order_item, {
          onClose: ($event) => $data.editing = false,
          editing: $data.editing,
          title: "Edit",
          orderItem: $props.item
        }, null, _parent2, _scopeId));
        _push2(`<div class="md:px-2 flex items-center py-1 mr-auto"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          class: "px-0 pr-2 py-0 text-gray-700 uppercase tracking-wide",
          for: "no_discount" + $data.form.id
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`No Discount `);
            } else {
              return [
                vue.createTextVNode("No Discount ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          id: "no_discount" + $data.form.id,
          onChange: $options.updateItem,
          modelValue: $data.form.no_discount,
          "onUpdate:modelValue": ($event) => $data.form.no_discount = $event,
          color: "gray",
          checked: $data.form.no_discount
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div></div><div class="flex flex-row-reverse justify-between w-full md:w-auto md:flex-col md:items-end pl-10 md:pl-0 md:text-right"${_scopeId}><div title="Line Total" class="text-lg"${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.formatMoney($data.form.line_total))}</div><div class="flex items-center md:items-end md:justify-end flex-wrap"${_scopeId}><div class="text-sm text-gray-500 tracking-wider uppercase" title="Product Size"${_scopeId}>${serverRenderer.ssrInterpolate($data.form.quantity)} x ${serverRenderer.ssrInterpolate(_ctx.formatMoney($data.form.unit_price))}</div>`);
        if ($data.form.size) {
          _push2(`<div class="pl-2 text-sm text-gray-500 tracking-wider uppercase" title="Size"${_scopeId}> Size: ${serverRenderer.ssrInterpolate($data.form.size_name)}</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex items-center w-full md:w-auto" }, [
            vue.createVNode("div", {
              onClick: vue.withModifiers(() => {
              }, ["stop"]),
              class: "flex items-center h-full hidden"
            }, [
              vue.createVNode(_component_jet_label, {
                class: "sr-only",
                for: "item-selected" + $data.form.id
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Select")
                ]),
                _: 1
              }, 8, ["for"]),
              vue.createVNode(_component_jet_checkbox, {
                id: "item-selected" + $data.form.id,
                onChange: ($event) => _ctx.$emit("selected"),
                value: $data.form.id,
                modelValue: $data.selected,
                "onUpdate:modelValue": ($event) => $data.selected = $event,
                checked: $data.selected
              }, null, 8, ["id", "onChange", "value", "modelValue", "onUpdate:modelValue", "checked"])
            ], 8, ["onClick"]),
            vue.createVNode("div", { class: "w-full md:w-auto" }, [
              vue.createVNode("div", {
                title: "Product Name",
                class: "card-title mb-2"
              }, vue.toDisplayString($data.form.product_name), 1),
              vue.createVNode("div", { class: "flex items-end flex-row-reverse md:flex-row md:-ml-2 flex-wrap w-full md:w-auto" }, [
                vue.createVNode(_component_DeleteOrderItem, { item: $props.item }, null, 8, ["item"]),
                vue.createVNode(_component_edit_order_item, {
                  onClose: ($event) => $data.editing = false,
                  editing: $data.editing,
                  title: "Edit",
                  orderItem: $props.item
                }, null, 8, ["onClose", "editing", "orderItem"]),
                vue.createVNode("div", {
                  onClick: vue.withModifiers(() => {
                  }, ["stop"]),
                  onHover: vue.withModifiers(() => {
                  }, ["stop"]),
                  class: "md:px-2 flex items-center py-1 mr-auto"
                }, [
                  vue.createVNode(_component_jet_label, {
                    class: "px-0 pr-2 py-0 text-gray-700 uppercase tracking-wide",
                    for: "no_discount" + $data.form.id
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("No Discount ")
                    ]),
                    _: 1
                  }, 8, ["for"]),
                  vue.createVNode(_component_jet_checkbox, {
                    id: "no_discount" + $data.form.id,
                    onChange: $options.updateItem,
                    modelValue: $data.form.no_discount,
                    "onUpdate:modelValue": ($event) => $data.form.no_discount = $event,
                    color: "gray",
                    checked: $data.form.no_discount
                  }, null, 8, ["id", "onChange", "modelValue", "onUpdate:modelValue", "checked"])
                ], 40, ["onClick", "onHover"])
              ])
            ])
          ]),
          vue.createVNode("div", { class: "flex flex-row-reverse justify-between w-full md:w-auto md:flex-col md:items-end pl-10 md:pl-0 md:text-right" }, [
            vue.createVNode("div", {
              title: "Line Total",
              class: "text-lg"
            }, vue.toDisplayString(_ctx.formatMoney($data.form.line_total)), 1),
            vue.createVNode("div", { class: "flex items-center md:items-end md:justify-end flex-wrap" }, [
              vue.createVNode("div", {
                class: "text-sm text-gray-500 tracking-wider uppercase",
                title: "Product Size"
              }, vue.toDisplayString($data.form.quantity) + " x " + vue.toDisplayString(_ctx.formatMoney($data.form.unit_price)), 1),
              $data.form.size ? (vue.openBlock(), vue.createBlock("div", {
                key: 0,
                class: "pl-2 text-sm text-gray-500 tracking-wider uppercase",
                title: "Size"
              }, " Size: " + vue.toDisplayString($data.form.size_name), 1)) : vue.createCommentVNode("", true)
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1O = _sfc_main$1O.setup;
_sfc_main$1O.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/ItemLine.vue");
  return _sfc_setup$1O ? _sfc_setup$1O(props, ctx) : void 0;
};
var OrderLineItem = /* @__PURE__ */ _export_sfc(_sfc_main$1O, [["ssrRender", _sfc_ssrRender$1M]]);
var ItemLine = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": OrderLineItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1N = {
  props: { order: Object },
  components: {
    JetCheckbox: JetCheckBox,
    JetLabel,
    JetButton,
    JetSectionTitle: SectionTitle,
    CreateOrderItem,
    OrderLineItem
  },
  data() {
    return {
      allSelected: false,
      selected: [],
      items: this.$page.props.items
    };
  },
  watch: {
    "$page.props.items"(items) {
      this.items = items;
    },
    selected() {
      let selectedLength = this.selected.length;
      if (selectedLength === 0) {
        this.allSelected = false;
      }
    }
  },
  methods: {
    toggleSelected(item) {
      if (this.selected.includes(item.id)) {
        this.selected = this.selected.filter((id) => id != item.id);
      } else {
        this.selected.push(item.id);
      }
    },
    isItemSelected(item) {
      return this.selected.includes(item.id);
    },
    toggleAllSelected() {
      if (this.allSelected) {
        this.selected = this.items.map((item) => item.id);
      } else {
        this.selected = [];
      }
    }
  }
};
function _sfc_ssrRender$1L(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_create_order_item = vue.resolveComponent("create-order-item");
  const _component_order_line_item = vue.resolveComponent("order-line-item");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Products and Services`);
      } else {
        return [
          vue.createTextVNode("Products and Services")
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_order_item, {
          class: "ml-auto flex justify-end",
          order: $props.order
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_order_item, {
            class: "ml-auto flex justify-end",
            order: $props.order
          }, null, 8, ["order"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class=""><!--[-->`);
  serverRenderer.ssrRenderList($data.items, (item) => {
    _push(serverRenderer.ssrRenderComponent(_component_order_line_item, {
      onSelected: ($event) => $options.toggleSelected(item),
      key: item.id,
      item,
      itemSelected: $options.isItemSelected(item)
    }, null, _parent));
  });
  _push(`<!--]-->`);
  if (!$data.items.length) {
    _push(`<div class="text-center text-gray-500 p-4"> No items added. </div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div></div>`);
}
const _sfc_setup$1N = _sfc_main$1N.setup;
_sfc_main$1N.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/Items.vue");
  return _sfc_setup$1N ? _sfc_setup$1N(props, ctx) : void 0;
};
var OrderItems = /* @__PURE__ */ _export_sfc(_sfc_main$1N, [["ssrRender", _sfc_ssrRender$1L]]);
var Items = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": OrderItems
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1M = {
  props: ["discount"],
  components: {
    JetConfirmationModal,
    JetDangerButton,
    DeleteButton
  },
  data() {
    return {
      confirmingDiscountDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmDiscountDeletion() {
      this.confirmingDiscountDeletion = true;
    },
    deleteDiscount() {
      this.form.delete(
        route("sales.discounts.destroy", [
          this.discount.order_id,
          this.discount.id
        ]),
        {
          errorBag: "deleteDiscount",
          preserveState: false
        }
      );
    }
  }
};
function _sfc_ssrRender$1K(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
    type: "button",
    onClick: $options.confirmDiscountDeletion
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Remove Discount`);
      } else {
        return [
          vue.createTextVNode("Remove Discount")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.confirmingDiscountDeletion,
    onClose: ($event) => $data.confirmingDiscountDeletion = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Discount `);
      } else {
        return [
          vue.createTextVNode(" Delete Discount ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you want to delete this discount from the ${serverRenderer.ssrInterpolate($props.discount.sale_type)}? This action cannot be undone. `);
      } else {
        return [
          vue.createTextVNode(" Are you sure you want to delete this discount from the " + vue.toDisplayString($props.discount.sale_type) + "? This action cannot be undone. ", 1)
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.confirmingDiscountDeletion = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.form.processing }],
          onClick: $options.deleteDiscount,
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Discount `);
            } else {
              return [
                vue.createTextVNode(" Delete Discount ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.confirmingDiscountDeletion = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.form.processing }],
            onClick: $options.deleteDiscount,
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Delete Discount ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$1M = _sfc_main$1M.setup;
_sfc_main$1M.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/DiscountDelete.vue");
  return _sfc_setup$1M ? _sfc_setup$1M(props, ctx) : void 0;
};
var DiscountDelete = /* @__PURE__ */ _export_sfc(_sfc_main$1M, [["ssrRender", _sfc_ssrRender$1K]]);
var DiscountDelete$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DiscountDelete
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1L = {
  props: { discount: Object, show: Boolean },
  components: {
    JetDialogModal,
    DiscountDelete
  },
  data() {
    return {
      editingDiscount: this.show,
      updatedDiscount: this.$inertia.form({
        _method: "POST",
        description: this.discount.description,
        discount_percentage: this.discount.discount_percentage,
        discount_amount: this.discount.discount_amount,
        is_percentage: this.discount.discount_percentage ? true : false
      })
    };
  },
  watch: {
    show() {
      this.editingDiscount = this.show;
    },
    "updatedDiscount.is_percentage": function(newVal) {
      if (newVal) {
        this.updatedDiscount.discount_amount = null;
      } else {
        this.updatedDiscount.discount_percentage = null;
      }
    }
  },
  methods: {
    createDiscount() {
      this.updatedDiscount.patch(
        route("sales.discounts.update", [
          this.discount.order_id,
          this.discount
        ]),
        {
          preserveScroll: true,
          preserveState: true,
          onSuccess: () => {
            this.close();
          }
        }
      );
    },
    close() {
      this.$emit("close");
      this.editingDiscount = false;
    }
  }
};
function _sfc_ssrRender$1J(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_percentage_input = vue.resolveComponent("percentage-input");
  const _component_money_input = vue.resolveComponent("money-input");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_discount_delete = vue.resolveComponent("discount-delete");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    maxWidth: "3xl",
    show: $data.editingDiscount,
    onClose: $options.close
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Edit Discount`);
      } else {
        return [
          vue.createTextVNode("Edit Discount")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid grid-cols-6 gap-4"${_scopeId}><form class="col-span-6 grid gap-4 md:grid-cols-5 items-start"${_scopeId}><div class="grid md:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "description" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Description`);
            } else {
              return [
                vue.createTextVNode("Description")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          required: "",
          modelValue: $data.updatedDiscount.description,
          "onUpdate:modelValue": ($event) => $data.updatedDiscount.description = $event,
          id: "description"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedDiscount.errors.description
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="grid md:col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Percentage Discount?`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
                modelValue: $data.updatedDiscount.is_percentage,
                "onUpdate:modelValue": ($event) => $data.updatedDiscount.is_percentage = $event,
                checked: $data.updatedDiscount.is_percentage,
                class: "ml-2"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Percentage`);
                  } else {
                    return [
                      vue.createTextVNode("Percentage")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createTextVNode("Percentage Discount?"),
                vue.createVNode(_component_jet_checkbox, {
                  modelValue: $data.updatedDiscount.is_percentage,
                  "onUpdate:modelValue": ($event) => $data.updatedDiscount.is_percentage = $event,
                  checked: $data.updatedDiscount.is_percentage,
                  class: "ml-2"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Percentage")
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "checked"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div style="${serverRenderer.ssrRenderStyle($data.updatedDiscount.is_percentage ? null : { display: "none" })}" class="grid"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "percentage" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Percentage %`);
            } else {
              return [
                vue.createTextVNode("Percentage %")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_percentage_input, {
          id: "percentage",
          modelValue: $data.updatedDiscount.discount_percentage,
          "onUpdate:modelValue": ($event) => $data.updatedDiscount.discount_percentage = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          style: $data.updatedDiscount.isDirty && $data.updatedDiscount.is_percentage ? null : { display: "none" },
          message: "Make sure to update the discount description if you change this."
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedDiscount.errors.discount_percentage
        }, null, _parent2, _scopeId));
        _push2(`</div><div style="${serverRenderer.ssrRenderStyle(!$data.updatedDiscount.is_percentage ? null : { display: "none" })}" class="grid"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "amount" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Discount Amount`);
            } else {
              return [
                vue.createTextVNode("Discount Amount")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_money_input, {
          id: "amount",
          modelValue: $data.updatedDiscount.discount_amount,
          "onUpdate:modelValue": ($event) => $data.updatedDiscount.discount_amount = $event
        }, null, _parent2, _scopeId));
        _push2(`</div></div></form></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid grid-cols-6 gap-4" }, [
            vue.createVNode("form", {
              onSubmit: vue.withModifiers($options.createDiscount, ["prevent"]),
              onKeydown: vue.withKeys($options.createDiscount, ["enter"]),
              class: "col-span-6 grid gap-4 md:grid-cols-5 items-start"
            }, [
              vue.createVNode("div", { class: "grid md:col-span-3" }, [
                vue.createVNode(_component_jet_label, { for: "description" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Description")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_text_area_input, {
                  required: "",
                  modelValue: $data.updatedDiscount.description,
                  "onUpdate:modelValue": ($event) => $data.updatedDiscount.description = $event,
                  id: "description"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.updatedDiscount.errors.description
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "grid md:col-span-2" }, [
                vue.createVNode(_component_jet_label, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Percentage Discount?"),
                    vue.createVNode(_component_jet_checkbox, {
                      modelValue: $data.updatedDiscount.is_percentage,
                      "onUpdate:modelValue": ($event) => $data.updatedDiscount.is_percentage = $event,
                      checked: $data.updatedDiscount.is_percentage,
                      class: "ml-2"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Percentage")
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue", "checked"])
                  ]),
                  _: 1
                }),
                vue.withDirectives(vue.createVNode("div", { class: "grid" }, [
                  vue.createVNode(_component_jet_label, { for: "percentage" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Percentage %")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_percentage_input, {
                    id: "percentage",
                    modelValue: $data.updatedDiscount.discount_percentage,
                    "onUpdate:modelValue": ($event) => $data.updatedDiscount.discount_percentage = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.withDirectives(vue.createVNode(_component_jet_input_error, { message: "Make sure to update the discount description if you change this." }, null, 512), [
                    [
                      vue.vShow,
                      $data.updatedDiscount.isDirty && $data.updatedDiscount.is_percentage
                    ]
                  ]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.updatedDiscount.errors.discount_percentage
                  }, null, 8, ["message"])
                ], 512), [
                  [vue.vShow, $data.updatedDiscount.is_percentage]
                ]),
                vue.withDirectives(vue.createVNode("div", { class: "grid" }, [
                  vue.createVNode(_component_jet_label, { for: "amount" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Discount Amount")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_money_input, {
                    id: "amount",
                    modelValue: $data.updatedDiscount.discount_amount,
                    "onUpdate:modelValue": ($event) => $data.updatedDiscount.discount_amount = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ], 512), [
                  [vue.vShow, !$data.updatedDiscount.is_percentage]
                ])
              ])
            ], 40, ["onSubmit", "onKeydown"])
          ])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="space-y-4 sm:space-y-0 sm:flex sm:justify-between items-center w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: $options.close
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div class="sm:flex items-center space-y-4 sm:space-y-0"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_discount_delete, {
          class: "sm:mr-2 block",
          discount: $props.discount
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.createDiscount,
          class: {
            "opacity-25": $data.updatedDiscount.processing
          },
          disabled: $data.updatedDiscount.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Discount`);
            } else {
              return [
                vue.createTextVNode("Save Discount")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "space-y-4 sm:space-y-0 sm:flex sm:justify-between items-center w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: $options.close
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode("div", { class: "sm:flex items-center space-y-4 sm:space-y-0" }, [
              vue.createVNode(_component_discount_delete, {
                class: "sm:mr-2 block",
                discount: $props.discount
              }, null, 8, ["discount"]),
              vue.createVNode(_component_jet_button, {
                type: "submit",
                onClick: $options.createDiscount,
                class: {
                  "opacity-25": $data.updatedDiscount.processing
                },
                disabled: $data.updatedDiscount.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Save Discount")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$1L = _sfc_main$1L.setup;
_sfc_main$1L.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/DiscountEdit.vue");
  return _sfc_setup$1L ? _sfc_setup$1L(props, ctx) : void 0;
};
var EditDiscountItem = /* @__PURE__ */ _export_sfc(_sfc_main$1L, [["ssrRender", _sfc_ssrRender$1J]]);
var DiscountEdit = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": EditDiscountItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1K = {
  components: {
    LineItem,
    EditDiscountItem
  },
  props: {
    discount: {
      type: Object,
      required: true
    }
  },
  data() {
    return {
      editing: false,
      updatedDiscount: this.$inertia.form(this.discount)
    };
  },
  watch: {
    discount() {
      this.updatedDiscount = this.$inertia.form(this.discount);
    }
  },
  methods: {
    updateItem() {
      this.updatedDiscount.patch(
        route("sales.discounts.update", [
          this.discount.order_id,
          this.discount.id
        ])
      );
    }
  }
};
function _sfc_ssrRender$1I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_LineItem = vue.resolveComponent("LineItem");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_edit_discount_item = vue.resolveComponent("edit-discount-item");
  _push(serverRenderer.ssrRenderComponent(_component_LineItem, vue.mergeProps({
    onClick: ($event) => $data.editing = true
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex items-center w-full md:w-auto"${_scopeId}><div class="w-full md:w-auto"${_scopeId}><div title="Discount Description" class="card-title capitalize mb-2"${_scopeId}>${serverRenderer.ssrInterpolate($data.updatedDiscount.description)}</div><div class="flex items-center h-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "discount_applied" + $props.discount.id,
          class: "px-0 text-gray-700 uppercase tracking-wide"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Discount Applied`);
            } else {
              return [
                vue.createTextVNode("Discount Applied")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          class: "mx-1 ml-2 text-sm text-gray-500 tracking-wider uppercase",
          id: "discount_applied" + $props.discount.id,
          onChange: $options.updateItem,
          modelValue: $data.updatedDiscount.discount_applied,
          "onUpdate:modelValue": ($event) => $data.updatedDiscount.discount_applied = $event,
          checked: $data.updatedDiscount.discount_applied
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_edit_discount_item, {
          onClose: ($event) => $data.editing = false,
          show: $data.editing,
          discount: $props.discount
        }, null, _parent2, _scopeId));
        _push2(`<div title="Discount Total" class="${serverRenderer.ssrRenderClass([!$data.updatedDiscount.discount_applied ? "line-through" : "", "text-lg"])}"${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.formatMoney($data.updatedDiscount.discount_total))}</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex items-center w-full md:w-auto" }, [
            vue.createVNode("div", { class: "w-full md:w-auto" }, [
              vue.createVNode("div", {
                title: "Discount Description",
                class: "card-title capitalize mb-2"
              }, vue.toDisplayString($data.updatedDiscount.description), 1),
              vue.createVNode("div", {
                onClick: vue.withModifiers(() => {
                }, ["stop"]),
                class: "flex items-center h-full"
              }, [
                vue.createVNode(_component_jet_label, {
                  for: "discount_applied" + $props.discount.id,
                  class: "px-0 text-gray-700 uppercase tracking-wide"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Discount Applied")
                  ]),
                  _: 1
                }, 8, ["for"]),
                vue.createVNode(_component_jet_checkbox, {
                  class: "mx-1 ml-2 text-sm text-gray-500 tracking-wider uppercase",
                  id: "discount_applied" + $props.discount.id,
                  onChange: $options.updateItem,
                  modelValue: $data.updatedDiscount.discount_applied,
                  "onUpdate:modelValue": ($event) => $data.updatedDiscount.discount_applied = $event,
                  checked: $data.updatedDiscount.discount_applied
                }, null, 8, ["id", "onChange", "modelValue", "onUpdate:modelValue", "checked"])
              ], 8, ["onClick"])
            ])
          ]),
          vue.createVNode(_component_edit_discount_item, {
            onClose: ($event) => $data.editing = false,
            show: $data.editing,
            discount: $props.discount
          }, null, 8, ["onClose", "show", "discount"]),
          vue.createVNode("div", {
            title: "Discount Total",
            class: ["text-lg", !$data.updatedDiscount.discount_applied ? "line-through" : ""]
          }, vue.toDisplayString(_ctx.formatMoney($data.updatedDiscount.discount_total)), 3)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1K = _sfc_main$1K.setup;
_sfc_main$1K.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/DiscountItem.vue");
  return _sfc_setup$1K ? _sfc_setup$1K(props, ctx) : void 0;
};
var DiscountItem = /* @__PURE__ */ _export_sfc(_sfc_main$1K, [["ssrRender", _sfc_ssrRender$1I]]);
var DiscountItem$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DiscountItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1J = {
  props: { order: Object },
  components: {
    JetDialogModal,
    PlusIcon: outline.PlusIcon
  },
  data() {
    return {
      creatingDiscount: false,
      discount: this.$inertia.form({
        _method: "POST",
        description: null,
        discount_percentage: null,
        discount_amount: null,
        is_percentage: false
      })
    };
  },
  watch: {
    "discount.is_percentage": function(newVal) {
      if (newVal) {
        this.discount.discount_amount = null;
      } else {
        this.discount.discount_percentage = null;
      }
    }
  },
  methods: {
    createDiscount() {
      this.discount.post(route("sales.discounts.store", this.order), {
        preserveScroll: true,
        preserveState: true,
        onSuccess: () => {
          this.$emit("discount-created", this.discount);
          this.creatingDiscount = false;
          this.discount.reset();
        }
      });
    }
  }
};
function _sfc_ssrRender$1H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_PlusIcon = vue.resolveComponent("PlusIcon");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_percentage_input = vue.resolveComponent("percentage-input");
  const _component_money_input = vue.resolveComponent("money-input");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    type: "button",
    class: "btn-warning",
    onClick: ($event) => $data.creatingDiscount = true
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_PlusIcon, { class: "w-4 h-4 mr-2" }, null, _parent2, _scopeId));
        _push2(`New Discount`);
      } else {
        return [
          vue.createVNode(_component_PlusIcon, { class: "w-4 h-4 mr-2" }),
          vue.createTextVNode("New Discount")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    maxWidth: "3xl",
    show: $data.creatingDiscount,
    onClose: ($event) => $data.creatingDiscount = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Add a discount to apply to this ${serverRenderer.ssrInterpolate($props.order.type)}.`);
      } else {
        return [
          vue.createTextVNode("Add a discount to apply to this " + vue.toDisplayString($props.order.type) + ".", 1)
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid grid-cols-6 gap-4"${_scopeId}><form class="col-span-6 grid gap-4 grid-cols-5 items-start"${_scopeId}><div class="grid gap-2 col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "description" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Discount Description`);
            } else {
              return [
                vue.createTextVNode("Discount Description")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          required: "",
          modelValue: $data.discount.description,
          "onUpdate:modelValue": ($event) => $data.discount.description = $event,
          id: "description"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.discount.errors.description
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="grid gap-2 col-span-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Percentage Discount?`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
                modelValue: $data.discount.is_percentage,
                "onUpdate:modelValue": ($event) => $data.discount.is_percentage = $event,
                class: "ml-2"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Percentage`);
                  } else {
                    return [
                      vue.createTextVNode("Percentage")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createTextVNode("Percentage Discount?"),
                vue.createVNode(_component_jet_checkbox, {
                  modelValue: $data.discount.is_percentage,
                  "onUpdate:modelValue": ($event) => $data.discount.is_percentage = $event,
                  class: "ml-2"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Percentage")
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div style="${serverRenderer.ssrRenderStyle($data.discount.is_percentage ? null : { display: "none" })}" class="grid gap-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "percentage" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Percentage %`);
            } else {
              return [
                vue.createTextVNode("Percentage %")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_percentage_input, {
          id: "percentage",
          modelValue: $data.discount.discount_percentage,
          "onUpdate:modelValue": ($event) => $data.discount.discount_percentage = $event
        }, null, _parent2, _scopeId));
        _push2(`</div><div style="${serverRenderer.ssrRenderStyle(!$data.discount.is_percentage ? null : { display: "none" })}" class="grid gap-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "amount" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Discount Amount`);
            } else {
              return [
                vue.createTextVNode("Discount Amount")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_money_input, {
          id: "amount",
          modelValue: $data.discount.discount_amount,
          "onUpdate:modelValue": ($event) => $data.discount.discount_amount = $event
        }, null, _parent2, _scopeId));
        _push2(`</div></div></form></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid grid-cols-6 gap-4" }, [
            vue.createVNode("form", {
              onSubmit: vue.withModifiers($options.createDiscount, ["prevent"]),
              onKeydown: vue.withKeys($options.createDiscount, ["enter"]),
              class: "col-span-6 grid gap-4 grid-cols-5 items-start"
            }, [
              vue.createVNode("div", { class: "grid gap-2 col-span-3" }, [
                vue.createVNode(_component_jet_label, { for: "description" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Discount Description")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_text_area_input, {
                  required: "",
                  modelValue: $data.discount.description,
                  "onUpdate:modelValue": ($event) => $data.discount.description = $event,
                  id: "description"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.discount.errors.description
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "grid gap-2 col-span-2" }, [
                vue.createVNode(_component_jet_label, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Percentage Discount?"),
                    vue.createVNode(_component_jet_checkbox, {
                      modelValue: $data.discount.is_percentage,
                      "onUpdate:modelValue": ($event) => $data.discount.is_percentage = $event,
                      class: "ml-2"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Percentage")
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue"])
                  ]),
                  _: 1
                }),
                vue.withDirectives(vue.createVNode("div", { class: "grid gap-2" }, [
                  vue.createVNode(_component_jet_label, { for: "percentage" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Percentage %")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_percentage_input, {
                    id: "percentage",
                    modelValue: $data.discount.discount_percentage,
                    "onUpdate:modelValue": ($event) => $data.discount.discount_percentage = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ], 512), [
                  [vue.vShow, $data.discount.is_percentage]
                ]),
                vue.withDirectives(vue.createVNode("div", { class: "grid gap-2" }, [
                  vue.createVNode(_component_jet_label, { for: "amount" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Discount Amount")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_money_input, {
                    id: "amount",
                    modelValue: $data.discount.discount_amount,
                    "onUpdate:modelValue": ($event) => $data.discount.discount_amount = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ], 512), [
                  [vue.vShow, !$data.discount.is_percentage]
                ])
              ])
            ], 40, ["onSubmit", "onKeydown"])
          ])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between items-center w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.creatingDiscount = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.createDiscount,
          class: { "opacity-25": $data.discount.processing },
          disabled: $data.discount.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Discount`);
            } else {
              return [
                vue.createTextVNode("Save Discount")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between items-center w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.creatingDiscount = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_button, {
                type: "submit",
                onClick: $options.createDiscount,
                class: { "opacity-25": $data.discount.processing },
                disabled: $data.discount.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Save Discount")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$1J = _sfc_main$1J.setup;
_sfc_main$1J.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/DiscountCreate.vue");
  return _sfc_setup$1J ? _sfc_setup$1J(props, ctx) : void 0;
};
var CreateOrderDiscount = /* @__PURE__ */ _export_sfc(_sfc_main$1J, [["ssrRender", _sfc_ssrRender$1H]]);
var DiscountCreate = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateOrderDiscount
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1I = {
  name: "Discounts",
  components: {
    DiscountItem,
    CreateOrderDiscount,
    LoadingState
  },
  props: {
    order: {
      type: Object,
      required: true
    }
  },
  data() {
    return {
      discounts: [],
      loading: true
    };
  },
  mounted() {
    this.getDiscounts();
  },
  watch: {
    order: {
      handler() {
        this.$nextTick(() => {
          this.getDiscounts();
        });
      },
      deep: true
    }
  },
  methods: {
    getDiscounts() {
      axios.get(
        route("sales.discounts.index", {
          sale: this.order.id
        })
      ).then((response) => {
        this.discounts = response.data;
      }).catch((error) => {
        console.error(error.response.data.message);
      }).finally(() => {
        this.loading = false;
      });
    }
  }
};
function _sfc_ssrRender$1G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_create_order_discount = vue.resolveComponent("create-order-discount");
  const _component_loading_state = vue.resolveComponent("loading-state");
  const _component_discount_item = vue.resolveComponent("discount-item");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Discounts`);
      } else {
        return [
          vue.createTextVNode("Discounts")
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_order_discount, {
          class: "ml-auto flex justify-end",
          order: $props.order
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_order_discount, {
            class: "ml-auto flex justify-end",
            order: $props.order
          }, null, 8, ["order"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="divide-gray-50 divide-y">`);
  _push(serverRenderer.ssrRenderComponent(_component_loading_state, { loading: $data.loading }, null, _parent));
  _push(`<!--[-->`);
  serverRenderer.ssrRenderList($data.discounts, (discount) => {
    _push(serverRenderer.ssrRenderComponent(_component_discount_item, {
      key: discount.id,
      discount
    }, null, _parent));
  });
  _push(`<!--]-->`);
  if (!$data.discounts.length) {
    _push(`<div class="text-center text-gray-500 p-4"> No discounts applied. </div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div></div>`);
}
const _sfc_setup$1I = _sfc_main$1I.setup;
_sfc_main$1I.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/Discounts.vue");
  return _sfc_setup$1I ? _sfc_setup$1I(props, ctx) : void 0;
};
var Discounts = /* @__PURE__ */ _export_sfc(_sfc_main$1I, [["ssrRender", _sfc_ssrRender$1G]]);
var Discounts$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Discounts
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1H = {
  components: { MoneyInput },
  props: {
    order: {
      type: Object,
      required: true
    }
  },
  data() {
    return {
      isFocused: false,
      updatedOrder: this.$inertia.form({
        is_taxable: this.order.is_taxable,
        tax_percentage: this.order.tax_percentage,
        warranty_percentage: this.order.warranty_percentage,
        shipping_method_id: this.order.shipping_method_id,
        shipping_amount: this.order.shipping_amount
      }),
      shipping_method: null,
      shipping_methods: this.$page.props.shipping_methods
    };
  },
  mounted() {
    var _a;
    this.shipping_method = (_a = this.shipping_methods.find(
      (method) => method.id === this.order.shipping_method_id
    )) != null ? _a : null;
  },
  watch: {
    shipping_method(value) {
      this.updatedOrder.shipping_method_id = value ? value.id : null;
    },
    "updatedOrder.shipping_method_id": _debounce__default["default"](function(value) {
      this.updateOrder();
    }, 500),
    "updatedOrder.is_taxable": _debounce__default["default"](function() {
      this.updateOrder();
    }, 500),
    "updatedOrder.warranty_percentage": _debounce__default["default"](function() {
      this.updateOrder();
    }, 500),
    "updatedOrder.tax_percentage": _debounce__default["default"](function() {
      this.updateOrder();
    }, 500),
    "updatedOrder.shipping_amount": _debounce__default["default"](function() {
      this.updateOrder();
    }, 500),
    order: {
      handler(order) {
        if (!this.updatedOrder.isDirty) {
          this.updatedOrder = this.$inertia.form(order);
        }
      },
      deep: true
    }
  },
  methods: {
    sendQuoteChanges() {
      this.updatedOrder.patch(route("quotes.update", this.order.id), {
        errorBag: "updateOrder",
        preserveScroll: true
      });
    },
    sendOrderChanges() {
      this.updatedOrder.patch(route("orders.update", this.order.id), {
        errorBag: "updateOrder",
        preserveScroll: true
      });
    },
    updateOrder() {
      if (this.updatedOrder.isDirty && !this.updatedOrder.processing) {
        if (this.order.is_quote) {
          this.sendQuoteChanges();
        } else {
          this.sendOrderChanges();
        }
      }
    }
  }
};
function _sfc_ssrRender$1F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_money_input = vue.resolveComponent("money-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_percentage_input = vue.resolveComponent("percentage-input");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Shipping / Tax / Totals`);
      } else {
        return [
          vue.createTextVNode("Shipping / Tax / Totals")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="md:grid grid-cols-2 gap-8"><div class="grid gap-2 items-center">`);
  if ($data.updatedOrder.processing) {
    _push(`<p>Saving...</p>`);
  } else {
    _push(`<!---->`);
  }
  _push(serverRenderer.ssrRenderComponent(_component_select_box, {
    labelValue: "Shipping Method",
    modelValue: $data.shipping_method,
    "onUpdate:modelValue": ($event) => $data.shipping_method = $event,
    selectedItem: $data.shipping_method,
    items: $data.shipping_methods,
    id: "shipping_method"
  }, null, _parent));
  _push(`<div class="grid grid-cols-2 gap-4 items-center">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "shipping_amount" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Shipping Amount`);
      } else {
        return [
          vue.createTextVNode("Shipping Amount")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_money_input, {
    modelValue: $data.updatedOrder.shipping_amount,
    "onUpdate:modelValue": ($event) => $data.updatedOrder.shipping_amount = $event,
    id: "shipping_amount"
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
    class: "col-span-2",
    message: $data.updatedOrder.errors.shipping_amount
  }, null, _parent));
  _push(`</div><div class="grid grid-cols-2 gap-4 items-center">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "warranty_percentage" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Warrany Percentage`);
      } else {
        return [
          vue.createTextVNode("Warrany Percentage")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_percentage_input, {
    id: "warranty_percentage",
    modelValue: $data.updatedOrder.warranty_percentage,
    "onUpdate:modelValue": ($event) => $data.updatedOrder.warranty_percentage = $event
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
    class: "col-span-2",
    message: $data.updatedOrder.errors.warranty_percentage
  }, null, _parent));
  _push(`</div><div class="grid grid-cols-2 gap-4 items-center border-t mt-2 pt-2"><label class="label justify-start">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
    class: "mr-2",
    checked: $data.updatedOrder.is_taxable,
    modelValue: $data.updatedOrder.is_taxable,
    "onUpdate:modelValue": ($event) => $data.updatedOrder.is_taxable = $event
  }, null, _parent));
  _push(`<span class="label-text">Taxable</span></label></div>`);
  if ($data.updatedOrder.is_taxable) {
    _push(`<div class="grid grid-cols-2 gap-4 items-center">`);
    _push(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "tax_percentage" }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`Tax Percentage`);
        } else {
          return [
            vue.createTextVNode("Tax Percentage")
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_percentage_input, {
      id: "tax_percentage",
      modelValue: $data.updatedOrder.tax_percentage,
      "onUpdate:modelValue": ($event) => $data.updatedOrder.tax_percentage = $event
    }, null, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
      class: "col-span-2",
      message: $data.updatedOrder.errors.tax_percentage
    }, null, _parent));
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div><div class="grid gap-2 mt-4 pt-4 border-t md:border-t-0 md:mt-0 md:py-2 items-center"><div class="flex space-x-4 justify-between items-center auto-cols-min">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Product Total`);
      } else {
        return [
          vue.createTextVNode("Product Total")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<p class="text-black">${serverRenderer.ssrInterpolate(_ctx.formatMoney($props.order.total))}</p></div><div class="flex space-x-4 justify-between items-center">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Discount Total`);
      } else {
        return [
          vue.createTextVNode("Discount Total")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<p class="text-gray-600">${serverRenderer.ssrInterpolate(_ctx.formatMoney($props.order.total_discounts))}</p></div><div class="flex space-x-4 justify-between items-center">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Warranty Amount`);
      } else {
        return [
          vue.createTextVNode("Warranty Amount")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<p class="text-gray-600">${serverRenderer.ssrInterpolate(_ctx.formatMoney($props.order.warranty_amount))}</p></div><div class="flex space-x-4 justify-between items-center">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, { class: "text-black" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Sub Total`);
      } else {
        return [
          vue.createTextVNode("Sub Total")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<p class="text-black">${serverRenderer.ssrInterpolate(_ctx.formatMoney($props.order.total_after_discount_and_warranty))}</p></div><div class="flex space-x-4 justify-between items-center">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Shipping Amount`);
      } else {
        return [
          vue.createTextVNode("Shipping Amount")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<p class="text-gray-600">${serverRenderer.ssrInterpolate(_ctx.formatMoney($data.updatedOrder.shipping_amount))}</p></div><div class="flex space-x-4 justify-between items-center">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Tax Amount`);
      } else {
        return [
          vue.createTextVNode("Tax Amount")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<p class="text-gray-600">${serverRenderer.ssrInterpolate(_ctx.formatMoney($props.order.tax_amount))}</p></div><div class="flex space-x-4 justify-between uppercase items-center border-t pt-2">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, { class: "text-black text-lg" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Grand Total`);
      } else {
        return [
          vue.createTextVNode("Grand Total")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<p class="text-black text-lg">${serverRenderer.ssrInterpolate(_ctx.formatMoney($props.order.grand_total))}</p></div></div></div></div>`);
}
const _sfc_setup$1H = _sfc_main$1H.setup;
_sfc_main$1H.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/Totals.vue");
  return _sfc_setup$1H ? _sfc_setup$1H(props, ctx) : void 0;
};
var Totals = /* @__PURE__ */ _export_sfc(_sfc_main$1H, [["ssrRender", _sfc_ssrRender$1F]]);
var Totals$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Totals
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1G = {
  components: {
    SearchSelectBox,
    TextAreaInput,
    Modal,
    CreateCustomerForm,
    OrderItems,
    Discounts,
    Totals,
    QuoteHoldInventoryCheckmark
  },
  props: {
    order: {
      type: Object,
      required: true
    },
    customers: {
      type: Array,
      required: true
    },
    priceLevels: {
      type: Array,
      required: true
    }
  },
  data() {
    return {
      creatingCustomer: false,
      customerName: "",
      customerContacts: [],
      teamMembers: this.$page.props.teamMembers,
      orderCustomer: this.customers.find(
        (customer) => customer.id === this.order.customer_id
      ),
      contact: this.order.contact,
      teamMember: this.$page.props.teamMembers.find(
        (member) => member.id === this.order.team_member_id
      ),
      updatedOrder: this.$inertia.form({
        customer_id: this.order.customer_id,
        contact_id: this.order.contact_id,
        team_member_id: this.order.team_member_id,
        date: this.order.date,
        quote_expires: this.order.quote_expires,
        hold_inventory: this.order.hold_inventory,
        notes: this.order.notes
      })
    };
  },
  computed: {
    isQuote() {
      return this.order.is_quote;
    }
  },
  watch: {
    "updatedOrder.customer_id": _debounce__default["default"](function() {
      this.updateOrder();
    }, 500),
    "updatedOrder.team_member_id": _debounce__default["default"](function() {
      this.updateOrder();
    }, 500),
    "updatedOrder.date": _debounce__default["default"](function() {
      this.updateOrder();
    }, 1e3),
    "updatedOrder.quote_expires": _debounce__default["default"](function() {
      this.updateOrder();
    }, 1e3),
    "updatedOrder.notes": _debounce__default["default"](function() {
      this.updateOrder();
    }, 1e3),
    orderCustomer(orderCustomer) {
      if (orderCustomer) {
        this.updatedOrder.customer_id = orderCustomer.id;
        this.customerContacts = orderCustomer.contacts ? orderCustomer.contacts : [];
        this.contact = null;
        this.updatedOrder.is_taxable = orderCustomer.is_taxable;
      } else {
        this.updatedOrder.customer_id = null;
        this.contact = null;
      }
    },
    contact(value) {
      if (value) {
        this.updatedOrder.contact_id = value.id;
      } else {
        this.updatedOrder.contact_id = null;
      }
    },
    teamMember(value) {
      if (value) {
        this.updatedOrder.team_member_id = value.id;
      } else {
        this.updatedOrder.team_member_id = null;
      }
    }
  },
  methods: {
    sendQuoteChanges() {
      this.updatedOrder.patch(route("quotes.update", this.order.id), {
        errorBag: "updateOrder",
        preserveScroll: true
      });
    },
    sendOrderChanges() {
      this.updatedOrder.patch(route("orders.update", this.order.id), {
        errorBag: "updateOrder",
        preserveScroll: true
      });
    },
    updateOrder() {
      this.$nextTick(() => {
        if (this.updatedOrder.isDirty && !this.updatedOrder.processing) {
          if (this.order.is_quote) {
            this.sendQuoteChanges();
          } else {
            this.sendOrderChanges();
          }
        }
      });
    },
    updateCustomer(customerId) {
      this.orderCustomer = this.customers.find(
        (customer) => customer.id == customerId
      );
    },
    addCustomer(customerName) {
      this.customerName = customerName;
      this.creatingCustomer = true;
    },
    createdCustomer(newCustomer) {
      inertia.Inertia.reload();
      this.customers.push(newCustomer);
      this.updateCustomer(newCustomer.id);
      this.creatingCustomer = false;
    }
  }
};
function _sfc_ssrRender$1E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_search_select_box = vue.resolveComponent("search-select-box");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_modal = vue.resolveComponent("modal");
  const _component_create_customer_form = vue.resolveComponent("create-customer-form");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_QuoteHoldInventoryCheckmark = vue.resolveComponent("QuoteHoldInventoryCheckmark");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_order_items = vue.resolveComponent("order-items");
  const _component_discounts = vue.resolveComponent("discounts");
  const _component_totals = vue.resolveComponent("totals");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<span class="uppercase"${_scopeId}>${serverRenderer.ssrInterpolate($props.order.customer.name)}: ${serverRenderer.ssrInterpolate($props.order.type)} #${serverRenderer.ssrInterpolate($props.order.id)}</span><span class="${serverRenderer.ssrRenderClass([
          "ml-4 fixed bottom-5 right-10 z-50 md:static rounded bg-white p-3 text-base"
        ])}" style="${serverRenderer.ssrRenderStyle($data.updatedOrder.processing ? null : { display: "none" })}"${serverRenderer.ssrIncludeBooleanAttr($data.updatedOrder.processing || !$data.updatedOrder.isDirty) ? " disabled" : ""}${_scopeId}> Saving Changes... </span>`);
      } else {
        return [
          vue.createVNode("span", { class: "uppercase" }, vue.toDisplayString($props.order.customer.name) + ": " + vue.toDisplayString($props.order.type) + " #" + vue.toDisplayString($props.order.id), 1),
          vue.withDirectives(vue.createVNode("span", {
            class: [
              "ml-4 fixed bottom-5 right-10 z-50 md:static rounded bg-white p-3 text-base"
            ],
            disabled: $data.updatedOrder.processing || !$data.updatedOrder.isDirty
          }, " Saving Changes... ", 8, ["disabled"]), [
            [vue.vShow, $data.updatedOrder.processing]
          ])
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<h3 class="text-lg"${_scopeId}> Grand Total: ${serverRenderer.ssrInterpolate(_ctx.formatMoney($props.order.grand_total))}</h3>`);
      } else {
        return [
          vue.createVNode("h3", { class: "text-lg" }, " Grand Total: " + vue.toDisplayString(_ctx.formatMoney($props.order.grand_total)), 1)
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6 grid gap-6"${_scopeId}><div class="grid lg:grid-cols-2 gap-x-4 gap-y-2 2xl:gap-x-20"${_scopeId}><div class="col-span-1 grid xl:grid-cols-2 gap-x-4 gap-y-2"${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_search_select_box, {
          labelValue: "Customer",
          items: $props.customers,
          selectedItem: $data.orderCustomer,
          onUpdate: $options.updateCustomer,
          onAdd: $options.addCustomer
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedOrder.errors.customer_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_modal, {
          show: $data.creatingCustomer,
          onClose: ($event) => $data.creatingCustomer = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_create_customer_form, {
                onCreated: $options.createdCustomer,
                redirect: false,
                customerName: $data.customerName
              }, null, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_create_customer_form, {
                  onCreated: $options.createdCustomer,
                  redirect: false,
                  customerName: $data.customerName
                }, null, 8, ["onCreated", "customerName"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div style="${serverRenderer.ssrRenderStyle($data.orderCustomer && $data.customerContacts.length ? null : { display: "none" })}"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Customer Contact",
          items: $data.customerContacts,
          modelValue: $data.contact,
          "onUpdate:modelValue": ($event) => $data.contact = $event,
          selectedItem: $data.contact
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedOrder.errors.contact_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Sales Person",
          items: $data.teamMembers,
          selectedItem: $data.teamMember,
          modelValue: $data.teamMember,
          "onUpdate:modelValue": ($event) => $data.teamMember = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedOrder.errors.team_member_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="col-span-1 grid grid-cols-2 gap-4"${_scopeId}><div class="${serverRenderer.ssrRenderClass([
          $props.order.is_quote ? "" : "col-span-2 justify-self-end",
          "form-control"
        ])}"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "date",
          value: "Order Date"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "date",
          type: "date",
          class: "block w-full",
          modelValue: $data.updatedOrder.date,
          "onUpdate:modelValue": ($event) => $data.updatedOrder.date = $event,
          required: ""
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedOrder.errors.date,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        if ($options.isQuote) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "quote_expires",
            value: "Expire Date"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "quote_expires",
            type: "date",
            class: "block w-full",
            modelValue: $data.updatedOrder.quote_expires,
            "onUpdate:modelValue": ($event) => $data.updatedOrder.quote_expires = $event,
            required: ""
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.updatedOrder.errors.quote_expires,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($options.isQuote) {
          _push2(serverRenderer.ssrRenderComponent(_component_QuoteHoldInventoryCheckmark, {
            modelValue: $data.updatedOrder.hold_inventory,
            "onUpdate:modelValue": ($event) => $data.updatedOrder.hold_inventory = $event,
            onChange: $options.updateOrder,
            errorMessage: $data.updatedOrder.errors.hold_inventory
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="lg:col-span-2"${_scopeId}><div class=""${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "notes",
          value: "Order Notes"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "notes",
          type: "notes",
          class: "mt-1 block w-full",
          modelValue: $data.updatedOrder.notes,
          "onUpdate:modelValue": ($event) => $data.updatedOrder.notes = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.updatedOrder.errors.notes,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_order_items, { order: $props.order }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_discounts, { order: $props.order }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_totals, { order: $props.order }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6 grid gap-6" }, [
            vue.createVNode("div", { class: "grid lg:grid-cols-2 gap-x-4 gap-y-2 2xl:gap-x-20" }, [
              vue.createVNode("div", { class: "col-span-1 grid xl:grid-cols-2 gap-x-4 gap-y-2" }, [
                vue.createVNode("div", null, [
                  vue.createVNode(_component_search_select_box, {
                    labelValue: "Customer",
                    items: $props.customers,
                    selectedItem: $data.orderCustomer,
                    onUpdate: $options.updateCustomer,
                    onAdd: $options.addCustomer
                  }, null, 8, ["items", "selectedItem", "onUpdate", "onAdd"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.updatedOrder.errors.customer_id,
                    class: "mt-2"
                  }, null, 8, ["message"]),
                  vue.createVNode(_component_modal, {
                    show: $data.creatingCustomer,
                    onClose: ($event) => $data.creatingCustomer = false
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_create_customer_form, {
                        onCreated: $options.createdCustomer,
                        redirect: false,
                        customerName: $data.customerName
                      }, null, 8, ["onCreated", "customerName"])
                    ]),
                    _: 1
                  }, 8, ["show", "onClose"])
                ]),
                vue.withDirectives(vue.createVNode("div", null, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Customer Contact",
                    items: $data.customerContacts,
                    modelValue: $data.contact,
                    "onUpdate:modelValue": ($event) => $data.contact = $event,
                    selectedItem: $data.contact
                  }, null, 8, ["items", "modelValue", "onUpdate:modelValue", "selectedItem"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.updatedOrder.errors.contact_id,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ], 512), [
                  [vue.vShow, $data.orderCustomer && $data.customerContacts.length]
                ]),
                vue.createVNode("div", null, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Sales Person",
                    items: $data.teamMembers,
                    selectedItem: $data.teamMember,
                    modelValue: $data.teamMember,
                    "onUpdate:modelValue": ($event) => $data.teamMember = $event
                  }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.updatedOrder.errors.team_member_id,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ]),
              vue.createVNode("div", { class: "col-span-1 grid grid-cols-2 gap-4" }, [
                vue.createVNode("div", {
                  class: [
                    "form-control",
                    $props.order.is_quote ? "" : "col-span-2 justify-self-end"
                  ]
                }, [
                  vue.createVNode(_component_jet_label, {
                    for: "date",
                    value: "Order Date"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "date",
                    type: "date",
                    class: "block w-full",
                    modelValue: $data.updatedOrder.date,
                    "onUpdate:modelValue": ($event) => $data.updatedOrder.date = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.updatedOrder.errors.date,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ], 2),
                $options.isQuote ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
                  vue.createVNode(_component_jet_label, {
                    for: "quote_expires",
                    value: "Expire Date"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "quote_expires",
                    type: "date",
                    class: "block w-full",
                    modelValue: $data.updatedOrder.quote_expires,
                    "onUpdate:modelValue": ($event) => $data.updatedOrder.quote_expires = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.updatedOrder.errors.quote_expires,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])) : vue.createCommentVNode("", true),
                $options.isQuote ? (vue.openBlock(), vue.createBlock(_component_QuoteHoldInventoryCheckmark, {
                  key: 1,
                  modelValue: $data.updatedOrder.hold_inventory,
                  "onUpdate:modelValue": ($event) => $data.updatedOrder.hold_inventory = $event,
                  onChange: $options.updateOrder,
                  errorMessage: $data.updatedOrder.errors.hold_inventory
                }, null, 8, ["modelValue", "onUpdate:modelValue", "onChange", "errorMessage"])) : vue.createCommentVNode("", true)
              ]),
              vue.createVNode("div", { class: "lg:col-span-2" }, [
                vue.createVNode("div", { class: "" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "notes",
                    value: "Order Notes"
                  }),
                  vue.createVNode(_component_text_area_input, {
                    id: "notes",
                    type: "notes",
                    class: "mt-1 block w-full",
                    modelValue: $data.updatedOrder.notes,
                    "onUpdate:modelValue": ($event) => $data.updatedOrder.notes = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.updatedOrder.errors.notes,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ])
            ]),
            vue.createVNode(_component_order_items, { order: $props.order }, null, 8, ["order"]),
            vue.createVNode(_component_discounts, { order: $props.order }, null, 8, ["order"]),
            vue.createVNode(_component_totals, { order: $props.order }, null, 8, ["order"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1G = _sfc_main$1G.setup;
_sfc_main$1G.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/OrderUpdate.vue");
  return _sfc_setup$1G ? _sfc_setup$1G(props, ctx) : void 0;
};
var OrderUpdate = /* @__PURE__ */ _export_sfc(_sfc_main$1G, [["ssrRender", _sfc_ssrRender$1E]]);
var OrderUpdate$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": OrderUpdate
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1F = {
  props: ["order"],
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingOrderDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmOrderDeletion() {
      this.confirmingOrderDeletion = true;
    },
    deleteOrder() {
      if (this.order.is_quote) {
        this.form.delete(route("quotes.destroy", this.order.id));
      } else {
        this.form.delete(route("orders.destroy", this.order.id));
      }
    }
  }
};
function _sfc_ssrRender$1D(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<span class="capitalize"${_scopeId}>Delete ${serverRenderer.ssrInterpolate($props.order.type)}</span>`);
      } else {
        return [
          vue.createVNode("span", { class: "capitalize" }, "Delete " + vue.toDisplayString($props.order.type), 1)
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="text-sm text-gray-600"${_scopeId}> If this ${serverRenderer.ssrInterpolate($props.order.type)} is deleted, all associated products and services, associated shipments, and associated invoices will be deleted. This is permanent and cannot be undone. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmOrderDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete ${serverRenderer.ssrInterpolate($props.order.type)}`);
            } else {
              return [
                vue.createTextVNode(" Delete " + vue.toDisplayString($props.order.type), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingOrderDeletion,
          onClose: ($event) => $data.confirmingOrderDeletion = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="capitalize"${_scopeId2}> Delete ${serverRenderer.ssrInterpolate($props.order.type)}</span>`);
            } else {
              return [
                vue.createVNode("span", { class: "capitalize" }, " Delete " + vue.toDisplayString($props.order.type), 1)
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this ${serverRenderer.ssrInterpolate($props.order.type)}? There will be no way to recover it. `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete this " + vue.toDisplayString($props.order.type) + "? There will be no way to recover it. ", 1)
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingOrderDeletion = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: "ml-2",
                onClick: $options.deleteOrder,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Yes, Delete `);
                  } else {
                    return [
                      vue.createTextVNode(" Yes, Delete ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingOrderDeletion = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: "ml-2",
                  onClick: $options.deleteOrder,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Yes, Delete ")
                  ]),
                  _: 1
                }, 8, ["onClick", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "text-sm text-gray-600" }, " If this " + vue.toDisplayString($props.order.type) + " is deleted, all associated products and services, associated shipments, and associated invoices will be deleted. This is permanent and cannot be undone. ", 1),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmOrderDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete " + vue.toDisplayString($props.order.type), 1)
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingOrderDeletion,
            onClose: ($event) => $data.confirmingOrderDeletion = false
          }, {
            title: vue.withCtx(() => [
              vue.createVNode("span", { class: "capitalize" }, " Delete " + vue.toDisplayString($props.order.type), 1)
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete this " + vue.toDisplayString($props.order.type) + "? There will be no way to recover it. ", 1)
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingOrderDeletion = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: "ml-2",
                onClick: $options.deleteOrder,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Yes, Delete ")
                ]),
                _: 1
              }, 8, ["onClick", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1F = _sfc_main$1F.setup;
_sfc_main$1F.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/OrderDelete.vue");
  return _sfc_setup$1F ? _sfc_setup$1F(props, ctx) : void 0;
};
var OrderDelete = /* @__PURE__ */ _export_sfc(_sfc_main$1F, [["ssrRender", _sfc_ssrRender$1D]]);
var OrderDelete$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": OrderDelete
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1E = {
  components: {
    RadioGroup: vue$1.RadioGroup,
    RadioGroupDescription: vue$1.RadioGroupDescription,
    RadioGroupLabel: vue$1.RadioGroupLabel,
    RadioGroupOption: vue$1.RadioGroupOption
  },
  props: {
    label: {
      type: String,
      default: "Select Option"
    },
    nameValue: {
      type: String,
      default: "name"
    },
    descriptionValue: {
      type: String,
      default: "description"
    },
    keyValue: {
      type: String,
      default: "id"
    },
    options: {
      type: [Array, Boolean],
      default: []
    },
    selectedItem: {
      type: Object,
      default: null
    }
  },
  data() {
    return {
      selected: this.selectedItem
    };
  },
  watch: {
    selected(newValue) {
      this.$emit("update", newValue);
    }
  }
};
function _sfc_ssrRender$1C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_RadioGroup = vue.resolveComponent("RadioGroup");
  const _component_RadioGroupLabel = vue.resolveComponent("RadioGroupLabel");
  const _component_RadioGroupOption = vue.resolveComponent("RadioGroupOption");
  const _component_RadioGroupDescription = vue.resolveComponent("RadioGroupDescription");
  _push(serverRenderer.ssrRenderComponent(_component_RadioGroup, vue.mergeProps({
    modelValue: $data.selected,
    "onUpdate:modelValue": ($event) => $data.selected = $event
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_RadioGroupLabel, { class: "sr-only" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${serverRenderer.ssrInterpolate($props.label)}`);
            } else {
              return [
                vue.createTextVNode(vue.toDisplayString($props.label), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div class="bg-white rounded-md -space-y-px"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($props.options, (option, optionIndex) => {
          _push2(serverRenderer.ssrRenderComponent(_component_RadioGroupOption, {
            as: "template",
            key: option[$props.keyValue],
            value: option
          }, {
            default: vue.withCtx(({ checked, active }, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="${serverRenderer.ssrRenderClass([
                  optionIndex === 0 ? "rounded-tl-md rounded-tr-md" : "",
                  optionIndex === $props.options.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                  checked ? "bg-gray-50 border-gray-200 z-10" : "border-gray-200",
                  "relative border p-4 flex cursor-pointer focus:outline-none"
                ])}"${_scopeId2}><span class="${serverRenderer.ssrRenderClass([
                  checked ? "bg-gray-600 border-transparent" : "bg-white border-gray-300",
                  active ? "ring-2 ring-offset-2 ring-gray-500" : "",
                  "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center"
                ])}" aria-hidden="true"${_scopeId2}><span class="rounded-full bg-white w-1.5 h-1.5"${_scopeId2}></span></span><div class="ml-3 flex flex-col"${_scopeId2}>`);
                _push3(serverRenderer.ssrRenderComponent(_component_RadioGroupLabel, {
                  as: "span",
                  class: [
                    checked ? "text-gray-900" : "text-gray-900",
                    "block text-sm font-medium"
                  ]
                }, {
                  default: vue.withCtx((_2, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(option[$props.nameValue])}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(option[$props.nameValue]), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_RadioGroupDescription, {
                  as: "span",
                  class: [
                    checked ? "text-gray-700" : "text-gray-500",
                    "block text-sm"
                  ]
                }, {
                  default: vue.withCtx((_2, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(option[$props.descriptionValue])}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(option[$props.descriptionValue]), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(`</div></div>`);
              } else {
                return [
                  vue.createVNode("div", {
                    class: [
                      optionIndex === 0 ? "rounded-tl-md rounded-tr-md" : "",
                      optionIndex === $props.options.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                      checked ? "bg-gray-50 border-gray-200 z-10" : "border-gray-200",
                      "relative border p-4 flex cursor-pointer focus:outline-none"
                    ]
                  }, [
                    vue.createVNode("span", {
                      class: [
                        checked ? "bg-gray-600 border-transparent" : "bg-white border-gray-300",
                        active ? "ring-2 ring-offset-2 ring-gray-500" : "",
                        "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center"
                      ],
                      "aria-hidden": "true"
                    }, [
                      vue.createVNode("span", { class: "rounded-full bg-white w-1.5 h-1.5" })
                    ], 2),
                    vue.createVNode("div", { class: "ml-3 flex flex-col" }, [
                      vue.createVNode(_component_RadioGroupLabel, {
                        as: "span",
                        class: [
                          checked ? "text-gray-900" : "text-gray-900",
                          "block text-sm font-medium"
                        ]
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(option[$props.nameValue]), 1)
                        ]),
                        _: 2
                      }, 1032, ["class"]),
                      vue.createVNode(_component_RadioGroupDescription, {
                        as: "span",
                        class: [
                          checked ? "text-gray-700" : "text-gray-500",
                          "block text-sm"
                        ]
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(option[$props.descriptionValue]), 1)
                        ]),
                        _: 2
                      }, 1032, ["class"])
                    ])
                  ], 2)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]--></div>`);
      } else {
        return [
          vue.createVNode(_component_RadioGroupLabel, { class: "sr-only" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(vue.toDisplayString($props.label), 1)
            ]),
            _: 1
          }),
          vue.createVNode("div", { class: "bg-white rounded-md -space-y-px" }, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.options, (option, optionIndex) => {
              return vue.openBlock(), vue.createBlock(_component_RadioGroupOption, {
                as: "template",
                key: option[$props.keyValue],
                value: option
              }, {
                default: vue.withCtx(({ checked, active }) => [
                  vue.createVNode("div", {
                    class: [
                      optionIndex === 0 ? "rounded-tl-md rounded-tr-md" : "",
                      optionIndex === $props.options.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                      checked ? "bg-gray-50 border-gray-200 z-10" : "border-gray-200",
                      "relative border p-4 flex cursor-pointer focus:outline-none"
                    ]
                  }, [
                    vue.createVNode("span", {
                      class: [
                        checked ? "bg-gray-600 border-transparent" : "bg-white border-gray-300",
                        active ? "ring-2 ring-offset-2 ring-gray-500" : "",
                        "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center"
                      ],
                      "aria-hidden": "true"
                    }, [
                      vue.createVNode("span", { class: "rounded-full bg-white w-1.5 h-1.5" })
                    ], 2),
                    vue.createVNode("div", { class: "ml-3 flex flex-col" }, [
                      vue.createVNode(_component_RadioGroupLabel, {
                        as: "span",
                        class: [
                          checked ? "text-gray-900" : "text-gray-900",
                          "block text-sm font-medium"
                        ]
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(option[$props.nameValue]), 1)
                        ]),
                        _: 2
                      }, 1032, ["class"]),
                      vue.createVNode(_component_RadioGroupDescription, {
                        as: "span",
                        class: [
                          checked ? "text-gray-700" : "text-gray-500",
                          "block text-sm"
                        ]
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(option[$props.descriptionValue]), 1)
                        ]),
                        _: 2
                      }, 1032, ["class"])
                    ])
                  ], 2)
                ]),
                _: 2
              }, 1032, ["value"]);
            }), 128))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1E = _sfc_main$1E.setup;
_sfc_main$1E.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Forms/RadioListSelect.vue");
  return _sfc_setup$1E ? _sfc_setup$1E(props, ctx) : void 0;
};
var RadioListSelect = /* @__PURE__ */ _export_sfc(_sfc_main$1E, [["ssrRender", _sfc_ssrRender$1C]]);
const _sfc_main$1D = {
  props: {
    archivedItem: Object,
    order: Object,
    quantity_left: Number
  },
  components: {
    DialogModal: JetDialogModal,
    ConfirmationModal: JetConfirmationModal
  },
  data() {
    return {
      editingItem: false,
      confirmingDeletion: false,
      confirm_quantity: false,
      item: this.$inertia.form(this.archivedItem)
    };
  },
  computed: {
    needToConfirmQuantity() {
      return this.quantityToAdd > this.quantity_left;
    },
    orderItemQuantity() {
      return this.archivedItem.order_item_quantity;
    },
    quantityToAdd() {
      return parseInt(this.item.quantity_removed) - parseInt(this.archivedItem.quantity_removed);
    },
    orderItemQuantityAfterAdding() {
      return parseInt(this.orderItemQuantity) + parseInt(this.quantityToAdd);
    },
    itemIsGroup() {
      return this.archivedItem.inventory_is_group;
    }
  },
  methods: {
    confirmDeletion() {
      this.confirmingDeletion = true;
    },
    deleteItem() {
      this.item.delete(
        route("inventory-archive.destroy", {
          inventory_archive: this.archivedItem.id
        }),
        {
          preserveState: false
        }
      );
    },
    updateItem() {
      console.log(this.item);
      this.item.patch(
        route("inventory-archive.update", {
          inventory_archive: this.archivedItem.id,
          confirm_quantity: this.confirm_quantity ? 1 : null
        }),
        {
          onSuccess: () => {
            this.$inertia.visit(
              route("orders.show", {
                order: this.order.id
              })
            );
          }
        }
      );
    }
  }
};
function _sfc_ssrRender$1B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_dialog_modal = vue.resolveComponent("dialog-modal");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_confirmation_modal = vue.resolveComponent("confirmation-modal");
  _push(`<span${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "m-1 btn btn-xs btn-ghost bg-gray-100 cursor-pointer" }, _attrs))}>${serverRenderer.ssrInterpolate("#" + $props.archivedItem.inventory_id + ($props.archivedItem.quantity_removed > 1 ? " Qty: " + $props.archivedItem.quantity_removed : ""))} `);
  _push(serverRenderer.ssrRenderComponent(_component_dialog_modal, {
    onClose: ($event) => $data.editingItem = false,
    show: $data.editingItem
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Edit Inventory Item `);
      } else {
        return [
          vue.createTextVNode(" Edit Inventory Item ")
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($options.itemIsGroup) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
            class: "ml-auto flex justify-end",
            onClick: $options.confirmDeletion
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Unmatch Item`);
              } else {
                return [
                  vue.createTextVNode("Unmatch Item")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          $options.itemIsGroup ? (vue.openBlock(), vue.createBlock(_component_jet_danger_button, {
            key: 0,
            class: "ml-auto flex justify-end",
            onClick: $options.confirmDeletion
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Unmatch Item")
            ]),
            _: 1
          }, 8, ["onClick"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<form class="grid gap-4"${_scopeId}><div class="grid gap-4 grid-cols-2"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { class: "col-span-1" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="font-bold"${_scopeId2}>Product:</span> ${serverRenderer.ssrInterpolate($data.item.product_name)}`);
            } else {
              return [
                vue.createVNode("span", { class: "font-bold" }, "Product:"),
                vue.createTextVNode(" " + vue.toDisplayString($data.item.product_name), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="font-bold"${_scopeId2}>Qty in Order:</span> ${serverRenderer.ssrInterpolate($options.orderItemQuantity)}`);
            } else {
              return [
                vue.createVNode("span", { class: "font-bold" }, "Qty in Order:"),
                vue.createTextVNode(" " + vue.toDisplayString($options.orderItemQuantity), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="font-bold"${_scopeId2}>Inventory ID #:</span> ${serverRenderer.ssrInterpolate($data.item.inventory_id)}`);
            } else {
              return [
                vue.createVNode("span", { class: "font-bold" }, "Inventory ID #:"),
                vue.createTextVNode(" " + vue.toDisplayString($data.item.inventory_id), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="font-bold"${_scopeId2}>Size:</span> ${serverRenderer.ssrInterpolate($data.item.size_name)}`);
            } else {
              return [
                vue.createVNode("span", { class: "font-bold" }, "Size:"),
                vue.createTextVNode(" " + vue.toDisplayString($data.item.size_name), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        if ($options.itemIsGroup) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.item.errors.quantity_removed
          }, null, _parent2, _scopeId));
          _push2(`<div class="flex items-center justify-between mt-2"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            class: "font-bold",
            for: "quantity"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Quantity:`);
              } else {
                return [
                  vue.createTextVNode("Quantity:")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "quantity",
            type: "number",
            error: $data.item.errors.quantity_removed ? true : false,
            modelValue: $data.item.quantity_removed,
            "onUpdate:modelValue": ($event) => $data.item.quantity_removed = $event,
            modelModifiers: { number: true }
          }, null, _parent2, _scopeId));
          _push2(`</div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div${_scopeId}>`);
        if ($options.needToConfirmQuantity) {
          _push2(`<div class="flex items-center mb-2"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            class: {
              "text-red-500": $options.needToConfirmQuantity && !$data.confirm_quantity
            },
            for: "confirm_quantity"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Increase quantity of order item from ${serverRenderer.ssrInterpolate($options.orderItemQuantity)} to ${serverRenderer.ssrInterpolate($options.orderItemQuantityAfterAdding)}?`);
              } else {
                return [
                  vue.createTextVNode("Increase quantity of order item from " + vue.toDisplayString($options.orderItemQuantity) + " to " + vue.toDisplayString($options.orderItemQuantityAfterAdding) + "?", 1)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
            id: "confirm_quantity",
            modelValue: $data.confirm_quantity,
            "onUpdate:modelValue": ($event) => $data.confirm_quantity = $event
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.item.errors.confirm_quantity
        }, null, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            class: "grid gap-4",
            onKeydown: vue.withKeys(vue.withModifiers($options.updateItem, ["prevent"]), ["enter"])
          }, [
            vue.createVNode("div", { class: "grid gap-4 grid-cols-2" }, [
              vue.createVNode(_component_jet_label, { class: "col-span-1" }, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "font-bold" }, "Product:"),
                  vue.createTextVNode(" " + vue.toDisplayString($data.item.product_name), 1)
                ]),
                _: 1
              }),
              vue.createVNode(_component_jet_label, null, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "font-bold" }, "Qty in Order:"),
                  vue.createTextVNode(" " + vue.toDisplayString($options.orderItemQuantity), 1)
                ]),
                _: 1
              }),
              vue.createVNode(_component_jet_label, null, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "font-bold" }, "Inventory ID #:"),
                  vue.createTextVNode(" " + vue.toDisplayString($data.item.inventory_id), 1)
                ]),
                _: 1
              }),
              vue.createVNode(_component_jet_label, null, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "font-bold" }, "Size:"),
                  vue.createTextVNode(" " + vue.toDisplayString($data.item.size_name), 1)
                ]),
                _: 1
              })
            ]),
            $options.itemIsGroup ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
              vue.createVNode(_component_jet_input_error, {
                message: $data.item.errors.quantity_removed
              }, null, 8, ["message"]),
              vue.createVNode("div", { class: "flex items-center justify-between mt-2" }, [
                vue.createVNode(_component_jet_label, {
                  class: "font-bold",
                  for: "quantity"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Quantity:")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_jet_input, {
                  id: "quantity",
                  type: "number",
                  error: $data.item.errors.quantity_removed ? true : false,
                  modelValue: $data.item.quantity_removed,
                  "onUpdate:modelValue": ($event) => $data.item.quantity_removed = $event,
                  modelModifiers: { number: true }
                }, null, 8, ["error", "modelValue", "onUpdate:modelValue"])
              ])
            ])) : vue.createCommentVNode("", true),
            vue.createVNode("div", null, [
              $options.needToConfirmQuantity ? (vue.openBlock(), vue.createBlock("div", {
                key: 0,
                class: "flex items-center mb-2"
              }, [
                vue.createVNode(_component_jet_label, {
                  class: {
                    "text-red-500": $options.needToConfirmQuantity && !$data.confirm_quantity
                  },
                  for: "confirm_quantity"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Increase quantity of order item from " + vue.toDisplayString($options.orderItemQuantity) + " to " + vue.toDisplayString($options.orderItemQuantityAfterAdding) + "?", 1)
                  ]),
                  _: 1
                }, 8, ["class"]),
                vue.createVNode(_component_jet_checkbox, {
                  id: "confirm_quantity",
                  modelValue: $data.confirm_quantity,
                  "onUpdate:modelValue": ($event) => $data.confirm_quantity = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"])
              ])) : vue.createCommentVNode("", true),
              vue.createVNode(_component_jet_input_error, {
                message: $data.item.errors.confirm_quantity
              }, null, 8, ["message"])
            ])
          ], 40, ["onKeydown"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex items-center justify-between"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.editingItem = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        if ($options.itemIsGroup) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
            onClick: $options.updateItem,
            class: "ml-auto flex justify-end",
            disabled: !$data.item.isDirty
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Update Item`);
              } else {
                return [
                  vue.createTextVNode("Update Item")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
            class: "ml-auto flex justify-end",
            onClick: $options.confirmDeletion
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Unmatch Item`);
              } else {
                return [
                  vue.createTextVNode("Unmatch Item")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex items-center justify-between" }, [
            vue.createVNode(_component_jet_secondary_button, {
              onClick: ($event) => $data.editingItem = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            $options.itemIsGroup ? (vue.openBlock(), vue.createBlock(_component_jet_button, {
              key: 0,
              onClick: $options.updateItem,
              class: "ml-auto flex justify-end",
              disabled: !$data.item.isDirty
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Update Item")
              ]),
              _: 1
            }, 8, ["onClick", "disabled"])) : (vue.openBlock(), vue.createBlock(_component_jet_danger_button, {
              key: 1,
              class: "ml-auto flex justify-end",
              onClick: $options.confirmDeletion
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Unmatch Item")
              ]),
              _: 1
            }, 8, ["onClick"]))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_confirmation_modal, {
    show: $data.confirmingDeletion,
    onClose: ($event) => $data.confirmingDeletion = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Unmatch Inventory Item `);
      } else {
        return [
          vue.createTextVNode(" Unmatch Inventory Item ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<p${_scopeId}> Are you sure you want to unmatch this item? This will restore the item to inventory, and unmatch it from this order. </p>`);
      } else {
        return [
          vue.createVNode("p", null, " Are you sure you want to unmatch this item? This will restore the item to inventory, and unmatch it from this order. ")
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex items-center justify-between"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.confirmingDeletion = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`No, Cancel`);
            } else {
              return [
                vue.createTextVNode("No, Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          onClick: $options.deleteItem,
          class: "ml-auto flex justify-end"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Unmatch Item`);
            } else {
              return [
                vue.createTextVNode("Unmatch Item")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex items-center justify-between" }, [
            vue.createVNode(_component_jet_secondary_button, {
              onClick: ($event) => $data.confirmingDeletion = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("No, Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_danger_button, {
              onClick: $options.deleteItem,
              class: "ml-auto flex justify-end"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Unmatch Item")
              ]),
              _: 1
            }, 8, ["onClick"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</span>`);
}
const _sfc_setup$1D = _sfc_main$1D.setup;
_sfc_main$1D.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/InventoryItem.vue");
  return _sfc_setup$1D ? _sfc_setup$1D(props, ctx) : void 0;
};
var InventoryItem = /* @__PURE__ */ _export_sfc(_sfc_main$1D, [["ssrRender", _sfc_ssrRender$1B]]);
var InventoryItem$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventoryItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1C = {
  components: {
    ExclamationCircleIcon: outline.ExclamationCircleIcon,
    CheckCircleIcon: outline.CheckCircleIcon,
    InventoryItem
  },
  props: {
    inventory: {
      type: Object,
      required: true
    },
    order: {
      type: Object,
      required: true
    }
  }
};
function _sfc_ssrRender$1A(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_CheckCircleIcon = vue.resolveComponent("CheckCircleIcon");
  const _component_ExclamationCircleIcon = vue.resolveComponent("ExclamationCircleIcon");
  const _component_inventory_item = vue.resolveComponent("inventory-item");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "" }, _attrs))}><!--[-->`);
  serverRenderer.ssrRenderList($props.inventory, (orderItem) => {
    _push(`<div class="min-w-0"><div class="flex items-center space-x-2 tracking-wider uppercase text-gray-900 px-1 my-2 py-2 border-b border-t min-w-0"><div${serverRenderer.ssrRenderAttr("data-tip", `${orderItem.is_matched ? "Matched to Inventory: " : "NOT Matched to Inventory: "}${orderItem.size_name} - ${orderItem.product_name}`)} class="mr-0 tooltip tooltip-right md:tooltip-bottom">`);
    if (orderItem.is_matched) {
      _push(serverRenderer.ssrRenderComponent(_component_CheckCircleIcon, { class: "w-6 h-6 text-green-500 stroke-current mr-0" }, null, _parent));
    } else {
      _push(serverRenderer.ssrRenderComponent(_component_ExclamationCircleIcon, { class: "w-6 h-6 text-yellow-500 stroke-current mr-0" }, null, _parent));
    }
    _push(`</div><div class="truncate w-1/2 ml-0">${serverRenderer.ssrInterpolate(orderItem.size_name)} - ${serverRenderer.ssrInterpolate(orderItem.product_name)}</div><div class="">${serverRenderer.ssrInterpolate(`Qty: ${orderItem.quantity}`)}</div></div><div class="flex flex-wrap"><!--[-->`);
    serverRenderer.ssrRenderList(orderItem.archived_inventory, (archivedItem) => {
      _push(serverRenderer.ssrRenderComponent(_component_inventory_item, {
        key: archivedItem.id,
        archivedItem,
        order: $props.order,
        quantity_left: orderItem.unmatched_quantity
      }, null, _parent));
    });
    _push(`<!--]-->`);
    if (!orderItem.archived_inventory.length) {
      _push(`<div class="px-1 py-1 text-sm text-gray-700"> No Inventory matched. </div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div></div>`);
  });
  _push(`<!--]--></div>`);
}
const _sfc_setup$1C = _sfc_main$1C.setup;
_sfc_main$1C.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/InventoryMatchedList.vue");
  return _sfc_setup$1C ? _sfc_setup$1C(props, ctx) : void 0;
};
var InventoryMatchedList = /* @__PURE__ */ _export_sfc(_sfc_main$1C, [["ssrRender", _sfc_ssrRender$1A]]);
var InventoryMatchedList$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventoryMatchedList
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1B = {
  components: {
    SearchInput,
    LoadingState,
    ConfirmationModal: JetConfirmationModal,
    DialogModal: JetDialogModal,
    RadioListSelect,
    InventoryMatchedList
  },
  props: {
    order: {
      type: Object,
      required: true
    }
  },
  data() {
    return {
      item: this.$inertia.form({
        inventory_id: null,
        order_item_id: null,
        quantity_removed: 1
      }),
      loading: true,
      inventory: [],
      confirm_quantity: false,
      inventoryItem: null,
      matches: [],
      match: null,
      selectingMatch: false,
      creatingMatch: false,
      message: null,
      errored: false
    };
  },
  computed: {
    unmatchedMatches() {
      return this.matches.filter((match) => {
        return !match.is_matched;
      });
    },
    matchedMatches() {
      return this.matches.filter((match) => {
        return match.is_matched;
      });
    },
    thereAreUnmatchedMatches() {
      return this.unmatchedMatches.length > 0;
    },
    needToConfirmQuantity() {
      var _a;
      return ((_a = this.match) == null ? void 0 : _a.unmatched_quantity) < this.item.quantity_removed;
    },
    orderItemQuantity() {
      var _a, _b;
      return (_b = (_a = this.match) == null ? void 0 : _a.quantity) != null ? _b : 0;
    },
    quantityToAdd() {
      var _a, _b;
      return (_b = (_a = this.item) == null ? void 0 : _a.quantity_removed) != null ? _b : 0;
    },
    orderItemQuantityAfterAdding() {
      var _a;
      return parseInt(this.quantityToAdd) - parseInt((_a = this.match) == null ? void 0 : _a.unmatched_quantity) + this.orderItemQuantity;
    }
  },
  mounted() {
    this.getInventory();
  },
  watch: {
    selectingMatch(value) {
      if (value) {
        this.$nextTick(() => {
          document.getElementById("match").focus();
        });
      }
    },
    creatingMatch(value) {
      if (value) {
        this.$nextTick(() => {
          document.getElementById("quantity-confirm").focus();
        });
      }
    },
    match(newValue) {
      if (newValue) {
        this.item.order_item_id = newValue.id;
      } else {
        this.item.order_item_id = null;
      }
    },
    "item.inventory_id"() {
      this.item.errors = {};
      this.message = null;
      this.inventoryItem = null;
      this.match = null;
    }
  },
  methods: {
    getInventory() {
      axios__default["default"].get(route("sales.inventory.index", this.order)).then((response) => {
        this.inventory = response.data;
      }).catch((error) => {
        this.errored = true;
        console.error(error);
      }).finally(() => {
        this.loading = false;
      });
    },
    searchInventory() {
      axios__default["default"].get(
        route(
          "sales.inventory.show",
          [this.order, this.item.inventory_id],
          {
            quantity: this.item.quantity_removed
          }
        )
      ).then((response) => {
        this.inventoryItem = response.data.inventory;
        this.message = response.data.message;
        this.matches = response.data.matches;
        this.match = response.data.match;
      }).catch((error) => {
        this.errored = true;
        this.message = error.response.data.message;
      }).finally(() => {
        var _a;
        if (this.match && this.inventoryItem.quantity == 1) {
          this.addInventory();
        } else if (((_a = this.matches) == null ? void 0 : _a.length) > 0) {
          this.showMatchOptions();
        } else if (this.inventoryItem) {
          this.showAddLineItemDialog();
        }
      });
    },
    addInventory() {
      if (this.match || this.creatingMatch) {
        this.item.transform((data) => ({
          ...data,
          confirm_quantity: this.confirm_quantity
        })).post(route("sales.inventory.store", this.order), {
          preserveState: true,
          onSuccess: () => {
            this.item.inventory_id = null;
            this.item.quantity_removed = 1;
            this.match = null;
            this.creatingMatch = false;
            this.selectingMatch = false;
            this.$inertia.visit(
              route("orders.show", this.order),
              {
                preserveScroll: true,
                onSuccess: () => {
                  document.getElementById("search").focus();
                }
              }
            );
          }
        });
        this.$emit("add", this.inventory);
      }
    },
    confirmAddLineItem() {
      this.creatingMatch = true;
      this.selectingMatch = false;
    },
    showMatchOptions() {
      this.selectingMatch = true;
    },
    showAddLineItemDialog() {
      this.creatingMatch = true;
    },
    updateMatch(match) {
      this.match = match;
    }
  }
};
function _sfc_ssrRender$1z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_search_input = vue.resolveComponent("search-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_InventoryMatchedList = vue.resolveComponent("InventoryMatchedList");
  const _component_loading_state = vue.resolveComponent("loading-state");
  const _component_confirmation_modal = vue.resolveComponent("confirmation-modal");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_dialog_modal = vue.resolveComponent("dialog-modal");
  const _component_RadioListSelect = vue.resolveComponent("RadioListSelect");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, vue.mergeProps({ class: "w-full" }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Inventory Detail `);
      } else {
        return [
          vue.createTextVNode(" Inventory Detail ")
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="space-y-4 min-w-0 clear-both"${_scopeId}><form class="grid sticky top-0 bg-white p-1 pt-0 z-10"${_scopeId}><div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          class: "mb-2",
          style: !$data.selectingMatch ? null : { display: "none" },
          message: $data.message
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          class: "mb-2",
          style: !$data.selectingMatch ? null : { display: "none" },
          message: $data.item.errors.quantity_removed
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex items-end space-x-2"${_scopeId}><div class="form-control"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "search" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Inventory ID`);
            } else {
              return [
                vue.createTextVNode("Inventory ID")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_search_input, {
          onFocus: ($event) => $event.target.select(),
          placeholder: "Search by Inventory ID",
          required: "",
          modelValue: $data.item.inventory_id,
          "onUpdate:modelValue": ($event) => $data.item.inventory_id = $event
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: "text-center"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Add `);
            } else {
              return [
                vue.createTextVNode(" Add ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
        _push2(serverRenderer.ssrRenderComponent(_component_InventoryMatchedList, {
          inventory: $data.inventory,
          order: $props.order
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_loading_state, { loading: $data.loading }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_confirmation_modal, {
          onClose: ($event) => $data.creatingMatch = false,
          show: $data.creatingMatch
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Add ${serverRenderer.ssrInterpolate($data.inventoryItem.product.name)}?`);
            } else {
              return [
                vue.createTextVNode(" Add " + vue.toDisplayString($data.inventoryItem.product.name) + "?", 1)
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<form${_scopeId2}> Do you want to add a new line item of ${serverRenderer.ssrInterpolate($data.inventoryItem.product.name)} in size ${serverRenderer.ssrInterpolate($data.inventoryItem.size.name)} to the order? <div class="border-t pt-4 mt-4"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
                message: $data.item.errors.quantity_removed
              }, null, _parent3, _scopeId2));
              _push3(`<div class="flex items-center justify-between mt-2"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_label, {
                class: "font-bold",
                for: "quantity-confirm"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Quantity:`);
                  } else {
                    return [
                      vue.createTextVNode("Quantity:")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input, {
                type: "number",
                id: "quantity-confirm",
                modelValue: $data.item.quantity_removed,
                "onUpdate:modelValue": ($event) => $data.item.quantity_removed = $event,
                modelModifiers: { number: true },
                error: $data.item.errors.quantity_removed ? true : false
              }, null, _parent3, _scopeId2));
              _push3(`</div></div></form>`);
            } else {
              return [
                vue.createVNode("form", {
                  onKeydown: vue.withKeys(vue.withModifiers($options.addInventory, ["prevent"]), ["enter"])
                }, [
                  vue.createTextVNode(" Do you want to add a new line item of " + vue.toDisplayString($data.inventoryItem.product.name) + " in size " + vue.toDisplayString($data.inventoryItem.size.name) + " to the order? ", 1),
                  vue.createVNode("div", { class: "border-t pt-4 mt-4" }, [
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.item.errors.quantity_removed
                    }, null, 8, ["message"]),
                    vue.createVNode("div", { class: "flex items-center justify-between mt-2" }, [
                      vue.createVNode(_component_jet_label, {
                        class: "font-bold",
                        for: "quantity-confirm"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Quantity:")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_jet_input, {
                        type: "number",
                        id: "quantity-confirm",
                        modelValue: $data.item.quantity_removed,
                        "onUpdate:modelValue": ($event) => $data.item.quantity_removed = $event,
                        modelModifiers: { number: true },
                        error: $data.item.errors.quantity_removed ? true : false
                      }, null, 8, ["modelValue", "onUpdate:modelValue", "error"])
                    ])
                  ])
                ], 40, ["onKeydown"])
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="flex items-center justify-between"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                type: "button",
                onClick: ($event) => $data.creatingMatch = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_button, {
                type: "submit",
                disabled: !$data.creatingMatch,
                onClick: $options.addInventory
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Yes, Add Item `);
                  } else {
                    return [
                      vue.createTextVNode(" Yes, Add Item ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                vue.createVNode("div", { class: "flex items-center justify-between" }, [
                  vue.createVNode(_component_jet_secondary_button, {
                    type: "button",
                    onClick: ($event) => $data.creatingMatch = false
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }, 8, ["onClick"]),
                  vue.createVNode(_component_jet_button, {
                    type: "submit",
                    disabled: !$data.creatingMatch,
                    onClick: $options.addInventory
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Yes, Add Item ")
                    ]),
                    _: 1
                  }, 8, ["disabled", "onClick"])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_dialog_modal, {
          onClose: ($event) => $data.selectingMatch = false,
          show: $data.selectingMatch
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${serverRenderer.ssrInterpolate(this.thereAreUnmatchedMatches ? "Select order item to match" : "Select order item to match and increase quantity of")}`);
            } else {
              return [
                vue.createTextVNode(vue.toDisplayString(this.thereAreUnmatchedMatches ? "Select order item to match" : "Select order item to match and increase quantity of"), 1)
              ];
            }
          }),
          description: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div${_scopeId2}> Select the order item to match ID #${serverRenderer.ssrInterpolate($data.inventoryItem.id)} inventory item: ${serverRenderer.ssrInterpolate($data.inventoryItem.product.name)} in size ${serverRenderer.ssrInterpolate($data.inventoryItem.size.name)} to. </div><div class="font-bold"${_scopeId2}>${serverRenderer.ssrInterpolate(this.thereAreUnmatchedMatches ? "" : "This will increase the quantity of the order item.")}</div>`);
            } else {
              return [
                vue.createVNode("div", null, " Select the order item to match ID #" + vue.toDisplayString($data.inventoryItem.id) + " inventory item: " + vue.toDisplayString($data.inventoryItem.product.name) + " in size " + vue.toDisplayString($data.inventoryItem.size.name) + " to. ", 1),
                vue.createVNode("div", { class: "font-bold" }, vue.toDisplayString(this.thereAreUnmatchedMatches ? "" : "This will increase the quantity of the order item."), 1)
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<form${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
                class: "mb-4 px-1",
                message: $data.message
              }, null, _parent3, _scopeId2));
              if ($options.thereAreUnmatchedMatches) {
                _push3(serverRenderer.ssrRenderComponent(_component_RadioListSelect, {
                  modelValue: $data.match,
                  "onUpdate:modelValue": ($event) => $data.match = $event,
                  id: "match",
                  label: "Select Match",
                  nameValue: "product_name",
                  descriptionValue: "size_name",
                  options: $options.unmatchedMatches,
                  selectedItem: $data.match,
                  onUpdate: $options.updateMatch,
                  class: "mb-4"
                }, null, _parent3, _scopeId2));
              } else {
                _push3(serverRenderer.ssrRenderComponent(_component_RadioListSelect, {
                  modelValue: $data.match,
                  "onUpdate:modelValue": ($event) => $data.match = $event,
                  id: "match",
                  label: "Select Match",
                  nameValue: "product_name",
                  descriptionValue: "size_name",
                  options: $options.matchedMatches,
                  selectedItem: $data.match,
                  onUpdate: $options.updateMatch,
                  class: "mb-4"
                }, null, _parent3, _scopeId2));
              }
              _push3(`<div class="mt-2 grid gap-4"${_scopeId2}><div${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
                message: $data.item.errors.quantity_removed
              }, null, _parent3, _scopeId2));
              _push3(`<div class="flex items-center justify-between mt-2"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_label, {
                class: "font-bold",
                for: "quantity"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Quantity:`);
                  } else {
                    return [
                      vue.createTextVNode("Quantity:")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input, {
                id: "quantity",
                type: "number",
                error: $data.item.errors.quantity_removed ? true : false,
                modelValue: $data.item.quantity_removed,
                "onUpdate:modelValue": ($event) => $data.item.quantity_removed = $event,
                modelModifiers: { number: true }
              }, null, _parent3, _scopeId2));
              _push3(`</div></div><div${_scopeId2}>`);
              if ($options.needToConfirmQuantity) {
                _push3(`<div class="flex items-center mb-2"${_scopeId2}>`);
                _push3(serverRenderer.ssrRenderComponent(_component_jet_label, {
                  class: {
                    "text-red-500": $options.needToConfirmQuantity && !$data.confirm_quantity
                  },
                  for: "confirm_quantity"
                }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`Increase quantity of order item from ${serverRenderer.ssrInterpolate($options.orderItemQuantity)} to ${serverRenderer.ssrInterpolate($options.orderItemQuantityAfterAdding)}?`);
                    } else {
                      return [
                        vue.createTextVNode("Increase quantity of order item from " + vue.toDisplayString($options.orderItemQuantity) + " to " + vue.toDisplayString($options.orderItemQuantityAfterAdding) + "?", 1)
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
                  id: "confirm_quantity",
                  modelValue: $data.confirm_quantity,
                  "onUpdate:modelValue": ($event) => $data.confirm_quantity = $event
                }, null, _parent3, _scopeId2));
                _push3(`</div>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
                message: $data.item.errors.confirm_quantity
              }, null, _parent3, _scopeId2));
              _push3(`</div></div></form>`);
            } else {
              return [
                vue.createVNode("form", {
                  onKeydown: vue.withKeys(vue.withModifiers($options.addInventory, ["prevent"]), ["enter"])
                }, [
                  vue.createVNode(_component_jet_input_error, {
                    class: "mb-4 px-1",
                    message: $data.message
                  }, null, 8, ["message"]),
                  $options.thereAreUnmatchedMatches ? (vue.openBlock(), vue.createBlock(_component_RadioListSelect, {
                    key: 0,
                    modelValue: $data.match,
                    "onUpdate:modelValue": ($event) => $data.match = $event,
                    id: "match",
                    label: "Select Match",
                    nameValue: "product_name",
                    descriptionValue: "size_name",
                    options: $options.unmatchedMatches,
                    selectedItem: $data.match,
                    onUpdate: $options.updateMatch,
                    class: "mb-4"
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "options", "selectedItem", "onUpdate"])) : (vue.openBlock(), vue.createBlock(_component_RadioListSelect, {
                    key: 1,
                    modelValue: $data.match,
                    "onUpdate:modelValue": ($event) => $data.match = $event,
                    id: "match",
                    label: "Select Match",
                    nameValue: "product_name",
                    descriptionValue: "size_name",
                    options: $options.matchedMatches,
                    selectedItem: $data.match,
                    onUpdate: $options.updateMatch,
                    class: "mb-4"
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "options", "selectedItem", "onUpdate"])),
                  vue.createVNode("div", { class: "mt-2 grid gap-4" }, [
                    vue.createVNode("div", null, [
                      vue.createVNode(_component_jet_input_error, {
                        message: $data.item.errors.quantity_removed
                      }, null, 8, ["message"]),
                      vue.createVNode("div", { class: "flex items-center justify-between mt-2" }, [
                        vue.createVNode(_component_jet_label, {
                          class: "font-bold",
                          for: "quantity"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Quantity:")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_jet_input, {
                          id: "quantity",
                          type: "number",
                          error: $data.item.errors.quantity_removed ? true : false,
                          modelValue: $data.item.quantity_removed,
                          "onUpdate:modelValue": ($event) => $data.item.quantity_removed = $event,
                          modelModifiers: { number: true }
                        }, null, 8, ["error", "modelValue", "onUpdate:modelValue"])
                      ])
                    ]),
                    vue.createVNode("div", null, [
                      $options.needToConfirmQuantity ? (vue.openBlock(), vue.createBlock("div", {
                        key: 0,
                        class: "flex items-center mb-2"
                      }, [
                        vue.createVNode(_component_jet_label, {
                          class: {
                            "text-red-500": $options.needToConfirmQuantity && !$data.confirm_quantity
                          },
                          for: "confirm_quantity"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Increase quantity of order item from " + vue.toDisplayString($options.orderItemQuantity) + " to " + vue.toDisplayString($options.orderItemQuantityAfterAdding) + "?", 1)
                          ]),
                          _: 1
                        }, 8, ["class"]),
                        vue.createVNode(_component_jet_checkbox, {
                          id: "confirm_quantity",
                          modelValue: $data.confirm_quantity,
                          "onUpdate:modelValue": ($event) => $data.confirm_quantity = $event
                        }, null, 8, ["modelValue", "onUpdate:modelValue"])
                      ])) : vue.createCommentVNode("", true),
                      vue.createVNode(_component_jet_input_error, {
                        message: $data.item.errors.confirm_quantity
                      }, null, 8, ["message"])
                    ])
                  ])
                ], 40, ["onKeydown"])
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="flex flex-col space-y-2 md:space-y-0 md:flex-row items-center md:justify-between"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                type: "button",
                onClick: ($event) => $data.selectingMatch = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                type: "button",
                onClick: $options.confirmAddLineItem,
                class: "md:mr-auto md:ml-2"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Add New Order Line Item`);
                  } else {
                    return [
                      vue.createTextVNode(" Add New Order Line Item")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_button, {
                type: "submit",
                disabled: !$data.match,
                onClick: $options.addInventory
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Match Item `);
                  } else {
                    return [
                      vue.createTextVNode(" Match Item ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                vue.createVNode("div", { class: "flex flex-col space-y-2 md:space-y-0 md:flex-row items-center md:justify-between" }, [
                  vue.createVNode(_component_jet_secondary_button, {
                    type: "button",
                    onClick: ($event) => $data.selectingMatch = false
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }, 8, ["onClick"]),
                  vue.createVNode(_component_jet_secondary_button, {
                    type: "button",
                    onClick: $options.confirmAddLineItem,
                    class: "md:mr-auto md:ml-2"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Add New Order Line Item")
                    ]),
                    _: 1
                  }, 8, ["onClick"]),
                  vue.createVNode(_component_jet_button, {
                    type: "submit",
                    disabled: !$data.match,
                    onClick: $options.addInventory
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Match Item ")
                    ]),
                    _: 1
                  }, 8, ["disabled", "onClick"])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "space-y-4 min-w-0 clear-both" }, [
            vue.createVNode("form", {
              onSubmit: vue.withModifiers($options.searchInventory, ["prevent"]),
              class: "grid sticky top-0 bg-white p-1 pt-0 z-10"
            }, [
              vue.createVNode("div", null, [
                vue.withDirectives(vue.createVNode(_component_jet_input_error, {
                  class: "mb-2",
                  message: $data.message
                }, null, 8, ["message"]), [
                  [vue.vShow, !$data.selectingMatch]
                ]),
                vue.withDirectives(vue.createVNode(_component_jet_input_error, {
                  class: "mb-2",
                  message: $data.item.errors.quantity_removed
                }, null, 8, ["message"]), [
                  [vue.vShow, !$data.selectingMatch]
                ])
              ]),
              vue.createVNode("div", { class: "flex items-end space-x-2" }, [
                vue.createVNode("div", { class: "form-control" }, [
                  vue.createVNode(_component_jet_label, { for: "search" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Inventory ID")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_search_input, {
                    onFocus: ($event) => $event.target.select(),
                    placeholder: "Search by Inventory ID",
                    required: "",
                    modelValue: $data.item.inventory_id,
                    "onUpdate:modelValue": ($event) => $data.item.inventory_id = $event
                  }, null, 8, ["onFocus", "modelValue", "onUpdate:modelValue"])
                ]),
                vue.createVNode(_component_jet_button, {
                  type: "submit",
                  class: "text-center"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Add ")
                  ]),
                  _: 1
                })
              ])
            ], 40, ["onSubmit"]),
            vue.createVNode(_component_InventoryMatchedList, {
              inventory: $data.inventory,
              order: $props.order
            }, null, 8, ["inventory", "order"]),
            vue.createVNode(_component_loading_state, { loading: $data.loading }, null, 8, ["loading"])
          ]),
          vue.createVNode(_component_confirmation_modal, {
            onClose: ($event) => $data.creatingMatch = false,
            show: $data.creatingMatch
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Add " + vue.toDisplayString($data.inventoryItem.product.name) + "?", 1)
            ]),
            content: vue.withCtx(() => [
              vue.createVNode("form", {
                onKeydown: vue.withKeys(vue.withModifiers($options.addInventory, ["prevent"]), ["enter"])
              }, [
                vue.createTextVNode(" Do you want to add a new line item of " + vue.toDisplayString($data.inventoryItem.product.name) + " in size " + vue.toDisplayString($data.inventoryItem.size.name) + " to the order? ", 1),
                vue.createVNode("div", { class: "border-t pt-4 mt-4" }, [
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.item.errors.quantity_removed
                  }, null, 8, ["message"]),
                  vue.createVNode("div", { class: "flex items-center justify-between mt-2" }, [
                    vue.createVNode(_component_jet_label, {
                      class: "font-bold",
                      for: "quantity-confirm"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Quantity:")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      type: "number",
                      id: "quantity-confirm",
                      modelValue: $data.item.quantity_removed,
                      "onUpdate:modelValue": ($event) => $data.item.quantity_removed = $event,
                      modelModifiers: { number: true },
                      error: $data.item.errors.quantity_removed ? true : false
                    }, null, 8, ["modelValue", "onUpdate:modelValue", "error"])
                  ])
                ])
              ], 40, ["onKeydown"])
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode("div", { class: "flex items-center justify-between" }, [
                vue.createVNode(_component_jet_secondary_button, {
                  type: "button",
                  onClick: ($event) => $data.creatingMatch = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_button, {
                  type: "submit",
                  disabled: !$data.creatingMatch,
                  onClick: $options.addInventory
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Yes, Add Item ")
                  ]),
                  _: 1
                }, 8, ["disabled", "onClick"])
              ])
            ]),
            _: 1
          }, 8, ["onClose", "show"]),
          vue.createVNode(_component_dialog_modal, {
            onClose: ($event) => $data.selectingMatch = false,
            show: $data.selectingMatch
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(vue.toDisplayString(this.thereAreUnmatchedMatches ? "Select order item to match" : "Select order item to match and increase quantity of"), 1)
            ]),
            description: vue.withCtx(() => [
              vue.createVNode("div", null, " Select the order item to match ID #" + vue.toDisplayString($data.inventoryItem.id) + " inventory item: " + vue.toDisplayString($data.inventoryItem.product.name) + " in size " + vue.toDisplayString($data.inventoryItem.size.name) + " to. ", 1),
              vue.createVNode("div", { class: "font-bold" }, vue.toDisplayString(this.thereAreUnmatchedMatches ? "" : "This will increase the quantity of the order item."), 1)
            ]),
            content: vue.withCtx(() => [
              vue.createVNode("form", {
                onKeydown: vue.withKeys(vue.withModifiers($options.addInventory, ["prevent"]), ["enter"])
              }, [
                vue.createVNode(_component_jet_input_error, {
                  class: "mb-4 px-1",
                  message: $data.message
                }, null, 8, ["message"]),
                $options.thereAreUnmatchedMatches ? (vue.openBlock(), vue.createBlock(_component_RadioListSelect, {
                  key: 0,
                  modelValue: $data.match,
                  "onUpdate:modelValue": ($event) => $data.match = $event,
                  id: "match",
                  label: "Select Match",
                  nameValue: "product_name",
                  descriptionValue: "size_name",
                  options: $options.unmatchedMatches,
                  selectedItem: $data.match,
                  onUpdate: $options.updateMatch,
                  class: "mb-4"
                }, null, 8, ["modelValue", "onUpdate:modelValue", "options", "selectedItem", "onUpdate"])) : (vue.openBlock(), vue.createBlock(_component_RadioListSelect, {
                  key: 1,
                  modelValue: $data.match,
                  "onUpdate:modelValue": ($event) => $data.match = $event,
                  id: "match",
                  label: "Select Match",
                  nameValue: "product_name",
                  descriptionValue: "size_name",
                  options: $options.matchedMatches,
                  selectedItem: $data.match,
                  onUpdate: $options.updateMatch,
                  class: "mb-4"
                }, null, 8, ["modelValue", "onUpdate:modelValue", "options", "selectedItem", "onUpdate"])),
                vue.createVNode("div", { class: "mt-2 grid gap-4" }, [
                  vue.createVNode("div", null, [
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.item.errors.quantity_removed
                    }, null, 8, ["message"]),
                    vue.createVNode("div", { class: "flex items-center justify-between mt-2" }, [
                      vue.createVNode(_component_jet_label, {
                        class: "font-bold",
                        for: "quantity"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Quantity:")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_jet_input, {
                        id: "quantity",
                        type: "number",
                        error: $data.item.errors.quantity_removed ? true : false,
                        modelValue: $data.item.quantity_removed,
                        "onUpdate:modelValue": ($event) => $data.item.quantity_removed = $event,
                        modelModifiers: { number: true }
                      }, null, 8, ["error", "modelValue", "onUpdate:modelValue"])
                    ])
                  ]),
                  vue.createVNode("div", null, [
                    $options.needToConfirmQuantity ? (vue.openBlock(), vue.createBlock("div", {
                      key: 0,
                      class: "flex items-center mb-2"
                    }, [
                      vue.createVNode(_component_jet_label, {
                        class: {
                          "text-red-500": $options.needToConfirmQuantity && !$data.confirm_quantity
                        },
                        for: "confirm_quantity"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Increase quantity of order item from " + vue.toDisplayString($options.orderItemQuantity) + " to " + vue.toDisplayString($options.orderItemQuantityAfterAdding) + "?", 1)
                        ]),
                        _: 1
                      }, 8, ["class"]),
                      vue.createVNode(_component_jet_checkbox, {
                        id: "confirm_quantity",
                        modelValue: $data.confirm_quantity,
                        "onUpdate:modelValue": ($event) => $data.confirm_quantity = $event
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ])) : vue.createCommentVNode("", true),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.item.errors.confirm_quantity
                    }, null, 8, ["message"])
                  ])
                ])
              ], 40, ["onKeydown"])
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode("div", { class: "flex flex-col space-y-2 md:space-y-0 md:flex-row items-center md:justify-between" }, [
                vue.createVNode(_component_jet_secondary_button, {
                  type: "button",
                  onClick: ($event) => $data.selectingMatch = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_secondary_button, {
                  type: "button",
                  onClick: $options.confirmAddLineItem,
                  class: "md:mr-auto md:ml-2"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Add New Order Line Item")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_button, {
                  type: "submit",
                  disabled: !$data.match,
                  onClick: $options.addInventory
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Match Item ")
                  ]),
                  _: 1
                }, 8, ["disabled", "onClick"])
              ])
            ]),
            _: 1
          }, 8, ["onClose", "show"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1B = _sfc_main$1B.setup;
_sfc_main$1B.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/InventoryAdd.vue");
  return _sfc_setup$1B ? _sfc_setup$1B(props, ctx) : void 0;
};
var InventoryAdd = /* @__PURE__ */ _export_sfc(_sfc_main$1B, [["ssrRender", _sfc_ssrRender$1z]]);
var InventoryAdd$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventoryAdd
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1A = {
  components: {
    SparklesIcon: outline.SparklesIcon
  }
};
function _sfc_ssrRender$1y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_SparklesIcon = vue.resolveComponent("SparklesIcon");
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "btn btn-sm btn-outline pl-2 flex items-center" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_SparklesIcon, { class: "w-6 h-6 stroke-current mr-2" }, null, _parent));
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$1A = _sfc_main$1A.setup;
_sfc_main$1A.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Buttons/ActionButton.vue");
  return _sfc_setup$1A ? _sfc_setup$1A(props, ctx) : void 0;
};
var ActionButton = /* @__PURE__ */ _export_sfc(_sfc_main$1A, [["ssrRender", _sfc_ssrRender$1y]]);
const _sfc_main$1z = {
  components: {
    ActionButton,
    DialogModal: JetDialogModal,
    ErrorMessage
  },
  props: {
    order: {
      type: Object,
      required: true
    }
  },
  data() {
    return {
      customConvert: false,
      items: [],
      errorMessage: "",
      availableItems: this.order.items
    };
  },
  computed: {
    convertText() {
      return this.order.is_quote ? "Convert to Order" : "Convert to Quote";
    }
  },
  methods: {
    convert() {
      if (this.customConvert && !this.items.length) {
        this.errorMessage = "Please select items to convert.";
        return;
      }
      this.$inertia.post(route("sales.convert", this.order.id), {
        items: this.items
      });
    },
    showCustomConvert() {
      this.customConvert = true;
    },
    addOrRemoveItem(item) {
      if (this.isAdded(item)) {
        this.items = this.items.filter(
          (oldItem) => oldItem.id !== item.id
        );
      } else {
        this.items.push(item);
      }
    },
    isAdded(item) {
      return this.items.find((i2) => i2.id === item.id);
    }
  }
};
function _sfc_ssrRender$1x(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ActionButton = vue.resolveComponent("ActionButton");
  const _component_dialog_modal = vue.resolveComponent("dialog-modal");
  const _component_ErrorMessage = vue.resolveComponent("ErrorMessage");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<!--[--><div class="dropdown dropdown-hover dropdown-end">`);
  _push(serverRenderer.ssrRenderComponent(_component_ActionButton, { class: "bg-white" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Actions`);
      } else {
        return [
          vue.createTextVNode("Actions")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<ul tabindex="0" class="shadow menu dropdown-content bg-base-100 rounded-lg text-right w-52">`);
  if (!$props.order.is_quote || $props.order.status == "Pending") {
    _push(`<li><a class="justify-end px-4 capitalize">${serverRenderer.ssrInterpolate($options.convertText)}</a></li>`);
  } else {
    _push(`<!---->`);
  }
  if ($props.order.is_quote) {
    _push(`<li><a class="justify-end px-4">New Order from Quote</a></li>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</ul></div>`);
  _push(serverRenderer.ssrRenderComponent(_component_dialog_modal, {
    show: $data.customConvert,
    onClose: ($event) => $data.customConvert = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Select order items to convert to order. `);
      } else {
        return [
          vue.createTextVNode(" Select order items to convert to order. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}>`);
        if ($data.errorMessage) {
          _push2(serverRenderer.ssrRenderComponent(_component_ErrorMessage, {
            title: $data.errorMessage,
            message: $data.errorMessage
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`<!--[-->`);
        serverRenderer.ssrRenderList($data.availableItems, (item) => {
          _push2(`<div class="flex items-center py-2"${_scopeId}><span${_scopeId}>${serverRenderer.ssrInterpolate(item.size_name)} ${serverRenderer.ssrInterpolate(item.product_name)}</span><form class="ml-auto flex items-center"${_scopeId}><label class="input-group input-group-sm"${_scopeId}><span class="label-text"${_scopeId}>Qty</span><input${serverRenderer.ssrIncludeBooleanAttr($options.isAdded(item)) ? " disabled" : ""} type="number" min="0"${serverRenderer.ssrRenderAttr("value", item.quantity)} class="input input-bordered input-sm w-20"${_scopeId}></label>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
            type: "submit",
            class: ["ml-2 btn-sm", $options.isAdded(item) ? "btn-error" : ""]
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                if ($options.isAdded(item)) {
                  _push3(`<span${_scopeId2}>Remove</span>`);
                } else {
                  _push3(`<span${_scopeId2}>Add</span>`);
                }
              } else {
                return [
                  $options.isAdded(item) ? (vue.openBlock(), vue.createBlock("span", { key: 0 }, "Remove")) : (vue.openBlock(), vue.createBlock("span", { key: 1 }, "Add"))
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</form></div>`);
        });
        _push2(`<!--]--></div>`);
      } else {
        return [
          vue.createVNode("div", null, [
            $data.errorMessage ? (vue.openBlock(), vue.createBlock(_component_ErrorMessage, {
              key: 0,
              title: $data.errorMessage,
              message: $data.errorMessage
            }, null, 8, ["title", "message"])) : vue.createCommentVNode("", true),
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.availableItems, (item) => {
              return vue.openBlock(), vue.createBlock("div", {
                key: item.id,
                class: "flex items-center py-2"
              }, [
                vue.createVNode("span", null, vue.toDisplayString(item.size_name) + " " + vue.toDisplayString(item.product_name), 1),
                vue.createVNode("form", {
                  onSubmit: vue.withModifiers(($event) => $options.addOrRemoveItem(item), ["prevent"]),
                  class: "ml-auto flex items-center"
                }, [
                  vue.createVNode("label", { class: "input-group input-group-sm" }, [
                    vue.createVNode("span", { class: "label-text" }, "Qty"),
                    vue.withDirectives(vue.createVNode("input", {
                      disabled: $options.isAdded(item),
                      type: "number",
                      min: "0",
                      "onUpdate:modelValue": ($event) => item.quantity = $event,
                      class: "input input-bordered input-sm w-20"
                    }, null, 8, ["disabled", "onUpdate:modelValue"]), [
                      [vue.vModelText, item.quantity]
                    ])
                  ]),
                  vue.createVNode(_component_jet_button, {
                    type: "submit",
                    class: ["ml-2 btn-sm", $options.isAdded(item) ? "btn-error" : ""]
                  }, {
                    default: vue.withCtx(() => [
                      $options.isAdded(item) ? (vue.openBlock(), vue.createBlock("span", { key: 0 }, "Remove")) : (vue.openBlock(), vue.createBlock("span", { key: 1 }, "Add"))
                    ]),
                    _: 2
                  }, 1032, ["class"])
                ], 40, ["onSubmit"])
              ]);
            }), 128))
          ])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, { onClick: $options.convert }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Create Order`);
            } else {
              return [
                vue.createTextVNode("Create Order")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, { onClick: $options.convert }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Create Order")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$1z = _sfc_main$1z.setup;
_sfc_main$1z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/ConvertSale.vue");
  return _sfc_setup$1z ? _sfc_setup$1z(props, ctx) : void 0;
};
var ConvertSale = /* @__PURE__ */ _export_sfc(_sfc_main$1z, [["ssrRender", _sfc_ssrRender$1x]]);
var ConvertSale$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ConvertSale
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1y = {
  components: {
    PrintButton,
    ConvertSale
  },
  props: {
    order: {
      type: Object,
      required: true
    }
  },
  computed: {
    show() {
      return true;
    }
  },
  methods: {
    printOrder() {
      this.showPopup(route("orders.print", this.order.id), "Print");
    },
    printPickTicket() {
      this.showPopup(
        route("orders.print", {
          sale: this.order,
          template: "pick_ticket"
        }),
        "Print"
      );
    }
  }
};
function _sfc_ssrRender$1w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_PrintButton = vue.resolveComponent("PrintButton");
  const _component_convert_sale = vue.resolveComponent("convert-sale");
  if ($options.show) {
    _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "flex flex-wrap items-center px-4 lg:px-0 fixed z-50 top-20 right-4 sm:right-6 lg:static" }, _attrs))}>`);
    if ($props.order.items.length > 0) {
      _push(`<div class="dropdown dropdown-hover dropdown-end mr-2">`);
      _push(serverRenderer.ssrRenderComponent(_component_PrintButton, { class: "bg-white" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Print`);
          } else {
            return [
              vue.createTextVNode("Print")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<ul tabindex="0" class="shadow menu dropdown-content bg-base-100 rounded-lg text-right w-52"><li><a class="justify-end px-4 capitalize">${serverRenderer.ssrInterpolate($props.order.type)}</a></li><li><a class="justify-end px-4">Pick Ticket</a></li></ul></div>`);
    } else {
      _push(`<!---->`);
    }
    _push(serverRenderer.ssrRenderComponent(_component_convert_sale, { order: $props.order }, null, _parent));
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$1y = _sfc_main$1y.setup;
_sfc_main$1y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/ActionCard.vue");
  return _sfc_setup$1y ? _sfc_setup$1y(props, ctx) : void 0;
};
var ActionCard = /* @__PURE__ */ _export_sfc(_sfc_main$1y, [["ssrRender", _sfc_ssrRender$1w]]);
var ActionCard$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ActionCard
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1x = {
  components: {
    DetailsSection,
    SmallLineItem,
    EmptyState,
    LoadingState
  },
  props: {
    order: {
      type: Object,
      required: true
    }
  },
  data() {
    return {
      loading: false,
      quote: null
    };
  },
  mounted() {
    this.getQuote();
  },
  methods: {
    getQuote() {
      this.loading = true;
      axios.get(route("api.orders.quote.show", this.order.id)).then((response) => {
        this.quote = response.data;
      }).catch((error) => {
        console.error(error.message);
      }).finally(() => {
        this.loading = false;
      });
    }
  }
};
function _sfc_ssrRender$1v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_LoadingState = vue.resolveComponent("LoadingState");
  const _component_SmallLineItem = vue.resolveComponent("SmallLineItem");
  const _component_EmptyState = vue.resolveComponent("EmptyState");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Linked Quote `);
      } else {
        return [
          vue.createTextVNode("Linked Quote ")
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_LoadingState, { loading: $data.loading }, null, _parent2, _scopeId));
        if ($data.quote) {
          _push2(serverRenderer.ssrRenderComponent(_component_SmallLineItem, {
            as: "a",
            target: "_blank",
            href: _ctx.route($data.quote.route, $data.quote.id),
            class: "flex items-center justify-between py-2"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex items-center"${_scopeId2}><span class="text-sm"${_scopeId2}>${serverRenderer.ssrInterpolate($data.quote.name)}</span><span class="text-sm ml-2"${_scopeId2}>${serverRenderer.ssrInterpolate(_ctx.formatDate($data.quote.created_at))}</span></div><div class="flex items-center"${_scopeId2}><span class="text-sm ml-2"${_scopeId2}>${serverRenderer.ssrInterpolate(_ctx.formatMoney($data.quote.total))}</span></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode("span", { class: "text-sm" }, vue.toDisplayString($data.quote.name), 1),
                    vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatDate($data.quote.created_at)), 1)
                  ]),
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatMoney($data.quote.total)), 1)
                  ])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(serverRenderer.ssrRenderComponent(_component_EmptyState, {
            heading: "This order was not created from a quote.",
            showIcon: false,
            align: "left",
            class: "p-0"
          }, null, _parent2, _scopeId));
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", null, [
            vue.createVNode(_component_LoadingState, { loading: $data.loading }, null, 8, ["loading"]),
            $data.quote ? (vue.openBlock(), vue.createBlock(_component_SmallLineItem, {
              key: 0,
              as: "a",
              target: "_blank",
              href: _ctx.route($data.quote.route, $data.quote.id),
              class: "flex items-center justify-between py-2"
            }, {
              default: vue.withCtx(() => [
                vue.createVNode("div", { class: "flex items-center" }, [
                  vue.createVNode("span", { class: "text-sm" }, vue.toDisplayString($data.quote.name), 1),
                  vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatDate($data.quote.created_at)), 1)
                ]),
                vue.createVNode("div", { class: "flex items-center" }, [
                  vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatMoney($data.quote.total)), 1)
                ])
              ]),
              _: 1
            }, 8, ["href"])) : (vue.openBlock(), vue.createBlock(_component_EmptyState, {
              key: 1,
              heading: "This order was not created from a quote.",
              showIcon: false,
              align: "left",
              class: "p-0"
            }))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1x = _sfc_main$1x.setup;
_sfc_main$1x.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/LinkedQuoteCard.vue");
  return _sfc_setup$1x ? _sfc_setup$1x(props, ctx) : void 0;
};
var LinkedQuoteCard = /* @__PURE__ */ _export_sfc(_sfc_main$1x, [["ssrRender", _sfc_ssrRender$1v]]);
var LinkedQuoteCard$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": LinkedQuoteCard
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1w = {
  components: {
    DetailsSection,
    SmallLineItem,
    EmptyState
  },
  props: {
    order: {
      type: Object,
      required: true
    }
  },
  data() {
    return {
      loading: false,
      errorMessage: null,
      orders: []
    };
  },
  computed: {
    hasOrders() {
      return this.orders.length > 0;
    }
  },
  mounted() {
    this.getOrders();
  },
  methods: {
    getOrders() {
      this.loading = true;
      axios__default["default"].get(
        route("api.orders.related.index", { order: this.order.id })
      ).then((response) => {
        this.orders = response.data;
      }).catch((error) => {
        this.errorMessage = error.message;
        this.orders = [];
      }).finally(() => {
        this.loading = false;
      });
    }
  }
};
function _sfc_ssrRender$1u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_SmallLineItem = vue.resolveComponent("SmallLineItem");
  const _component_EmptyState = vue.resolveComponent("EmptyState");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Related Orders `);
      } else {
        return [
          vue.createTextVNode("Related Orders ")
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($data.orders, (order) => {
          _push2(serverRenderer.ssrRenderComponent(_component_SmallLineItem, {
            as: "a",
            target: "_blank",
            href: _ctx.route(order.route, order.id),
            key: order.id,
            class: "flex items-center justify-between py-2"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex items-center"${_scopeId2}><span class="text-sm"${_scopeId2}>${serverRenderer.ssrInterpolate(order.name)}</span><span class="text-sm ml-2"${_scopeId2}>${serverRenderer.ssrInterpolate(_ctx.formatDate(order.created_at))}</span></div><div class="flex items-center"${_scopeId2}><span class="text-sm ml-2"${_scopeId2}>${serverRenderer.ssrInterpolate(_ctx.formatMoney(order.total))}</span></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode("span", { class: "text-sm" }, vue.toDisplayString(order.name), 1),
                    vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatDate(order.created_at)), 1)
                  ]),
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatMoney(order.total)), 1)
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]-->`);
        if (!$data.orders.length) {
          _push2(serverRenderer.ssrRenderComponent(_component_EmptyState, {
            heading: "No other orders created from this quote.",
            showIcon: false,
            align: "left",
            class: "p-0"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", null, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.orders, (order) => {
              return vue.openBlock(), vue.createBlock(_component_SmallLineItem, {
                as: "a",
                target: "_blank",
                href: _ctx.route(order.route, order.id),
                key: order.id,
                class: "flex items-center justify-between py-2"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode("span", { class: "text-sm" }, vue.toDisplayString(order.name), 1),
                    vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatDate(order.created_at)), 1)
                  ]),
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatMoney(order.total)), 1)
                  ])
                ]),
                _: 2
              }, 1032, ["href"]);
            }), 128)),
            !$data.orders.length ? (vue.openBlock(), vue.createBlock(_component_EmptyState, {
              key: 0,
              heading: "No other orders created from this quote.",
              showIcon: false,
              align: "left",
              class: "p-0"
            })) : vue.createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1w = _sfc_main$1w.setup;
_sfc_main$1w.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/RelatedOrdersCard.vue");
  return _sfc_setup$1w ? _sfc_setup$1w(props, ctx) : void 0;
};
var RelatedOrdersCard = /* @__PURE__ */ _export_sfc(_sfc_main$1w, [["ssrRender", _sfc_ssrRender$1u]]);
var RelatedOrdersCard$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": RelatedOrdersCard
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1v = {
  components: {
    OrdersLayout,
    OrderUpdate,
    OrderDelete,
    InventoryAdd,
    ActionCard,
    LinkedQuoteCard,
    RelatedOrdersCard
  },
  props: {
    order: Object,
    items: Array,
    priceLevels: Array,
    customers: Array
  },
  data() {
    return {
      editingInventory: false
    };
  }
};
function _sfc_ssrRender$1t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_OrdersLayout = vue.resolveComponent("OrdersLayout");
  const _component_OrderUpdate = vue.resolveComponent("OrderUpdate");
  const _component_ActionCard = vue.resolveComponent("ActionCard");
  const _component_InventoryAdd = vue.resolveComponent("InventoryAdd");
  const _component_LinkedQuoteCard = vue.resolveComponent("LinkedQuoteCard");
  const _component_RelatedOrdersCard = vue.resolveComponent("RelatedOrdersCard");
  const _component_OrderDelete = vue.resolveComponent("OrderDelete");
  _push(serverRenderer.ssrRenderComponent(_component_OrdersLayout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="lg:flex"${_scopeId}><div class="lg:w-3/4 lg:mr-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_OrderUpdate, {
          order: $props.order,
          customers: $props.customers,
          priceLevels: $props.priceLevels
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="lg:w-1/4 mt-4 lg:mt-0 space-y-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_ActionCard, { order: $props.order }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_InventoryAdd, {
          order: $props.order,
          class: ""
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_LinkedQuoteCard, { order: $props.order }, null, _parent2, _scopeId));
        if ($props.order.from_quote_id) {
          _push2(serverRenderer.ssrRenderComponent(_component_RelatedOrdersCard, { order: $props.order }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_OrderDelete, { order: $props.order }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "lg:flex" }, [
            vue.createVNode("div", { class: "lg:w-3/4 lg:mr-6" }, [
              vue.createVNode(_component_OrderUpdate, {
                order: $props.order,
                customers: $props.customers,
                priceLevels: $props.priceLevels
              }, null, 8, ["order", "customers", "priceLevels"])
            ]),
            vue.createVNode("div", { class: "lg:w-1/4 mt-4 lg:mt-0 space-y-4" }, [
              vue.createVNode(_component_ActionCard, { order: $props.order }, null, 8, ["order"]),
              vue.createVNode(_component_InventoryAdd, {
                order: $props.order,
                class: ""
              }, null, 8, ["order"]),
              vue.createVNode(_component_LinkedQuoteCard, { order: $props.order }, null, 8, ["order"]),
              $props.order.from_quote_id ? (vue.openBlock(), vue.createBlock(_component_RelatedOrdersCard, {
                key: 0,
                order: $props.order
              }, null, 8, ["order"])) : vue.createCommentVNode("", true),
              vue.createVNode(_component_OrderDelete, { order: $props.order }, null, 8, ["order"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1v = _sfc_main$1v.setup;
_sfc_main$1v.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Show.vue");
  return _sfc_setup$1v ? _sfc_setup$1v(props, ctx) : void 0;
};
var Show$g = /* @__PURE__ */ _export_sfc(_sfc_main$1v, [["ssrRender", _sfc_ssrRender$1t]]);
var Show$h = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$g
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1u = {
  components: {
    PageAside,
    AsideLink,
    ButtonLink,
    EmptyState,
    JetSectionTitle: SectionTitle
  },
  props: {
    priceLevels: Array
  }
};
function _sfc_ssrRender$1s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_page_aside = vue.resolveComponent("page-aside");
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_aside_link = vue.resolveComponent("aside-link");
  const _component_empty_state = vue.resolveComponent("empty-state");
  _push(serverRenderer.ssrRenderComponent(_component_page_aside, vue.mergeProps({
    showOnMobile: _ctx.route().current("customer-price-levels.index")
  }, _attrs), {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Price Levels`);
            } else {
              return [
                vue.createTextVNode("Price Levels")
              ];
            }
          }),
          description: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`View your price levels.`);
            } else {
              return [
                vue.createTextVNode("View your price levels.")
              ];
            }
          }),
          aside: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_button_link, {
                href: _ctx.route("customer-price-levels.create")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`New Level`);
                  } else {
                    return [
                      vue.createTextVNode("New Level")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_button_link, {
                  href: _ctx.route("customer-price-levels.create")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("New Level")
                  ]),
                  _: 1
                }, 8, ["href"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_section_title, null, {
            title: vue.withCtx(() => [
              vue.createTextVNode("Price Levels")
            ]),
            description: vue.withCtx(() => [
              vue.createTextVNode("View your price levels.")
            ]),
            aside: vue.withCtx(() => [
              vue.createVNode(_component_button_link, {
                href: _ctx.route("customer-price-levels.create")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New Level")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            _: 1
          })
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white"${_scopeId}><ul class="divide-y divide-gray-200"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($props.priceLevels, (level) => {
          _push2(`<li class="bg-white"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_aside_link, {
            href: _ctx.route("customer-price-levels.show", level.id),
            current: _ctx.route().current(
              "customer-price-levels.show",
              level.id
            )
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex-1 min-w-0"${_scopeId2}><div class="focus:outline-none"${_scopeId2}><span class="absolute inset-0" aria-hidden="true"${_scopeId2}></span><p class="text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate(level.name)}</p>`);
                if (level.description) {
                  _push3(`<p class="text-sm text-gray-500 truncate"${_scopeId2}>${serverRenderer.ssrInterpolate(level.description)}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                    vue.createVNode("div", { class: "focus:outline-none" }, [
                      vue.createVNode("span", {
                        class: "absolute inset-0",
                        "aria-hidden": "true"
                      }),
                      vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(level.name), 1),
                      level.description ? (vue.openBlock(), vue.createBlock("p", {
                        key: 0,
                        class: "text-sm text-gray-500 truncate"
                      }, vue.toDisplayString(level.description), 1)) : vue.createCommentVNode("", true)
                    ])
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</li>`);
        });
        _push2(`<!--]--></ul></div>`);
        if ($props.priceLevels.length < 1 && _ctx.route().current("customer-price-levels.index")) {
          _push2(serverRenderer.ssrRenderComponent(_component_empty_state, {
            heading: "No Price Levels",
            subtitle: "Get started by creating a new price level.",
            "button-text": "New Price Level",
            href: _ctx.route("customer-price-levels.create")
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", { class: "bg-white" }, [
            vue.createVNode("ul", { class: "divide-y divide-gray-200" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.priceLevels, (level) => {
                return vue.openBlock(), vue.createBlock("li", {
                  key: level.id,
                  class: "bg-white"
                }, [
                  vue.createVNode(_component_aside_link, {
                    href: _ctx.route("customer-price-levels.show", level.id),
                    current: _ctx.route().current(
                      "customer-price-levels.show",
                      level.id
                    )
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                        vue.createVNode("div", { class: "focus:outline-none" }, [
                          vue.createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(level.name), 1),
                          level.description ? (vue.openBlock(), vue.createBlock("p", {
                            key: 0,
                            class: "text-sm text-gray-500 truncate"
                          }, vue.toDisplayString(level.description), 1)) : vue.createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 2
                  }, 1032, ["href", "current"])
                ]);
              }), 128))
            ])
          ]),
          $props.priceLevels.length < 1 && _ctx.route().current("customer-price-levels.index") ? (vue.openBlock(), vue.createBlock(_component_empty_state, {
            key: 0,
            heading: "No Price Levels",
            subtitle: "Get started by creating a new price level.",
            "button-text": "New Price Level",
            href: _ctx.route("customer-price-levels.create")
          }, null, 8, ["href"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1u = _sfc_main$1u.setup;
_sfc_main$1u.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/PriceLevels/PriceLevelsAside.vue");
  return _sfc_setup$1u ? _sfc_setup$1u(props, ctx) : void 0;
};
var PriceLevelsAside = /* @__PURE__ */ _export_sfc(_sfc_main$1u, [["ssrRender", _sfc_ssrRender$1s]]);
var PriceLevelsAside$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": PriceLevelsAside
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1t = {
  components: {
    PriceLevelsAside,
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    priceLevels() {
      return this.$page.props.priceLevels;
    },
    isIndex() {
      return route().current("price-levels.index");
    }
  }
};
function _sfc_ssrRender$1r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  const _component_price_levels_aside = vue.resolveComponent("price-levels-aside");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb" class="xl:hidden"${_scopeId2}><div class="px-4 md:pb-2"${_scopeId2}>`);
                _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                  href: _ctx.route("customer-price-levels.index")
                }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`Price Levels`);
                    } else {
                      return [
                        vue.createTextVNode("Price Levels")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</div></nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    vue.createVNode(_component_back_link, {
                      href: _ctx.route("customer-price-levels.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Price Levels")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_price_levels_aside, { priceLevels: $options.priceLevels }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
              default: vue.withCtx(() => [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    vue.createVNode(_component_back_link, {
                      href: _ctx.route("customer-price-levels.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Price Levels")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ]),
              _: 3
            }, 8, ["dontShowOnMobile"]),
            vue.createVNode(_component_price_levels_aside, { priceLevels: $options.priceLevels }, null, 8, ["priceLevels"])
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$1t = _sfc_main$1t.setup;
_sfc_main$1t.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/PriceLevels/PriceLevelsLayout.vue");
  return _sfc_setup$1t ? _sfc_setup$1t(props, ctx) : void 0;
};
var PriceLevelsLayout = /* @__PURE__ */ _export_sfc(_sfc_main$1t, [["ssrRender", _sfc_ssrRender$1r]]);
var PriceLevelsLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": PriceLevelsLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1s = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput
  },
  data() {
    return {
      form: this.$inertia.form({
        _method: "POST",
        name: "",
        description: null,
        percentage_more: 0
      })
    };
  },
  methods: {
    createPriceLevel() {
      this.form.post(route("customer-price-levels.store"), {
        errorBag: "createPriceLevel",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$1q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_percentage_input = vue.resolveComponent("percentage-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.createPriceLevel }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create a Price Level`);
      } else {
        return [
          vue.createTextVNode("Create a Price Level")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a price level for your customers. Customers in this price level will automatically have this price adjustment applied to their orders. `);
      } else {
        return [
          vue.createTextVNode(" Create a price level for your customers. Customers in this price level will automatically have this price adjustment applied to their orders. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Price Level Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "description",
          value: "Price level description"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "description",
          class: "mt-1 block w-full",
          modelValue: $data.form.description,
          "onUpdate:modelValue": ($event) => $data.form.description = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.description,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "percentage_more",
          value: "Percentage more than base price"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_percentage_input, {
          id: "percentage_more",
          min: "0",
          placeholder: "0",
          modelValue: $data.form.percentage_more,
          "onUpdate:modelValue": ($event) => $data.form.percentage_more = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.percentage_more,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Price Level Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "description",
                  value: "Price level description"
                }),
                vue.createVNode(_component_text_area_input, {
                  id: "description",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.description,
                  "onUpdate:modelValue": ($event) => $data.form.description = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.description,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "percentage_more",
                  value: "Percentage more than base price"
                }),
                vue.createVNode(_component_percentage_input, {
                  id: "percentage_more",
                  min: "0",
                  placeholder: "0",
                  modelValue: $data.form.percentage_more,
                  "onUpdate:modelValue": ($event) => $data.form.percentage_more = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.percentage_more,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Price Level`);
            } else {
              return [
                vue.createTextVNode("Save Price Level")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Price Level")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1s = _sfc_main$1s.setup;
_sfc_main$1s.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/PriceLevels/CreatePriceLevelForm.vue");
  return _sfc_setup$1s ? _sfc_setup$1s(props, ctx) : void 0;
};
var createPriceLevelForm = /* @__PURE__ */ _export_sfc(_sfc_main$1s, [["ssrRender", _sfc_ssrRender$1q]]);
var CreatePriceLevelForm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": createPriceLevelForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1r = {
  components: {
    PriceLevelsLayout,
    createPriceLevelForm
  }
};
function _sfc_ssrRender$1p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_price_levels_layout = vue.resolveComponent("price-levels-layout");
  const _component_create_price_level_form = vue.resolveComponent("create-price-level-form");
  _push(serverRenderer.ssrRenderComponent(_component_price_levels_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_price_level_form, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_price_level_form)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1r = _sfc_main$1r.setup;
_sfc_main$1r.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/PriceLevels/Create.vue");
  return _sfc_setup$1r ? _sfc_setup$1r(props, ctx) : void 0;
};
var Create$c = /* @__PURE__ */ _export_sfc(_sfc_main$1r, [["ssrRender", _sfc_ssrRender$1p]]);
var Create$d = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$c
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1q = {
  props: { priceLevel: Object },
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingPriceLevelDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmPriceLevelDeletion() {
      this.confirmingPriceLevelDeletion = true;
    },
    deletePriceLevel() {
      this.form.delete(
        route("customer-price-levels.destroy", this.priceLevel),
        {
          errorBag: "deletePriceLevel"
        }
      );
    }
  }
};
function _sfc_ssrRender$1o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Price Level `);
      } else {
        return [
          vue.createTextVNode(" Delete Price Level ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete ${serverRenderer.ssrInterpolate($props.priceLevel.name)}. All customers in this price level will be set to base pricing. `);
      } else {
        return [
          vue.createTextVNode(" Delete " + vue.toDisplayString($props.priceLevel.name) + ". All customers in this price level will be set to base pricing. ", 1)
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a price level is deleted, you will not be able to recover it again. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmPriceLevelDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Price Level `);
            } else {
              return [
                vue.createTextVNode(" Delete Price Level ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingPriceLevelDeletion,
          onClose: ($event) => $data.confirmingPriceLevelDeletion = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Price Level `);
            } else {
              return [
                vue.createTextVNode(" Delete Price Level ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this price level? `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete this price level? ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingPriceLevelDeletion = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deletePriceLevel,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Price Level `);
                  } else {
                    return [
                      vue.createTextVNode(" Delete Price Level ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingPriceLevelDeletion = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.deletePriceLevel,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Delete Price Level ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a price level is deleted, you will not be able to recover it again. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmPriceLevelDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete Price Level ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingPriceLevelDeletion,
            onClose: ($event) => $data.confirmingPriceLevelDeletion = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Delete Price Level ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete this price level? ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingPriceLevelDeletion = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deletePriceLevel,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Delete Price Level ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1q = _sfc_main$1q.setup;
_sfc_main$1q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/PriceLevels/DeletePriceLevelForm.vue");
  return _sfc_setup$1q ? _sfc_setup$1q(props, ctx) : void 0;
};
var DeletePriceLevelForm = /* @__PURE__ */ _export_sfc(_sfc_main$1q, [["ssrRender", _sfc_ssrRender$1o]]);
var DeletePriceLevelForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeletePriceLevelForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1p = {
  components: {
    PriceLevelsLayout
  }
};
function _sfc_ssrRender$1n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_price_levels_layout = vue.resolveComponent("price-levels-layout");
  _push(serverRenderer.ssrRenderComponent(_component_price_levels_layout, _attrs, null, _parent));
}
const _sfc_setup$1p = _sfc_main$1p.setup;
_sfc_main$1p.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/PriceLevels/Index.vue");
  return _sfc_setup$1p ? _sfc_setup$1p(props, ctx) : void 0;
};
var Index$e = /* @__PURE__ */ _export_sfc(_sfc_main$1p, [["ssrRender", _sfc_ssrRender$1n]]);
var Index$f = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$e
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1o = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput
  },
  props: { priceLevel: Object },
  data() {
    return {
      form: this.$inertia.form({
        _method: "PATCH",
        name: this.priceLevel.name,
        description: this.priceLevel.description,
        percentage_more: this.priceLevel.percentage_more
      })
    };
  },
  methods: {
    updatePriceLevel() {
      this.form.patch(
        route("customer-price-levels.update", this.priceLevel.id),
        {
          errorBag: "updatePriceLevel",
          preserveScroll: true
        }
      );
    }
  }
};
function _sfc_ssrRender$1m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_percentage_input = vue.resolveComponent("percentage-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.updatePriceLevel }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.priceLevel.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.priceLevel.name), 1)
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update this price level. Customers in this price level will automatically have this price adjustment applied to their orders. `);
      } else {
        return [
          vue.createTextVNode(" Update this price level. Customers in this price level will automatically have this price adjustment applied to their orders. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Price Level Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "description",
          value: "Price level description"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "description",
          class: "mt-1 block w-full",
          modelValue: $data.form.description,
          "onUpdate:modelValue": ($event) => $data.form.description = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.description,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "percentage_more",
          value: "Percentage more than base price"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_percentage_input, {
          id: "percentage_more",
          min: "0",
          placeholder: "0",
          modelValue: $data.form.percentage_more,
          "onUpdate:modelValue": ($event) => $data.form.percentage_more = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.percentage_more,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Price Level Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "description",
                  value: "Price level description"
                }),
                vue.createVNode(_component_text_area_input, {
                  id: "description",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.description,
                  "onUpdate:modelValue": ($event) => $data.form.description = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.description,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "percentage_more",
                  value: "Percentage more than base price"
                }),
                vue.createVNode(_component_percentage_input, {
                  id: "percentage_more",
                  min: "0",
                  placeholder: "0",
                  modelValue: $data.form.percentage_more,
                  "onUpdate:modelValue": ($event) => $data.form.percentage_more = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.percentage_more,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
          disabled: $data.form.processing || !$data.form.isDirty
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Price Level`);
            } else {
              return [
                vue.createTextVNode("Save Price Level")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
            disabled: $data.form.processing || !$data.form.isDirty
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Price Level")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1o = _sfc_main$1o.setup;
_sfc_main$1o.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/PriceLevels/UpdatePriceLevelForm.vue");
  return _sfc_setup$1o ? _sfc_setup$1o(props, ctx) : void 0;
};
var UpdatePriceLevelForm = /* @__PURE__ */ _export_sfc(_sfc_main$1o, [["ssrRender", _sfc_ssrRender$1m]]);
var UpdatePriceLevelForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdatePriceLevelForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1n = {
  components: {
    PriceLevelsLayout,
    UpdatePriceLevelForm,
    DeletePriceLevelForm
  },
  props: {
    priceLevel: Object
  }
};
function _sfc_ssrRender$1l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_price_levels_layout = vue.resolveComponent("price-levels-layout");
  const _component_update_price_level_form = vue.resolveComponent("update-price-level-form");
  const _component_delete_price_level_form = vue.resolveComponent("delete-price-level-form");
  _push(serverRenderer.ssrRenderComponent(_component_price_levels_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_update_price_level_form, { priceLevel: $props.priceLevel }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_delete_price_level_form, {
          priceLevel: $props.priceLevel,
          class: "py-6"
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_update_price_level_form, { priceLevel: $props.priceLevel }, null, 8, ["priceLevel"]),
          vue.createVNode(_component_delete_price_level_form, {
            priceLevel: $props.priceLevel,
            class: "py-6"
          }, null, 8, ["priceLevel"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1n = _sfc_main$1n.setup;
_sfc_main$1n.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/PriceLevels/Show.vue");
  return _sfc_setup$1n ? _sfc_setup$1n(props, ctx) : void 0;
};
var Show$e = /* @__PURE__ */ _export_sfc(_sfc_main$1n, [["ssrRender", _sfc_ssrRender$1l]]);
var Show$f = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$e
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1m = {
  components: {
    PageAside,
    AsideLink,
    ButtonLink,
    TabContainer,
    TabLink,
    SearchInput,
    EmptyState,
    JetSectionTitle: SectionTitle
  },
  computed: {
    productsLength: function() {
      return this.products.length;
    }
  },
  data() {
    return {
      products: this.$page.props.products,
      search: "",
      filteredProducts: this.$page.props.products
    };
  },
  methods: {
    updateProducts() {
      this.filteredProducts = this.products.filter((product) => {
        if (product.name.toLowerCase().includes(this.search.toLowerCase())) {
          return true;
        } else {
          return false;
        }
      });
    }
  }
};
function _sfc_ssrRender$1k(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_page_aside = vue.resolveComponent("page-aside");
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_search_input = vue.resolveComponent("search-input");
  const _component_tab_container = vue.resolveComponent("tab-container");
  const _component_tab_link = vue.resolveComponent("tab-link");
  const _component_aside_link = vue.resolveComponent("aside-link");
  const _component_empty_state = vue.resolveComponent("empty-state");
  _push(serverRenderer.ssrRenderComponent(_component_page_aside, vue.mergeProps({
    showOnMobile: _ctx.route().current("products.index") || _ctx.route().current("archived-products.index")
  }, _attrs), {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, vue.createSlots({
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Products`);
            } else {
              return [
                vue.createTextVNode("Products")
              ];
            }
          }),
          aside: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_button_link, {
                href: _ctx.route("products.create")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`New Product`);
                  } else {
                    return [
                      vue.createTextVNode("New Product")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_button_link, {
                  href: _ctx.route("products.create")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("New Product")
                  ]),
                  _: 1
                }, 8, ["href"])
              ];
            }
          }),
          _: 2
        }, [
          $options.productsLength > 0 ? {
            name: "description",
            fn: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Search ${serverRenderer.ssrInterpolate($options.productsLength)} ${serverRenderer.ssrInterpolate($options.productsLength > 1 ? "Products" : "Product")}`);
              } else {
                return [
                  vue.createTextVNode("Search " + vue.toDisplayString($options.productsLength) + " " + vue.toDisplayString($options.productsLength > 1 ? "Products" : "Product"), 1)
                ];
              }
            })
          } : void 0
        ]), _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_search_input, {
          modelValue: $data.search,
          "onUpdate:modelValue": ($event) => $data.search = $event,
          onInput: $options.updateProducts,
          placeholder: "Search products"
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_section_title, null, vue.createSlots({
            title: vue.withCtx(() => [
              vue.createTextVNode("Products")
            ]),
            aside: vue.withCtx(() => [
              vue.createVNode(_component_button_link, {
                href: _ctx.route("products.create")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New Product")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            _: 2
          }, [
            $options.productsLength > 0 ? {
              name: "description",
              fn: vue.withCtx(() => [
                vue.createTextVNode("Search " + vue.toDisplayString($options.productsLength) + " " + vue.toDisplayString($options.productsLength > 1 ? "Products" : "Product"), 1)
              ])
            } : void 0
          ]), 1024),
          vue.createVNode(_component_search_input, {
            modelValue: $data.search,
            "onUpdate:modelValue": ($event) => $data.search = $event,
            onInput: $options.updateProducts,
            placeholder: "Search products"
          }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_tab_container, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_tab_link, {
                href: _ctx.route("products.index"),
                current: _ctx.route().current("products.*")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Active`);
                  } else {
                    return [
                      vue.createTextVNode("Active")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_tab_link, {
                href: _ctx.route("archived-products.index"),
                current: _ctx.route().current("archived-products.*")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Archived`);
                  } else {
                    return [
                      vue.createTextVNode("Archived")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("products.index"),
                  current: _ctx.route().current("products.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Active")
                  ]),
                  _: 1
                }, 8, ["href", "current"]),
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("archived-products.index"),
                  current: _ctx.route().current("archived-products.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Archived")
                  ]),
                  _: 1
                }, 8, ["href", "current"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<ul class="divide-y divide-gray-200"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($data.filteredProducts, (product) => {
          _push2(`<li class="bg-white"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_aside_link, {
            href: product.deleted_at ? _ctx.route("archived-products.show", product.id) : _ctx.route("products.show", product.id),
            current: _ctx.route().current("products.show", product.id) || _ctx.route().current(
              "archived-products.show",
              product.id
            )
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex-1 min-w-0"${_scopeId2}><div class="focus:outline-none"${_scopeId2}><span class="absolute inset-0" aria-hidden="true"${_scopeId2}></span><p class="text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate(product.name)}</p>`);
                if (product.description) {
                  _push3(`<p class="text-sm text-gray-500 truncate"${_scopeId2}>${serverRenderer.ssrInterpolate(product.description)}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                    vue.createVNode("div", { class: "focus:outline-none" }, [
                      vue.createVNode("span", {
                        class: "absolute inset-0",
                        "aria-hidden": "true"
                      }),
                      vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(product.name), 1),
                      product.description ? (vue.openBlock(), vue.createBlock("p", {
                        key: 0,
                        class: "text-sm text-gray-500 truncate"
                      }, vue.toDisplayString(product.description), 1)) : vue.createCommentVNode("", true)
                    ])
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</li>`);
        });
        _push2(`<!--]--></ul></div>`);
        if ($options.productsLength < 1 && _ctx.route().current("products.index")) {
          _push2(serverRenderer.ssrRenderComponent(_component_empty_state, {
            heading: "No Products",
            subtitle: "Get started by creating a new product.",
            "button-text": "New Product",
            href: _ctx.route("products.create")
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", { class: "bg-white" }, [
            vue.createVNode(_component_tab_container, null, {
              default: vue.withCtx(() => [
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("products.index"),
                  current: _ctx.route().current("products.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Active")
                  ]),
                  _: 1
                }, 8, ["href", "current"]),
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("archived-products.index"),
                  current: _ctx.route().current("archived-products.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Archived")
                  ]),
                  _: 1
                }, 8, ["href", "current"])
              ]),
              _: 1
            }),
            vue.createVNode("ul", { class: "divide-y divide-gray-200" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.filteredProducts, (product) => {
                return vue.openBlock(), vue.createBlock("li", {
                  key: product.id,
                  class: "bg-white"
                }, [
                  vue.createVNode(_component_aside_link, {
                    href: product.deleted_at ? _ctx.route("archived-products.show", product.id) : _ctx.route("products.show", product.id),
                    current: _ctx.route().current("products.show", product.id) || _ctx.route().current(
                      "archived-products.show",
                      product.id
                    )
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                        vue.createVNode("div", { class: "focus:outline-none" }, [
                          vue.createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(product.name), 1),
                          product.description ? (vue.openBlock(), vue.createBlock("p", {
                            key: 0,
                            class: "text-sm text-gray-500 truncate"
                          }, vue.toDisplayString(product.description), 1)) : vue.createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 2
                  }, 1032, ["href", "current"])
                ]);
              }), 128))
            ])
          ]),
          $options.productsLength < 1 && _ctx.route().current("products.index") ? (vue.openBlock(), vue.createBlock(_component_empty_state, {
            key: 0,
            heading: "No Products",
            subtitle: "Get started by creating a new product.",
            "button-text": "New Product",
            href: _ctx.route("products.create")
          }, null, 8, ["href"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1m = _sfc_main$1m.setup;
_sfc_main$1m.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/ProductsAside.vue");
  return _sfc_setup$1m ? _sfc_setup$1m(props, ctx) : void 0;
};
var ProductsAside = /* @__PURE__ */ _export_sfc(_sfc_main$1m, [["ssrRender", _sfc_ssrRender$1k]]);
var ProductsAside$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ProductsAside
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1l = {
  components: {
    ProductsAside,
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    isIndex() {
      return route().current("products.index") || route().current("archived-products.index");
    }
  }
};
function _sfc_ssrRender$1j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  const _component_products_aside = vue.resolveComponent("products-aside");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb" class="px-4 md:pb-2 flex items-center justify-between"${_scopeId2}><div class="xl:hidden"${_scopeId2}>`);
                if (_ctx.route().current("products.*")) {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("products.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Products`);
                      } else {
                        return [
                          vue.createTextVNode("Products")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("archived-products.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Archived Products`);
                      } else {
                        return [
                          vue.createTextVNode("Archived Products")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                }
                _push3(`</div>`);
                serverRenderer.ssrRenderSlot(_ctx.$slots, "nav", {}, null, _push3, _parent3, _scopeId2);
                _push3(`</nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "px-4 md:pb-2 flex items-center justify-between"
                }, [
                  vue.createVNode("div", { class: "xl:hidden" }, [
                    _ctx.route().current("products.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("products.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Products")
                      ]),
                      _: 1
                    }, 8, ["href"])) : (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 1,
                      href: _ctx.route("archived-products.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Archived Products")
                      ]),
                      _: 1
                    }, 8, ["href"]))
                  ]),
                  vue.renderSlot(_ctx.$slots, "nav")
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_products_aside, null, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
              default: vue.withCtx(() => [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "px-4 md:pb-2 flex items-center justify-between"
                }, [
                  vue.createVNode("div", { class: "xl:hidden" }, [
                    _ctx.route().current("products.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("products.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Products")
                      ]),
                      _: 1
                    }, 8, ["href"])) : (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 1,
                      href: _ctx.route("archived-products.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Archived Products")
                      ]),
                      _: 1
                    }, 8, ["href"]))
                  ]),
                  vue.renderSlot(_ctx.$slots, "nav")
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ]),
              _: 3
            }, 8, ["dontShowOnMobile"]),
            vue.createVNode(_component_products_aside)
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$1l = _sfc_main$1l.setup;
_sfc_main$1l.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/ProductsLayout.vue");
  return _sfc_setup$1l ? _sfc_setup$1l(props, ctx) : void 0;
};
var ProductsLayout = /* @__PURE__ */ _export_sfc(_sfc_main$1l, [["ssrRender", _sfc_ssrRender$1j]]);
var ProductsLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ProductsLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1k = {
  components: { DetailsSection },
  props: ["product"]
};
function _sfc_ssrRender$1i(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.product.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.product.name), 1)
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($props.product.description) {
          _push2(`<dl class="col-span-6 sm:col-span-2"${_scopeId}><dt class="text-sm text-gray-500"${_scopeId}>Description</dt><dd class="mt-1 text-sm text-gray-900"${_scopeId}>${serverRenderer.ssrInterpolate($props.product.description)}</dd></dl>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.product.plant) {
          _push2(`<dl class="col-span-6 sm:col-span-2"${_scopeId}><dt class="text-sm text-gray-500"${_scopeId}>Size</dt><dd class="mt-1 text-sm text-gray-900"${_scopeId}> Height: ${serverRenderer.ssrInterpolate($props.product.plant.height)} Spread: ${serverRenderer.ssrInterpolate($props.product.plant.spread)}</dd></dl>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          $props.product.description ? (vue.openBlock(), vue.createBlock("dl", {
            key: 0,
            class: "col-span-6 sm:col-span-2"
          }, [
            vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Description"),
            vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.product.description), 1)
          ])) : vue.createCommentVNode("", true),
          $props.product.plant ? (vue.openBlock(), vue.createBlock("dl", {
            key: 1,
            class: "col-span-6 sm:col-span-2"
          }, [
            vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Size"),
            vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, " Height: " + vue.toDisplayString($props.product.plant.height) + " Spread: " + vue.toDisplayString($props.product.plant.spread), 1)
          ])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1k = _sfc_main$1k.setup;
_sfc_main$1k.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/Components/ProductDetails.vue");
  return _sfc_setup$1k ? _sfc_setup$1k(props, ctx) : void 0;
};
var ProductDetails = /* @__PURE__ */ _export_sfc(_sfc_main$1k, [["ssrRender", _sfc_ssrRender$1i]]);
var ProductDetails$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ProductDetails
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1j = {
  props: ["product"],
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingProductRestoration: false,
      restoring: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmProductRestoration() {
      this.confirmingProductRestoration = true;
    },
    RestoreProduct() {
      this.form.post(route("archived-products.restore", this.product.id), {
        errorBag: "restoreProduct"
      });
    }
  }
};
function _sfc_ssrRender$1h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Restore Product `);
      } else {
        return [
          vue.createTextVNode("Restore Product ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Restore this product. You will be able to create new orders and quotes with this product and will no longer be archived.`);
      } else {
        return [
          vue.createTextVNode("Restore this product. You will be able to create new orders and quotes with this product and will no longer be archived.")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a product is restored, you will be able to create orders with this product. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, { onClick: $options.confirmProductRestoration }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Restore Product `);
            } else {
              return [
                vue.createTextVNode(" Restore Product ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingProductRestoration,
          onClose: ($event) => $data.confirmingProductRestoration = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Restore Product `);
            } else {
              return [
                vue.createTextVNode(" Restore Product ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to restore this product? `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to restore this product? ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingProductRestoration = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.RestoreProduct,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Restore Product `);
                  } else {
                    return [
                      vue.createTextVNode(" Restore Product ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingProductRestoration = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.RestoreProduct,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Restore Product ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a product is restored, you will be able to create orders with this product. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_button, { onClick: $options.confirmProductRestoration }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Restore Product ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingProductRestoration,
            onClose: ($event) => $data.confirmingProductRestoration = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Restore Product ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to restore this product? ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingProductRestoration = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.RestoreProduct,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Restore Product ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1j = _sfc_main$1j.setup;
_sfc_main$1j.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/RestoreProductForm.vue");
  return _sfc_setup$1j ? _sfc_setup$1j(props, ctx) : void 0;
};
var RestoreProductForm = /* @__PURE__ */ _export_sfc(_sfc_main$1j, [["ssrRender", _sfc_ssrRender$1h]]);
var RestoreProductForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": RestoreProductForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1i = {
  components: {
    PaperClipIcon: solid.PaperClipIcon,
    ProductsLayout,
    ProductDetails,
    RestoreProductForm
  },
  props: { product: Object }
};
function _sfc_ssrRender$1g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_products_layout = vue.resolveComponent("products-layout");
  const _component_product_details = vue.resolveComponent("product-details");
  const _component_restore_product_form = vue.resolveComponent("restore-product-form");
  _push(serverRenderer.ssrRenderComponent(_component_products_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_product_details, { product: $props.product }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_restore_product_form, {
          product: $props.product,
          class: "mt-6"
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_product_details, { product: $props.product }, null, 8, ["product"]),
          vue.createVNode(_component_restore_product_form, {
            product: $props.product,
            class: "mt-6"
          }, null, 8, ["product"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1i = _sfc_main$1i.setup;
_sfc_main$1i.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/ArchivedShow.vue");
  return _sfc_setup$1i ? _sfc_setup$1i(props, ctx) : void 0;
};
var ArchivedShow$2 = /* @__PURE__ */ _export_sfc(_sfc_main$1i, [["ssrRender", _sfc_ssrRender$1g]]);
var ArchivedShow$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ArchivedShow$2
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1h = {
  components: {
    SelectBox
  },
  props: {
    category: Object
  },
  data() {
    return {
      categories: [],
      selectedCategory: this.category
    };
  },
  mounted() {
    axios.get(route("api.categories")).then((response) => {
      this.categories = response.data;
    });
  }
};
function _sfc_ssrRender$1f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_select_box = vue.resolveComponent("select-box");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "grid gap-4 col-span-3" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_select_box, {
    items: $data.categories,
    modelValue: $data.selectedCategory,
    "onUpdate:modelValue": ($event) => $data.selectedCategory = $event,
    labelValue: "Category"
  }, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$1h = _sfc_main$1h.setup;
_sfc_main$1h.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/CategorySelector.vue");
  return _sfc_setup$1h ? _sfc_setup$1h(props, ctx) : void 0;
};
var CategorySelector = /* @__PURE__ */ _export_sfc(_sfc_main$1h, [["ssrRender", _sfc_ssrRender$1f]]);
var CategorySelector$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CategorySelector
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1g = {
  components: { ChevronLeftIcon: solid.ChevronLeftIcon }
};
function _sfc_ssrRender$1e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ChevronLeftIcon = vue.resolveComponent("ChevronLeftIcon");
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "-ml-1 inline-flex items-center space-x-3 text-sm text-blue-gray-900" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_ChevronLeftIcon, {
    class: "h-5 w-5 text-blue-gray-400",
    "aria-hidden": "true"
  }, null, _parent));
  _push(`<span>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</span></button>`);
}
const _sfc_setup$1g = _sfc_main$1g.setup;
_sfc_main$1g.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Buttons/BackButton.vue");
  return _sfc_setup$1g ? _sfc_setup$1g(props, ctx) : void 0;
};
var BackButton = /* @__PURE__ */ _export_sfc(_sfc_main$1g, [["ssrRender", _sfc_ssrRender$1e]]);
const types$1 = [
  {
    name: "Plant",
    value: "plant",
    description: "This type of product is a plant, and will have extra details added to display."
  },
  {
    name: "Inventory",
    value: "inventory",
    description: "Inventory products are products that you track inventory of, but are not plants."
  },
  {
    name: "Non-Inventory",
    value: "non-inventory",
    description: "Non Inventory products are products that you sell but do not track inventory of."
  },
  {
    name: "Service",
    value: "service",
    description: "Services are not tangible items that are sold, but services to a customer. Ex: planting"
  }
];
const _sfc_main$1f = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput,
    BackButton,
    SelectBox,
    RadioGroup: vue$1.RadioGroup,
    RadioGroupDescription: vue$1.RadioGroupDescription,
    RadioGroupLabel: vue$1.RadioGroupLabel,
    RadioGroupOption: vue$1.RadioGroupOption
  },
  data() {
    return {
      selectedCategory: null,
      categories: this.$page.props.categories,
      selectedType: null,
      types: types$1,
      form: this.$inertia.form({
        _method: "POST",
        name: "",
        scientific_name: "",
        common_name: "",
        description: "",
        category_id: null,
        type: null,
        zone: null,
        height: null,
        spread: null,
        bloom_color: null,
        fall_color: null,
        growth_rate: null
      })
    };
  },
  watch: {
    name() {
      this.form.name = this.name;
    },
    selectedType(type) {
      if (type) {
        this.form.type = type.value;
      } else {
        this.form.type = null;
      }
    },
    selectedCategory() {
      this.form.category_id = this.selectedCategory.id;
    }
  },
  computed: {
    name() {
      if (this.form.type == "plant" && this.form.scientific_name) {
        return this.form.scientific_name + " / " + this.form.common_name;
      } else {
        return this.form.name;
      }
    },
    title() {
      if (this.selectedType) {
        if (this.selectedType.name != "Service" && this.selectedType.name != "Plant") {
          return "Create an " + this.selectedType.name + " Product";
        } else {
          return "Create a " + this.selectedType.name;
        }
      } else {
        return "Select the Type of Product to Create";
      }
    }
  },
  methods: {
    createProduct() {
      this.form.post(route("products.store"), {
        errorBag: "createProduct",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$1d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_back_button = vue.resolveComponent("back-button");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_RadioGroup = vue.resolveComponent("RadioGroup");
  const _component_RadioGroupLabel = vue.resolveComponent("RadioGroupLabel");
  const _component_RadioGroupOption = vue.resolveComponent("RadioGroupOption");
  const _component_RadioGroupDescription = vue.resolveComponent("RadioGroupDescription");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}><div></div>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, { onSubmitted: $options.createProduct }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($options.title)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($options.title), 1)
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a new product you sell. `);
      } else {
        return [
          vue.createTextVNode(" Create a new product you sell. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($data.form.type) {
          _push2(`<div class="col-span-6"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_back_button, {
            type: "button",
            onClick: ($event) => $data.selectedType = null,
            class: "mb-6"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Back to choose product type`);
              } else {
                return [
                  vue.createTextVNode("Back to choose product type")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          if ($data.form.type != "plant") {
            _push2(`<div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
              for: "name",
              value: "Product Name"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
              id: "name",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: $data.form.name,
              "onUpdate:modelValue": ($event) => $data.form.name = $event,
              required: "",
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.name,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-3"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
              items: $data.categories,
              modelValue: $data.selectedCategory,
              "onUpdate:modelValue": ($event) => $data.selectedCategory = $event,
              labelValue: "Category"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.category_id,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-3"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
              for: "description",
              value: "Description"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
              id: "description",
              class: "mt-1 block w-full",
              modelValue: $data.form.description,
              "onUpdate:modelValue": ($event) => $data.form.description = $event
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.description,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            _push2(`<div${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
              for: "scientific_name",
              value: "Scientific Name"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
              id: "scientific_name",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: $data.form.scientific_name,
              "onUpdate:modelValue": ($event) => $data.form.scientific_name = $event,
              required: "",
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.scientific_name,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-3"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
              for: "common_name",
              value: "Common Name"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
              id: "common_name",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: $data.form.common_name,
              "onUpdate:modelValue": ($event) => $data.form.common_name = $event,
              required: "",
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.common_name,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-3"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
              items: $data.categories,
              modelValue: $data.selectedCategory,
              "onUpdate:modelValue": ($event) => $data.selectedCategory = $event,
              labelValue: "Category"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.category_id,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-3"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
              for: "description",
              value: "Description"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
              id: "description",
              class: "mt-1 block w-full",
              modelValue: $data.form.description,
              "onUpdate:modelValue": ($event) => $data.form.description = $event
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.description,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}> Plant details </h3></div><div class="grid gap-4 col-span-3 grid-cols-3"${_scopeId}><div class="col-span-1"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "zone" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Growing Zone`);
                } else {
                  return [
                    vue.createTextVNode("Growing Zone")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
              id: "zone",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: $data.form.zone,
              "onUpdate:modelValue": ($event) => $data.form.zone = $event,
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.zone,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-1"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "height" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Mature Height`);
                } else {
                  return [
                    vue.createTextVNode("Mature Height")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
              id: "height",
              type: "number",
              min: "0",
              class: "mt-1 block w-full",
              modelValue: $data.form.height,
              "onUpdate:modelValue": ($event) => $data.form.height = $event,
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.height,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-1"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "spread" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Mature Spread`);
                } else {
                  return [
                    vue.createTextVNode("Mature Spread")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
              id: "spread",
              type: "number",
              min: "0",
              class: "mt-1 block w-full",
              modelValue: $data.form.spread,
              "onUpdate:modelValue": ($event) => $data.form.spread = $event,
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.spread,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-1"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "bloom_color" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Bloom Color`);
                } else {
                  return [
                    vue.createTextVNode("Bloom Color")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
              id: "bloom_color",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: $data.form.bloom_color,
              "onUpdate:modelValue": ($event) => $data.form.bloom_color = $event,
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.bloom_color,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-1"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "fall_color" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Fall Color`);
                } else {
                  return [
                    vue.createTextVNode("Fall Color")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
              id: "fall_color",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: $data.form.fall_color,
              "onUpdate:modelValue": ($event) => $data.form.fall_color = $event,
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.fall_color,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-span-1"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "growth_rate" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Growth Rate`);
                } else {
                  return [
                    vue.createTextVNode("Growth Rate")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
              id: "growth_rate",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: $data.form.growth_rate,
              "onUpdate:modelValue": ($event) => $data.form.growth_rate = $event,
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.form.errors.growth_rate,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div>`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<div class="col-span-6"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_RadioGroup, {
            modelValue: $data.selectedType,
            "onUpdate:modelValue": ($event) => $data.selectedType = $event
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(serverRenderer.ssrRenderComponent(_component_RadioGroupLabel, { class: "sr-only" }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Please select the product type. `);
                    } else {
                      return [
                        vue.createTextVNode(" Please select the product type. ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`<div class="bg-white rounded-md -space-y-px"${_scopeId2}><!--[-->`);
                serverRenderer.ssrRenderList($data.types, (type, typeIdx) => {
                  _push3(serverRenderer.ssrRenderComponent(_component_RadioGroupOption, {
                    as: "template",
                    key: type.name,
                    value: type
                  }, {
                    default: vue.withCtx(({ checked, active }, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<div class="${serverRenderer.ssrRenderClass([
                          typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                          typeIdx === $data.types.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                          checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                          "relative border p-4 flex flex-shrink-0 cursor-pointer focus:outline-none"
                        ])}"${_scopeId3}><span class="${serverRenderer.ssrRenderClass([
                          checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                          active ? "ring-2 ring-offset-2 ring-green-500" : "",
                          "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex flex-shrink-0 items-center justify-center"
                        ])}" aria-hidden="true"${_scopeId3}><span class="rounded-full bg-white w-1.5 h-1.5"${_scopeId3}></span></span><div class="ml-3 flex flex-col"${_scopeId3}>`);
                        _push4(serverRenderer.ssrRenderComponent(_component_RadioGroupLabel, {
                          as: "span",
                          class: [
                            checked ? "text-green-900" : "text-gray-900",
                            "block text-sm font-medium"
                          ]
                        }, {
                          default: vue.withCtx((_3, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`${serverRenderer.ssrInterpolate(type.name)}`);
                            } else {
                              return [
                                vue.createTextVNode(vue.toDisplayString(type.name), 1)
                              ];
                            }
                          }),
                          _: 2
                        }, _parent4, _scopeId3));
                        _push4(serverRenderer.ssrRenderComponent(_component_RadioGroupDescription, {
                          as: "span",
                          class: [
                            checked ? "text-green-700" : "text-gray-500",
                            "block text-sm"
                          ]
                        }, {
                          default: vue.withCtx((_3, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`${serverRenderer.ssrInterpolate(type.description)}`);
                            } else {
                              return [
                                vue.createTextVNode(vue.toDisplayString(type.description), 1)
                              ];
                            }
                          }),
                          _: 2
                        }, _parent4, _scopeId3));
                        _push4(`</div></div>`);
                      } else {
                        return [
                          vue.createVNode("div", {
                            class: [
                              typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                              typeIdx === $data.types.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                              checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                              "relative border p-4 flex flex-shrink-0 cursor-pointer focus:outline-none"
                            ]
                          }, [
                            vue.createVNode("span", {
                              class: [
                                checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                                active ? "ring-2 ring-offset-2 ring-green-500" : "",
                                "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex flex-shrink-0 items-center justify-center"
                              ],
                              "aria-hidden": "true"
                            }, [
                              vue.createVNode("span", { class: "rounded-full bg-white w-1.5 h-1.5" })
                            ], 2),
                            vue.createVNode("div", { class: "ml-3 flex flex-col" }, [
                              vue.createVNode(_component_RadioGroupLabel, {
                                as: "span",
                                class: [
                                  checked ? "text-green-900" : "text-gray-900",
                                  "block text-sm font-medium"
                                ]
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode(vue.toDisplayString(type.name), 1)
                                ]),
                                _: 2
                              }, 1032, ["class"]),
                              vue.createVNode(_component_RadioGroupDescription, {
                                as: "span",
                                class: [
                                  checked ? "text-green-700" : "text-gray-500",
                                  "block text-sm"
                                ]
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode(vue.toDisplayString(type.description), 1)
                                ]),
                                _: 2
                              }, 1032, ["class"])
                            ])
                          ], 2)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent3, _scopeId2));
                });
                _push3(`<!--]--></div>`);
              } else {
                return [
                  vue.createVNode(_component_RadioGroupLabel, { class: "sr-only" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Please select the product type. ")
                    ]),
                    _: 1
                  }),
                  vue.createVNode("div", { class: "bg-white rounded-md -space-y-px" }, [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.types, (type, typeIdx) => {
                      return vue.openBlock(), vue.createBlock(_component_RadioGroupOption, {
                        as: "template",
                        key: type.name,
                        value: type
                      }, {
                        default: vue.withCtx(({ checked, active }) => [
                          vue.createVNode("div", {
                            class: [
                              typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                              typeIdx === $data.types.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                              checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                              "relative border p-4 flex flex-shrink-0 cursor-pointer focus:outline-none"
                            ]
                          }, [
                            vue.createVNode("span", {
                              class: [
                                checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                                active ? "ring-2 ring-offset-2 ring-green-500" : "",
                                "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex flex-shrink-0 items-center justify-center"
                              ],
                              "aria-hidden": "true"
                            }, [
                              vue.createVNode("span", { class: "rounded-full bg-white w-1.5 h-1.5" })
                            ], 2),
                            vue.createVNode("div", { class: "ml-3 flex flex-col" }, [
                              vue.createVNode(_component_RadioGroupLabel, {
                                as: "span",
                                class: [
                                  checked ? "text-green-900" : "text-gray-900",
                                  "block text-sm font-medium"
                                ]
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode(vue.toDisplayString(type.name), 1)
                                ]),
                                _: 2
                              }, 1032, ["class"]),
                              vue.createVNode(_component_RadioGroupDescription, {
                                as: "span",
                                class: [
                                  checked ? "text-green-700" : "text-gray-500",
                                  "block text-sm"
                                ]
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode(vue.toDisplayString(type.description), 1)
                                ]),
                                _: 2
                              }, 1032, ["class"])
                            ])
                          ], 2)
                        ]),
                        _: 2
                      }, 1032, ["value"]);
                    }), 128))
                  ])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        }
      } else {
        return [
          $data.form.type ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "col-span-6"
          }, [
            vue.createVNode(_component_back_button, {
              type: "button",
              onClick: ($event) => $data.selectedType = null,
              class: "mb-6"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Back to choose product type")
              ]),
              _: 1
            }, 8, ["onClick"]),
            $data.form.type != "plant" ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "grid gap-4"
            }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Product Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_select_box, {
                  items: $data.categories,
                  modelValue: $data.selectedCategory,
                  "onUpdate:modelValue": ($event) => $data.selectedCategory = $event,
                  labelValue: "Category"
                }, null, 8, ["items", "modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.category_id,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "description",
                  value: "Description"
                }),
                vue.createVNode(_component_text_area_input, {
                  id: "description",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.description,
                  "onUpdate:modelValue": ($event) => $data.form.description = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.description,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])) : (vue.openBlock(), vue.createBlock("div", { key: 1 }, [
              vue.createVNode("div", { class: "grid gap-4" }, [
                vue.createVNode("div", { class: "col-span-3" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "scientific_name",
                    value: "Scientific Name"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "scientific_name",
                    type: "text",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.scientific_name,
                    "onUpdate:modelValue": ($event) => $data.form.scientific_name = $event,
                    required: "",
                    autocomplete: "off"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.scientific_name,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-3" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "common_name",
                    value: "Common Name"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "common_name",
                    type: "text",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.common_name,
                    "onUpdate:modelValue": ($event) => $data.form.common_name = $event,
                    required: "",
                    autocomplete: "off"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.common_name,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-3" }, [
                  vue.createVNode(_component_select_box, {
                    items: $data.categories,
                    modelValue: $data.selectedCategory,
                    "onUpdate:modelValue": ($event) => $data.selectedCategory = $event,
                    labelValue: "Category"
                  }, null, 8, ["items", "modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.category_id,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-3" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "description",
                    value: "Description"
                  }),
                  vue.createVNode(_component_text_area_input, {
                    id: "description",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.description,
                    "onUpdate:modelValue": ($event) => $data.form.description = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.description,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ]),
              vue.createVNode("div", { class: "grid gap-4" }, [
                vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                  vue.createVNode("h3", { class: "text-lg leading-6 font-medium text-gray-900" }, " Plant details ")
                ]),
                vue.createVNode("div", { class: "grid gap-4 col-span-3 grid-cols-3" }, [
                  vue.createVNode("div", { class: "col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "zone" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Growing Zone")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "zone",
                      type: "text",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.zone,
                      "onUpdate:modelValue": ($event) => $data.form.zone = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.zone,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", { class: "col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "height" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Mature Height")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "height",
                      type: "number",
                      min: "0",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.height,
                      "onUpdate:modelValue": ($event) => $data.form.height = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.height,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", { class: "col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "spread" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Mature Spread")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "spread",
                      type: "number",
                      min: "0",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.spread,
                      "onUpdate:modelValue": ($event) => $data.form.spread = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.spread,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", { class: "col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "bloom_color" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Bloom Color")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "bloom_color",
                      type: "text",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.bloom_color,
                      "onUpdate:modelValue": ($event) => $data.form.bloom_color = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.bloom_color,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", { class: "col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "fall_color" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Fall Color")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "fall_color",
                      type: "text",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.fall_color,
                      "onUpdate:modelValue": ($event) => $data.form.fall_color = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.fall_color,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", { class: "col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "growth_rate" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Growth Rate")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "growth_rate",
                      type: "text",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.growth_rate,
                      "onUpdate:modelValue": ($event) => $data.form.growth_rate = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.growth_rate,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ])
              ])
            ]))
          ])) : (vue.openBlock(), vue.createBlock("div", {
            key: 1,
            class: "col-span-6"
          }, [
            vue.createVNode(_component_RadioGroup, {
              modelValue: $data.selectedType,
              "onUpdate:modelValue": ($event) => $data.selectedType = $event
            }, {
              default: vue.withCtx(() => [
                vue.createVNode(_component_RadioGroupLabel, { class: "sr-only" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Please select the product type. ")
                  ]),
                  _: 1
                }),
                vue.createVNode("div", { class: "bg-white rounded-md -space-y-px" }, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.types, (type, typeIdx) => {
                    return vue.openBlock(), vue.createBlock(_component_RadioGroupOption, {
                      as: "template",
                      key: type.name,
                      value: type
                    }, {
                      default: vue.withCtx(({ checked, active }) => [
                        vue.createVNode("div", {
                          class: [
                            typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                            typeIdx === $data.types.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                            checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                            "relative border p-4 flex flex-shrink-0 cursor-pointer focus:outline-none"
                          ]
                        }, [
                          vue.createVNode("span", {
                            class: [
                              checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                              active ? "ring-2 ring-offset-2 ring-green-500" : "",
                              "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex flex-shrink-0 items-center justify-center"
                            ],
                            "aria-hidden": "true"
                          }, [
                            vue.createVNode("span", { class: "rounded-full bg-white w-1.5 h-1.5" })
                          ], 2),
                          vue.createVNode("div", { class: "ml-3 flex flex-col" }, [
                            vue.createVNode(_component_RadioGroupLabel, {
                              as: "span",
                              class: [
                                checked ? "text-green-900" : "text-gray-900",
                                "block text-sm font-medium"
                              ]
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode(vue.toDisplayString(type.name), 1)
                              ]),
                              _: 2
                            }, 1032, ["class"]),
                            vue.createVNode(_component_RadioGroupDescription, {
                              as: "span",
                              class: [
                                checked ? "text-green-700" : "text-gray-500",
                                "block text-sm"
                              ]
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode(vue.toDisplayString(type.description), 1)
                              ]),
                              _: 2
                            }, 1032, ["class"])
                          ])
                        ], 2)
                      ]),
                      _: 2
                    }, 1032, ["value"]);
                  }), 128))
                ])
              ]),
              _: 1
            }, 8, ["modelValue", "onUpdate:modelValue"])
          ]))
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          style: $data.form.type ? null : { display: "none" },
          type: "submit",
          class: { "opacity-25": $data.form.processing || !$data.form.name },
          disabled: $data.form.processing || !$data.form.name
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Product`);
            } else {
              return [
                vue.createTextVNode("Save Product")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.withDirectives(vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing || !$data.form.name },
            disabled: $data.form.processing || !$data.form.name
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Product")
            ]),
            _: 1
          }, 8, ["class", "disabled"]), [
            [vue.vShow, $data.form.type]
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$1f = _sfc_main$1f.setup;
_sfc_main$1f.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/CreateProductForm.vue");
  return _sfc_setup$1f ? _sfc_setup$1f(props, ctx) : void 0;
};
var CreateProductForm = /* @__PURE__ */ _export_sfc(_sfc_main$1f, [["ssrRender", _sfc_ssrRender$1d]]);
var CreateProductForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateProductForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1e = {
  components: {
    ProductsLayout,
    CreateProductForm
  }
};
function _sfc_ssrRender$1c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_products_layout = vue.resolveComponent("products-layout");
  const _component_create_product_form = vue.resolveComponent("create-product-form");
  _push(serverRenderer.ssrRenderComponent(_component_products_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_product_form, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_product_form)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1e = _sfc_main$1e.setup;
_sfc_main$1e.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/Create.vue");
  return _sfc_setup$1e ? _sfc_setup$1e(props, ctx) : void 0;
};
var Create$a = /* @__PURE__ */ _export_sfc(_sfc_main$1e, [["ssrRender", _sfc_ssrRender$1c]]);
var Create$b = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$a
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1d = {
  props: ["product"],
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingProductDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmProductDeletion() {
      this.confirmingProductDeletion = true;
    },
    deleteProduct() {
      this.form.delete(route("products.destroy", this.product), {
        errorBag: "deleteProduct"
      });
    }
  }
};
function _sfc_ssrRender$1b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Product `);
      } else {
        return [
          vue.createTextVNode(" Delete Product ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete this product. `);
      } else {
        return [
          vue.createTextVNode(" Delete this product. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a product is deleted, you will be unable to create orders for this product. Past orders will still be displayed for the product. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmProductDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Product `);
            } else {
              return [
                vue.createTextVNode(" Delete Product ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingProductDeletion,
          onClose: ($event) => $data.confirmingProductDeletion = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Product `);
            } else {
              return [
                vue.createTextVNode(" Delete Product ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this product? `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete this product? ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingProductDeletion = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteProduct,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Product `);
                  } else {
                    return [
                      vue.createTextVNode(" Delete Product ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingProductDeletion = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.deleteProduct,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Delete Product ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a product is deleted, you will be unable to create orders for this product. Past orders will still be displayed for the product. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmProductDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete Product ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingProductDeletion,
            onClose: ($event) => $data.confirmingProductDeletion = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Delete Product ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete this product? ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingProductDeletion = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteProduct,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Delete Product ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1d = _sfc_main$1d.setup;
_sfc_main$1d.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/DeleteProductForm.vue");
  return _sfc_setup$1d ? _sfc_setup$1d(props, ctx) : void 0;
};
var DeleteProductForm = /* @__PURE__ */ _export_sfc(_sfc_main$1d, [["ssrRender", _sfc_ssrRender$1b]]);
var DeleteProductForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteProductForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1c = {
  components: {
    ProductsLayout
  }
};
function _sfc_ssrRender$1a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_products_layout = vue.resolveComponent("products-layout");
  _push(serverRenderer.ssrRenderComponent(_component_products_layout, _attrs, null, _parent));
}
const _sfc_setup$1c = _sfc_main$1c.setup;
_sfc_main$1c.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/Index.vue");
  return _sfc_setup$1c ? _sfc_setup$1c(props, ctx) : void 0;
};
var Index$c = /* @__PURE__ */ _export_sfc(_sfc_main$1c, [["ssrRender", _sfc_ssrRender$1a]]);
var Index$d = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$c
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1b = {
  components: {
    JetButton,
    JetFormSection,
    JetLabel
  },
  props: { plant: { type: Object, required: true } },
  data() {
    return {
      features: this.$page.props.features,
      form: this.$inertia.form({
        _method: "PATCH",
        features: this.plant.features.map((feature) => feature.id)
      })
    };
  },
  methods: {
    updatePlantFeatures() {
      this.form.patch(route("plant-features.update", this.plant), {
        errorBag: "updatePlantFeatures",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$19(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, { onSubmitted: $options.updatePlantFeatures }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Plant Features`);
      } else {
        return [
          vue.createTextVNode("Plant Features")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Edit this plants features. `);
      } else {
        return [
          vue.createTextVNode(" Edit this plants features. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><fieldset class="grid grid-cols-2 lg:grid-cols-3 gap-5"${_scopeId}><legend class="sr-only"${_scopeId}>Features</legend><!--[-->`);
        serverRenderer.ssrRenderList($data.features, (feature) => {
          _push2(`<div class="relative flex items-start"${_scopeId}><div class="flex items-center h-5"${_scopeId}><input${serverRenderer.ssrRenderAttr("id", feature.id)} name="features" type="checkbox"${serverRenderer.ssrRenderAttr("value", feature.id)}${serverRenderer.ssrIncludeBooleanAttr(Array.isArray($data.form.features) ? serverRenderer.ssrLooseContain($data.form.features, feature.id) : $data.form.features) ? " checked" : ""} class="focus:ring-green-500 h-4 w-4 text-green-600 border-gray-300 rounded"${_scopeId}></div><div class="ml-3 text-sm"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: feature.id
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(feature.name)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(feature.name), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</div></div>`);
        });
        _push2(`<!--]--></fieldset></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("fieldset", { class: "grid grid-cols-2 lg:grid-cols-3 gap-5" }, [
              vue.createVNode("legend", { class: "sr-only" }, "Features"),
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.features, (feature) => {
                return vue.openBlock(), vue.createBlock("div", {
                  key: feature.id,
                  class: "relative flex items-start"
                }, [
                  vue.createVNode("div", { class: "flex items-center h-5" }, [
                    vue.withDirectives(vue.createVNode("input", {
                      id: feature.id,
                      name: "features",
                      type: "checkbox",
                      value: feature.id,
                      "onUpdate:modelValue": ($event) => $data.form.features = $event,
                      class: "focus:ring-green-500 h-4 w-4 text-green-600 border-gray-300 rounded"
                    }, null, 8, ["id", "value", "onUpdate:modelValue"]), [
                      [vue.vModelCheckbox, $data.form.features]
                    ])
                  ]),
                  vue.createVNode("div", { class: "ml-3 text-sm" }, [
                    vue.createVNode(_component_jet_label, {
                      for: feature.id
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(vue.toDisplayString(feature.name), 1)
                      ]),
                      _: 2
                    }, 1032, ["for"])
                  ])
                ]);
              }), 128))
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
          disabled: $data.form.processing || !$data.form.isDirty
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Features`);
            } else {
              return [
                vue.createTextVNode("Save Features")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
            disabled: $data.form.processing || !$data.form.isDirty
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Features")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$1b = _sfc_main$1b.setup;
_sfc_main$1b.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/PlantFeatures.vue");
  return _sfc_setup$1b ? _sfc_setup$1b(props, ctx) : void 0;
};
var PlantFeatures = /* @__PURE__ */ _export_sfc(_sfc_main$1b, [["ssrRender", _sfc_ssrRender$19]]);
var PlantFeatures$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": PlantFeatures
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1a = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput,
    SelectBox
  },
  props: { product: Object },
  data() {
    return {
      selectedCategory: this.product.category,
      categories: this.$page.props.categories,
      form: this.$inertia.form({
        _method: "PATCH",
        name: this.product.name,
        description: this.product.description,
        category_id: this.product.category_id,
        type: this.product.type,
        scientific_name: this.product.plant ? this.product.plant.scientific_name : null,
        common_name: this.product.plant ? this.product.plant.common_name : null,
        zone: this.product.plant ? this.product.plant.zone : null,
        height: this.product.plant ? this.product.plant.height : null,
        spread: this.product.plant ? this.product.plant.spread : null,
        bloom_color: this.product.plant ? this.product.plant.bloom_color : null,
        fall_color: this.product.plant ? this.product.plant.fall_color : null,
        growth_rate: this.product.plant ? this.product.plant.growth_rate : null
      })
    };
  },
  watch: {
    selectedCategory() {
      this.form.category_id = this.selectedCategory.id;
    },
    name() {
      this.form.name = this.name;
    }
  },
  computed: {
    name() {
      if (this.form.type == "plant" && this.form.scientific_name) {
        return this.form.scientific_name + " / " + this.form.common_name;
      } else {
        return this.form.name;
      }
    }
  },
  methods: {
    updateProduct() {
      this.form.patch(route("products.update", this.product), {
        errorBag: "updateProduct",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$18(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, { onSubmitted: $options.updateProduct }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.product.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.product.name), 1)
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` View and make changes to this product. `);
      } else {
        return [
          vue.createTextVNode(" View and make changes to this product. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}>`);
        if ($props.product.type != "plant") {
          _push2(`<div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "name",
            value: "Product Name"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "name",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.name,
            "onUpdate:modelValue": ($event) => $data.form.name = $event,
            required: "",
            autocomplete: "off"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.name,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
            items: $data.categories,
            modelValue: $data.selectedCategory,
            "onUpdate:modelValue": ($event) => $data.selectedCategory = $event,
            selectedItem: $data.selectedCategory,
            labelValue: "Category"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.category_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "description",
            value: "Description"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
            id: "description",
            class: "mt-1 block w-full",
            modelValue: $data.form.description,
            "onUpdate:modelValue": ($event) => $data.form.description = $event
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.description,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div></div>`);
        } else {
          _push2(`<div${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "scientific_name",
            value: "Scientific Name"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "scientific_name",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.scientific_name,
            "onUpdate:modelValue": ($event) => $data.form.scientific_name = $event,
            required: "",
            autocomplete: "off"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.scientific_name,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "common_name",
            value: "Common Name"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "common_name",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.common_name,
            "onUpdate:modelValue": ($event) => $data.form.common_name = $event,
            required: "",
            autocomplete: "off"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.common_name,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
            items: $data.categories,
            modelValue: $data.selectedCategory,
            "onUpdate:modelValue": ($event) => $data.selectedCategory = $event,
            selectedItem: $data.selectedCategory,
            labelValue: "Category"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.category_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "description",
            value: "Description"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
            id: "description",
            class: "mt-1 block w-full",
            modelValue: $data.form.description,
            "onUpdate:modelValue": ($event) => $data.form.description = $event
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.description,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div></div><div class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}> Plant details </h3></div><div class="grid gap-4 col-span-3 grid-cols-3"${_scopeId}><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "zone" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Growing Zone`);
              } else {
                return [
                  vue.createTextVNode("Growing Zone")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "zone",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.zone,
            "onUpdate:modelValue": ($event) => $data.form.zone = $event,
            autocomplete: "off"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.zone,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "height" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Mature Height`);
              } else {
                return [
                  vue.createTextVNode("Mature Height")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "height",
            type: "number",
            min: "0",
            class: "mt-1 block w-full",
            modelValue: $data.form.height,
            "onUpdate:modelValue": ($event) => $data.form.height = $event,
            autocomplete: "off"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.height,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "spread" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Mature Spread`);
              } else {
                return [
                  vue.createTextVNode("Mature Spread")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "spread",
            type: "number",
            min: "0",
            class: "mt-1 block w-full",
            modelValue: $data.form.spread,
            "onUpdate:modelValue": ($event) => $data.form.spread = $event,
            autocomplete: "off"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.spread,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "bloom_color" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Bloom Color`);
              } else {
                return [
                  vue.createTextVNode("Bloom Color")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "bloom_color",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.bloom_color,
            "onUpdate:modelValue": ($event) => $data.form.bloom_color = $event,
            autocomplete: "off"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.bloom_color,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "fall_color" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Fall Color`);
              } else {
                return [
                  vue.createTextVNode("Fall Color")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "fall_color",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.fall_color,
            "onUpdate:modelValue": ($event) => $data.form.fall_color = $event,
            autocomplete: "off"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.fall_color,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "growth_rate" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Growth Rate`);
              } else {
                return [
                  vue.createTextVNode("Growth Rate")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "growth_rate",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.growth_rate,
            "onUpdate:modelValue": ($event) => $data.form.growth_rate = $event,
            autocomplete: "off"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.growth_rate,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div></div></div></div>`);
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            $props.product.type != "plant" ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "grid gap-4"
            }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Product Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_select_box, {
                  items: $data.categories,
                  modelValue: $data.selectedCategory,
                  "onUpdate:modelValue": ($event) => $data.selectedCategory = $event,
                  selectedItem: $data.selectedCategory,
                  labelValue: "Category"
                }, null, 8, ["items", "modelValue", "onUpdate:modelValue", "selectedItem"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.category_id,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "description",
                  value: "Description"
                }),
                vue.createVNode(_component_text_area_input, {
                  id: "description",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.description,
                  "onUpdate:modelValue": ($event) => $data.form.description = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.description,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])) : (vue.openBlock(), vue.createBlock("div", { key: 1 }, [
              vue.createVNode("div", { class: "grid gap-4" }, [
                vue.createVNode("div", { class: "col-span-3" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "scientific_name",
                    value: "Scientific Name"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "scientific_name",
                    type: "text",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.scientific_name,
                    "onUpdate:modelValue": ($event) => $data.form.scientific_name = $event,
                    required: "",
                    autocomplete: "off"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.scientific_name,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-3" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "common_name",
                    value: "Common Name"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "common_name",
                    type: "text",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.common_name,
                    "onUpdate:modelValue": ($event) => $data.form.common_name = $event,
                    required: "",
                    autocomplete: "off"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.common_name,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-3" }, [
                  vue.createVNode(_component_select_box, {
                    items: $data.categories,
                    modelValue: $data.selectedCategory,
                    "onUpdate:modelValue": ($event) => $data.selectedCategory = $event,
                    selectedItem: $data.selectedCategory,
                    labelValue: "Category"
                  }, null, 8, ["items", "modelValue", "onUpdate:modelValue", "selectedItem"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.category_id,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                vue.createVNode("div", { class: "col-span-3" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "description",
                    value: "Description"
                  }),
                  vue.createVNode(_component_text_area_input, {
                    id: "description",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.description,
                    "onUpdate:modelValue": ($event) => $data.form.description = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.description,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ]),
              vue.createVNode("div", { class: "grid gap-4" }, [
                vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                  vue.createVNode("h3", { class: "text-lg leading-6 font-medium text-gray-900" }, " Plant details ")
                ]),
                vue.createVNode("div", { class: "grid gap-4 col-span-3 grid-cols-3" }, [
                  vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "zone" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Growing Zone")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "zone",
                      type: "text",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.zone,
                      "onUpdate:modelValue": ($event) => $data.form.zone = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.zone,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "height" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Mature Height")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "height",
                      type: "number",
                      min: "0",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.height,
                      "onUpdate:modelValue": ($event) => $data.form.height = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.height,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "spread" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Mature Spread")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "spread",
                      type: "number",
                      min: "0",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.spread,
                      "onUpdate:modelValue": ($event) => $data.form.spread = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.spread,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "bloom_color" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Bloom Color")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "bloom_color",
                      type: "text",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.bloom_color,
                      "onUpdate:modelValue": ($event) => $data.form.bloom_color = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.bloom_color,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "fall_color" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Fall Color")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "fall_color",
                      type: "text",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.fall_color,
                      "onUpdate:modelValue": ($event) => $data.form.fall_color = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.fall_color,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ]),
                  vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                    vue.createVNode(_component_jet_label, { for: "growth_rate" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Growth Rate")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_jet_input, {
                      id: "growth_rate",
                      type: "text",
                      class: "mt-1 block w-full",
                      modelValue: $data.form.growth_rate,
                      "onUpdate:modelValue": ($event) => $data.form.growth_rate = $event,
                      autocomplete: "off"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vue.createVNode(_component_jet_input_error, {
                      message: $data.form.errors.growth_rate,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ])
              ])
            ]))
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
          disabled: $data.form.processing || !$data.form.isDirty
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Product`);
            } else {
              return [
                vue.createTextVNode("Save Product")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
            disabled: $data.form.processing || !$data.form.isDirty
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Product")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$1a = _sfc_main$1a.setup;
_sfc_main$1a.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/UpdateProductForm.vue");
  return _sfc_setup$1a ? _sfc_setup$1a(props, ctx) : void 0;
};
var UpdateProductForm = /* @__PURE__ */ _export_sfc(_sfc_main$1a, [["ssrRender", _sfc_ssrRender$18]]);
var UpdateProductForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateProductForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$19 = {
  components: {
    JetButton,
    ProductsLayout,
    UpdateProductForm,
    DeleteProductForm,
    PlantFeatures,
    ProductPricing
  },
  data() {
    return {
      editingPricing: false
    };
  },
  computed: {
    product() {
      return this.$page.props.product;
    },
    category() {
      return this.$page.props.category;
    }
  }
};
function _sfc_ssrRender$17(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_products_layout = vue.resolveComponent("products-layout");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_update_product_form = vue.resolveComponent("update-product-form");
  const _component_plant_features = vue.resolveComponent("plant-features");
  const _component_delete_product_form = vue.resolveComponent("delete-product-form");
  const _component_product_pricing = vue.resolveComponent("product-pricing");
  _push(serverRenderer.ssrRenderComponent(_component_products_layout, _attrs, {
    nav: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (!$data.editingPricing) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
            onClick: ($event) => $data.editingPricing = true
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Edit Sizes &amp; Pricing`);
              } else {
                return [
                  vue.createTextVNode("Edit Sizes & Pricing")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
            onClick: ($event) => $data.editingPricing = false
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Back to Details`);
              } else {
                return [
                  vue.createTextVNode("Back to Details")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        }
      } else {
        return [
          !$data.editingPricing ? (vue.openBlock(), vue.createBlock(_component_jet_button, {
            key: 0,
            onClick: ($event) => $data.editingPricing = true
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Edit Sizes & Pricing")
            ]),
            _: 1
          }, 8, ["onClick"])) : (vue.openBlock(), vue.createBlock(_component_jet_button, {
            key: 1,
            onClick: ($event) => $data.editingPricing = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Back to Details")
            ]),
            _: 1
          }, 8, ["onClick"]))
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (!$data.editingPricing) {
          _push2(`<div class="space-y-6"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_update_product_form, { product: $options.product }, null, _parent2, _scopeId));
          if ($options.product.plant) {
            _push2(serverRenderer.ssrRenderComponent(_component_plant_features, {
              plant: $options.product.plant
            }, null, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
          _push2(serverRenderer.ssrRenderComponent(_component_delete_product_form, { product: $options.product }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div class="space-y-6"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_product_pricing, {
            product: $options.product,
            category: $options.category
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        }
      } else {
        return [
          !$data.editingPricing ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "space-y-6"
          }, [
            vue.createVNode(_component_update_product_form, { product: $options.product }, null, 8, ["product"]),
            $options.product.plant ? (vue.openBlock(), vue.createBlock(_component_plant_features, {
              key: 0,
              plant: $options.product.plant
            }, null, 8, ["plant"])) : vue.createCommentVNode("", true),
            vue.createVNode(_component_delete_product_form, { product: $options.product }, null, 8, ["product"])
          ])) : (vue.openBlock(), vue.createBlock("div", {
            key: 1,
            class: "space-y-6"
          }, [
            vue.createVNode(_component_product_pricing, {
              product: $options.product,
              category: $options.category
            }, null, 8, ["product", "category"])
          ]))
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$19 = _sfc_main$19.setup;
_sfc_main$19.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Products/Show.vue");
  return _sfc_setup$19 ? _sfc_setup$19(props, ctx) : void 0;
};
var Show$c = /* @__PURE__ */ _export_sfc(_sfc_main$19, [["ssrRender", _sfc_ssrRender$17]]);
var Show$d = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$c
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$18 = {
  components: {
    JetActionSection,
    JetDangerButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingUserDeletion: false,
      form: this.$inertia.form({
        password: ""
      })
    };
  },
  methods: {
    confirmUserDeletion() {
      this.confirmingUserDeletion = true;
      setTimeout(() => this.$refs.password.focus(), 250);
    },
    deleteUser() {
      this.form.delete(route("current-user.destroy"), {
        preserveScroll: true,
        onSuccess: () => this.closeModal(),
        onError: () => this.$refs.password.focus(),
        onFinish: () => this.form.reset()
      });
    },
    closeModal() {
      this.confirmingUserDeletion = false;
      this.form.reset();
    }
  }
};
function _sfc_ssrRender$16(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Account `);
      } else {
        return [
          vue.createTextVNode(" Delete Account ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Permanently delete your account. `);
      } else {
        return [
          vue.createTextVNode(" Permanently delete your account. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmUserDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Account `);
            } else {
              return [
                vue.createTextVNode(" Delete Account ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.confirmingUserDeletion,
          onClose: $options.closeModal
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Account `);
            } else {
              return [
                vue.createTextVNode(" Delete Account ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account. <div class="mt-4"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input, {
                type: "password",
                class: "mt-1 block w-3/4",
                placeholder: "Password",
                ref: "password",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                onKeyup: $options.deleteUser
              }, null, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
                message: $data.form.errors.password,
                class: "mt-2"
              }, null, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account. "),
                vue.createVNode("div", { class: "mt-4" }, [
                  vue.createVNode(_component_jet_input, {
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    ref: "password",
                    modelValue: $data.form.password,
                    "onUpdate:modelValue": ($event) => $data.form.password = $event,
                    onKeyup: vue.withKeys($options.deleteUser, ["enter"])
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.password,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteUser,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Account `);
                  } else {
                    return [
                      vue.createTextVNode(" Delete Account ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.deleteUser,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Delete Account ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmUserDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete Account ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_dialog_modal, {
            show: $data.confirmingUserDeletion,
            onClose: $options.closeModal
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Delete Account ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account. "),
              vue.createVNode("div", { class: "mt-4" }, [
                vue.createVNode(_component_jet_input, {
                  type: "password",
                  class: "mt-1 block w-3/4",
                  placeholder: "Password",
                  ref: "password",
                  modelValue: $data.form.password,
                  "onUpdate:modelValue": ($event) => $data.form.password = $event,
                  onKeyup: vue.withKeys($options.deleteUser, ["enter"])
                }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteUser,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Delete Account ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$18 = _sfc_main$18.setup;
_sfc_main$18.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/DeleteUserForm.vue");
  return _sfc_setup$18 ? _sfc_setup$18(props, ctx) : void 0;
};
var DeleteUserForm = /* @__PURE__ */ _export_sfc(_sfc_main$18, [["ssrRender", _sfc_ssrRender$16]]);
var DeleteUserForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteUserForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$17 = {
  props: ["sessions"],
  components: {
    JetActionMessage,
    JetActionSection,
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingLogout: false,
      form: this.$inertia.form({
        password: ""
      })
    };
  },
  methods: {
    confirmLogout() {
      this.confirmingLogout = true;
      setTimeout(() => this.$refs.password.focus(), 250);
    },
    logoutOtherBrowserSessions() {
      this.form.delete(route("other-browser-sessions.destroy"), {
        preserveScroll: true,
        onSuccess: () => this.closeModal(),
        onError: () => this.$refs.password.focus(),
        onFinish: () => this.form.reset()
      });
    },
    closeModal() {
      this.confirmingLogout = false;
      this.form.reset();
    }
  }
};
function _sfc_ssrRender$15(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_action_message = vue.resolveComponent("jet-action-message");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Browser Sessions `);
      } else {
        return [
          vue.createTextVNode(" Browser Sessions ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Manage and log out your active sessions on other browsers and devices. `);
      } else {
        return [
          vue.createTextVNode(" Manage and log out your active sessions on other browsers and devices. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password. </div>`);
        if ($props.sessions.length > 0) {
          _push2(`<div class="mt-5 space-y-6"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList($props.sessions, (session, i2) => {
            _push2(`<div class="flex items-center"${_scopeId}><div${_scopeId}>`);
            if (session.agent.is_desktop) {
              _push2(`<svg fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" stroke="currentColor" class="w-8 h-8 text-gray-500"${_scopeId}><path d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"${_scopeId}></path></svg>`);
            } else {
              _push2(`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" class="w-8 h-8 text-gray-500"${_scopeId}><path d="M0 0h24v24H0z" stroke="none"${_scopeId}></path><rect x="7" y="4" width="10" height="16" rx="1"${_scopeId}></rect><path d="M11 5h2M12 17v.01"${_scopeId}></path></svg>`);
            }
            _push2(`</div><div class="ml-3"${_scopeId}><div class="text-sm text-gray-600"${_scopeId}>${serverRenderer.ssrInterpolate(session.agent.platform)} - ${serverRenderer.ssrInterpolate(session.agent.browser)}</div><div${_scopeId}><div class="text-xs text-gray-500"${_scopeId}>${serverRenderer.ssrInterpolate(session.ip_address)}, `);
            if (session.is_current_device) {
              _push2(`<span class="text-green-500 font-semibold"${_scopeId}>This device</span>`);
            } else {
              _push2(`<span${_scopeId}>Last active ${serverRenderer.ssrInterpolate(session.last_active)}</span>`);
            }
            _push2(`</div></div></div></div>`);
          });
          _push2(`<!--]--></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="flex items-center mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, { onClick: $options.confirmLogout }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log Out Other Browser Sessions `);
            } else {
              return [
                vue.createTextVNode(" Log Out Other Browser Sessions ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_action_message, {
          on: $data.form.recentlySuccessful,
          class: "ml-3"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Done. `);
            } else {
              return [
                vue.createTextVNode(" Done. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.confirmingLogout,
          onClose: $options.closeModal
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log Out Other Browser Sessions `);
            } else {
              return [
                vue.createTextVNode(" Log Out Other Browser Sessions ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. <div class="mt-4"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input, {
                type: "password",
                class: "mt-1 block w-3/4",
                placeholder: "Password",
                ref: "password",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                onKeyup: $options.logoutOtherBrowserSessions
              }, null, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
                message: $data.form.errors.password,
                class: "mt-2"
              }, null, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                vue.createTextVNode(" Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. "),
                vue.createVNode("div", { class: "mt-4" }, [
                  vue.createVNode(_component_jet_input, {
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    ref: "password",
                    modelValue: $data.form.password,
                    "onUpdate:modelValue": ($event) => $data.form.password = $event,
                    onKeyup: vue.withKeys($options.logoutOtherBrowserSessions, ["enter"])
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                  vue.createVNode(_component_jet_input_error, {
                    message: $data.form.errors.password,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.logoutOtherBrowserSessions,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Log Out Other Browser Sessions `);
                  } else {
                    return [
                      vue.createTextVNode(" Log Out Other Browser Sessions ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.logoutOtherBrowserSessions,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Log Out Other Browser Sessions ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password. "),
          $props.sessions.length > 0 ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "mt-5 space-y-6"
          }, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.sessions, (session, i2) => {
              return vue.openBlock(), vue.createBlock("div", {
                class: "flex items-center",
                key: i2
              }, [
                vue.createVNode("div", null, [
                  session.agent.is_desktop ? (vue.openBlock(), vue.createBlock("svg", {
                    key: 0,
                    fill: "none",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    "stroke-width": "2",
                    viewBox: "0 0 24 24",
                    stroke: "currentColor",
                    class: "w-8 h-8 text-gray-500"
                  }, [
                    vue.createVNode("path", { d: "M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" })
                  ])) : (vue.openBlock(), vue.createBlock("svg", {
                    key: 1,
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    "stroke-width": "2",
                    stroke: "currentColor",
                    fill: "none",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    class: "w-8 h-8 text-gray-500"
                  }, [
                    vue.createVNode("path", {
                      d: "M0 0h24v24H0z",
                      stroke: "none"
                    }),
                    vue.createVNode("rect", {
                      x: "7",
                      y: "4",
                      width: "10",
                      height: "16",
                      rx: "1"
                    }),
                    vue.createVNode("path", { d: "M11 5h2M12 17v.01" })
                  ]))
                ]),
                vue.createVNode("div", { class: "ml-3" }, [
                  vue.createVNode("div", { class: "text-sm text-gray-600" }, vue.toDisplayString(session.agent.platform) + " - " + vue.toDisplayString(session.agent.browser), 1),
                  vue.createVNode("div", null, [
                    vue.createVNode("div", { class: "text-xs text-gray-500" }, [
                      vue.createTextVNode(vue.toDisplayString(session.ip_address) + ", ", 1),
                      session.is_current_device ? (vue.openBlock(), vue.createBlock("span", {
                        key: 0,
                        class: "text-green-500 font-semibold"
                      }, "This device")) : (vue.openBlock(), vue.createBlock("span", { key: 1 }, "Last active " + vue.toDisplayString(session.last_active), 1))
                    ])
                  ])
                ])
              ]);
            }), 128))
          ])) : vue.createCommentVNode("", true),
          vue.createVNode("div", { class: "flex items-center mt-5" }, [
            vue.createVNode(_component_jet_button, { onClick: $options.confirmLogout }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Log Out Other Browser Sessions ")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_action_message, {
              on: $data.form.recentlySuccessful,
              class: "ml-3"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Done. ")
              ]),
              _: 1
            }, 8, ["on"])
          ]),
          vue.createVNode(_component_jet_dialog_modal, {
            show: $data.confirmingLogout,
            onClose: $options.closeModal
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Log Out Other Browser Sessions ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. "),
              vue.createVNode("div", { class: "mt-4" }, [
                vue.createVNode(_component_jet_input, {
                  type: "password",
                  class: "mt-1 block w-3/4",
                  placeholder: "Password",
                  ref: "password",
                  modelValue: $data.form.password,
                  "onUpdate:modelValue": ($event) => $data.form.password = $event,
                  onKeyup: vue.withKeys($options.logoutOtherBrowserSessions, ["enter"])
                }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.logoutOtherBrowserSessions,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Log Out Other Browser Sessions ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$17 = _sfc_main$17.setup;
_sfc_main$17.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/LogoutOtherBrowserSessionsForm.vue");
  return _sfc_setup$17 ? _sfc_setup$17(props, ctx) : void 0;
};
var LogoutOtherBrowserSessionsForm = /* @__PURE__ */ _export_sfc(_sfc_main$17, [["ssrRender", _sfc_ssrRender$15]]);
var LogoutOtherBrowserSessionsForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": LogoutOtherBrowserSessionsForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$16 = {
  emits: ["confirmed"],
  props: {
    title: {
      default: "Confirm Password"
    },
    content: {
      default: "For your security, please confirm your password to continue."
    },
    button: {
      default: "Confirm"
    }
  },
  components: {
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingPassword: false,
      form: {
        password: "",
        error: ""
      }
    };
  },
  methods: {
    startConfirmingPassword() {
      axios.get(route("password.confirmation")).then((response) => {
        if (response.data.confirmed) {
          this.$emit("confirmed");
        } else {
          this.confirmingPassword = true;
          setTimeout(() => this.$refs.password.focus(), 250);
        }
      });
    },
    confirmPassword() {
      this.form.processing = true;
      axios.post(route("password.confirm"), {
        password: this.form.password
      }).then(() => {
        this.form.processing = false;
        this.closeModal();
        this.$nextTick(() => this.$emit("confirmed"));
      }).catch((error) => {
        this.form.processing = false;
        this.form.error = error.response.data.errors.password[0];
        this.$refs.password.focus();
      });
    },
    closeModal() {
      this.confirmingPassword = false;
      this.form.password = "";
      this.form.error = "";
    }
  }
};
function _sfc_ssrRender$14(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<span${serverRenderer.ssrRenderAttrs(_attrs)}><span>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</span>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.confirmingPassword,
    onClose: $options.closeModal
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.title)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.title), 1)
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.content)} <div class="mt-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          type: "password",
          class: "mt-1 block w-3/4",
          placeholder: "Password",
          ref: "password",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          onKeyup: $options.confirmPassword
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.error,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.content) + " ", 1),
          vue.createVNode("div", { class: "mt-4" }, [
            vue.createVNode(_component_jet_input, {
              type: "password",
              class: "mt-1 block w-3/4",
              placeholder: "Password",
              ref: "password",
              modelValue: $data.form.password,
              "onUpdate:modelValue": ($event) => $data.form.password = $event,
              onKeyup: vue.withKeys($options.confirmPassword, ["enter"])
            }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
            vue.createVNode(_component_jet_input_error, {
              message: $data.form.error,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-2", { "opacity-25": $data.form.processing }],
          onClick: $options.confirmPassword,
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${serverRenderer.ssrInterpolate($props.button)}`);
            } else {
              return [
                vue.createTextVNode(vue.toDisplayString($props.button), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_button, {
            class: ["ml-2", { "opacity-25": $data.form.processing }],
            onClick: $options.confirmPassword,
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(vue.toDisplayString($props.button), 1)
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</span>`);
}
const _sfc_setup$16 = _sfc_main$16.setup;
_sfc_main$16.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ConfirmsPassword.vue");
  return _sfc_setup$16 ? _sfc_setup$16(props, ctx) : void 0;
};
var JetConfirmsPassword = /* @__PURE__ */ _export_sfc(_sfc_main$16, [["ssrRender", _sfc_ssrRender$14]]);
const _sfc_main$15 = {
  components: {
    JetActionSection,
    JetButton,
    JetConfirmsPassword,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      enabling: false,
      disabling: false,
      qrCode: null,
      recoveryCodes: []
    };
  },
  methods: {
    enableTwoFactorAuthentication() {
      this.enabling = true;
      this.$inertia.post(
        "/user/two-factor-authentication",
        {},
        {
          preserveScroll: true,
          onSuccess: () => Promise.all([
            this.showQrCode(),
            this.showRecoveryCodes()
          ]),
          onFinish: () => this.enabling = false
        }
      );
    },
    showQrCode() {
      return axios.get("/user/two-factor-qr-code").then((response) => {
        this.qrCode = response.data.svg;
      });
    },
    showRecoveryCodes() {
      return axios.get("/user/two-factor-recovery-codes").then((response) => {
        this.recoveryCodes = response.data;
      });
    },
    regenerateRecoveryCodes() {
      axios.post("/user/two-factor-recovery-codes").then((response) => {
        this.showRecoveryCodes();
      });
    },
    disableTwoFactorAuthentication() {
      this.disabling = true;
      this.$inertia.delete("/user/two-factor-authentication", {
        preserveScroll: true,
        onSuccess: () => this.disabling = false
      });
    }
  },
  computed: {
    twoFactorEnabled() {
      return !this.enabling && this.$page.props.user.two_factor_enabled;
    }
  }
};
function _sfc_ssrRender$13(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_confirms_password = vue.resolveComponent("jet-confirms-password");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Two Factor Authentication `);
      } else {
        return [
          vue.createTextVNode(" Two Factor Authentication ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Add additional security to your account using two factor authentication. `);
      } else {
        return [
          vue.createTextVNode(" Add additional security to your account using two factor authentication. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($options.twoFactorEnabled) {
          _push2(`<h3 class="text-lg text-gray-900"${_scopeId}> You have enabled two factor authentication. </h3>`);
        } else {
          _push2(`<h3 class="text-lg text-gray-900"${_scopeId}> You have not enabled two factor authentication. </h3>`);
        }
        _push2(`<div class="mt-3 max-w-xl text-sm text-gray-600"${_scopeId}><p${_scopeId}> When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone&#39;s Google Authenticator application. </p></div>`);
        if ($options.twoFactorEnabled) {
          _push2(`<div${_scopeId}>`);
          if ($data.qrCode) {
            _push2(`<div${_scopeId}><div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}><p class="font-semibold"${_scopeId}> Two factor authentication is now enabled. Scan the following QR code using your phone&#39;s authenticator application. </p></div><div class="mt-4"${_scopeId}>${$data.qrCode}</div></div>`);
          } else {
            _push2(`<!---->`);
          }
          if ($data.recoveryCodes.length > 0) {
            _push2(`<div${_scopeId}><div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}><p class="font-semibold"${_scopeId}> Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost. </p></div><div class="grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg"${_scopeId}><!--[-->`);
            serverRenderer.ssrRenderList($data.recoveryCodes, (code) => {
              _push2(`<div${_scopeId}>${serverRenderer.ssrInterpolate(code)}</div>`);
            });
            _push2(`<!--]--></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="mt-5"${_scopeId}>`);
        if (!$options.twoFactorEnabled) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: $options.enableTwoFactorAuthentication }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(serverRenderer.ssrRenderComponent(_component_jet_button, {
                  type: "button",
                  class: { "opacity-25": $data.enabling },
                  disabled: $data.enabling
                }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Enable `);
                    } else {
                      return [
                        vue.createTextVNode(" Enable ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
              } else {
                return [
                  vue.createVNode(_component_jet_button, {
                    type: "button",
                    class: { "opacity-25": $data.enabling },
                    disabled: $data.enabling
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Enable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: $options.regenerateRecoveryCodes }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                if ($data.recoveryCodes.length > 0) {
                  _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, { class: "mr-3" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Regenerate Recovery Codes `);
                      } else {
                        return [
                          vue.createTextVNode(" Regenerate Recovery Codes ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
              } else {
                return [
                  $data.recoveryCodes.length > 0 ? (vue.openBlock(), vue.createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Regenerate Recovery Codes ")
                    ]),
                    _: 1
                  })) : vue.createCommentVNode("", true)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: $options.showRecoveryCodes }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                if ($data.recoveryCodes.length === 0) {
                  _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, { class: "mr-3" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Show Recovery Codes `);
                      } else {
                        return [
                          vue.createTextVNode(" Show Recovery Codes ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
              } else {
                return [
                  $data.recoveryCodes.length === 0 ? (vue.openBlock(), vue.createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Show Recovery Codes ")
                    ]),
                    _: 1
                  })) : vue.createCommentVNode("", true)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: $options.disableTwoFactorAuthentication }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                  class: { "opacity-25": $data.disabling },
                  disabled: $data.disabling
                }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Disable `);
                    } else {
                      return [
                        vue.createTextVNode(" Disable ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
              } else {
                return [
                  vue.createVNode(_component_jet_danger_button, {
                    class: { "opacity-25": $data.disabling },
                    disabled: $data.disabling
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Disable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        }
        _push2(`</div>`);
      } else {
        return [
          $options.twoFactorEnabled ? (vue.openBlock(), vue.createBlock("h3", {
            key: 0,
            class: "text-lg text-gray-900"
          }, " You have enabled two factor authentication. ")) : (vue.openBlock(), vue.createBlock("h3", {
            key: 1,
            class: "text-lg text-gray-900"
          }, " You have not enabled two factor authentication. ")),
          vue.createVNode("div", { class: "mt-3 max-w-xl text-sm text-gray-600" }, [
            vue.createVNode("p", null, " When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone's Google Authenticator application. ")
          ]),
          $options.twoFactorEnabled ? (vue.openBlock(), vue.createBlock("div", { key: 2 }, [
            $data.qrCode ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
              vue.createVNode("div", { class: "mt-4 max-w-xl text-sm text-gray-600" }, [
                vue.createVNode("p", { class: "font-semibold" }, " Two factor authentication is now enabled. Scan the following QR code using your phone's authenticator application. ")
              ]),
              vue.createVNode("div", {
                class: "mt-4",
                innerHTML: $data.qrCode
              }, null, 8, ["innerHTML"])
            ])) : vue.createCommentVNode("", true),
            $data.recoveryCodes.length > 0 ? (vue.openBlock(), vue.createBlock("div", { key: 1 }, [
              vue.createVNode("div", { class: "mt-4 max-w-xl text-sm text-gray-600" }, [
                vue.createVNode("p", { class: "font-semibold" }, " Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost. ")
              ]),
              vue.createVNode("div", { class: "grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg" }, [
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.recoveryCodes, (code) => {
                  return vue.openBlock(), vue.createBlock("div", { key: code }, vue.toDisplayString(code), 1);
                }), 128))
              ])
            ])) : vue.createCommentVNode("", true)
          ])) : vue.createCommentVNode("", true),
          vue.createVNode("div", { class: "mt-5" }, [
            !$options.twoFactorEnabled ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
              vue.createVNode(_component_jet_confirms_password, { onConfirmed: $options.enableTwoFactorAuthentication }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_jet_button, {
                    type: "button",
                    class: { "opacity-25": $data.enabling },
                    disabled: $data.enabling
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Enable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ]),
                _: 1
              }, 8, ["onConfirmed"])
            ])) : (vue.openBlock(), vue.createBlock("div", { key: 1 }, [
              vue.createVNode(_component_jet_confirms_password, { onConfirmed: $options.regenerateRecoveryCodes }, {
                default: vue.withCtx(() => [
                  $data.recoveryCodes.length > 0 ? (vue.openBlock(), vue.createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Regenerate Recovery Codes ")
                    ]),
                    _: 1
                  })) : vue.createCommentVNode("", true)
                ]),
                _: 1
              }, 8, ["onConfirmed"]),
              vue.createVNode(_component_jet_confirms_password, { onConfirmed: $options.showRecoveryCodes }, {
                default: vue.withCtx(() => [
                  $data.recoveryCodes.length === 0 ? (vue.openBlock(), vue.createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Show Recovery Codes ")
                    ]),
                    _: 1
                  })) : vue.createCommentVNode("", true)
                ]),
                _: 1
              }, 8, ["onConfirmed"]),
              vue.createVNode(_component_jet_confirms_password, { onConfirmed: $options.disableTwoFactorAuthentication }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_jet_danger_button, {
                    class: { "opacity-25": $data.disabling },
                    disabled: $data.disabling
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Disable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ]),
                _: 1
              }, 8, ["onConfirmed"])
            ]))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$15 = _sfc_main$15.setup;
_sfc_main$15.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/TwoFactorAuthenticationForm.vue");
  return _sfc_setup$15 ? _sfc_setup$15(props, ctx) : void 0;
};
var TwoFactorAuthenticationForm = /* @__PURE__ */ _export_sfc(_sfc_main$15, [["ssrRender", _sfc_ssrRender$13]]);
var TwoFactorAuthenticationForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": TwoFactorAuthenticationForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$14 = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel
  },
  data() {
    return {
      form: this.$inertia.form({
        current_password: "",
        password: "",
        password_confirmation: ""
      })
    };
  },
  methods: {
    updatePassword() {
      this.form.put(route("user-password.update"), {
        errorBag: "updatePassword",
        preserveScroll: true,
        onSuccess: () => this.form.reset(),
        onError: () => {
          if (this.form.errors.password) {
            this.form.reset("password", "password_confirmation");
            this.$refs.password.focus();
          }
          if (this.form.errors.current_password) {
            this.form.reset("current_password");
            this.$refs.current_password.focus();
          }
        }
      });
    }
  }
};
function _sfc_ssrRender$12(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_action_message = vue.resolveComponent("jet-action-message");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.updatePassword }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update Password `);
      } else {
        return [
          vue.createTextVNode(" Update Password ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Ensure your account is using a long, random password to stay secure. `);
      } else {
        return [
          vue.createTextVNode(" Ensure your account is using a long, random password to stay secure. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "current_password",
          value: "Current Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "current_password",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: $data.form.current_password,
          "onUpdate:modelValue": ($event) => $data.form.current_password = $event,
          ref: "current_password",
          autocomplete: "current-password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.current_password,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "New Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          ref: "password",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.password,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "password_confirmation",
          value: "Confirm Password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "password_confirmation",
          type: "password",
          class: "mt-1 block w-full",
          modelValue: $data.form.password_confirmation,
          "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.password_confirmation,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            vue.createVNode(_component_jet_label, {
              for: "current_password",
              value: "Current Password"
            }),
            vue.createVNode(_component_jet_input, {
              id: "current_password",
              type: "password",
              class: "mt-1 block w-full",
              modelValue: $data.form.current_password,
              "onUpdate:modelValue": ($event) => $data.form.current_password = $event,
              ref: "current_password",
              autocomplete: "current-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input_error, {
              message: $data.form.errors.current_password,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            vue.createVNode(_component_jet_label, {
              for: "password",
              value: "New Password"
            }),
            vue.createVNode(_component_jet_input, {
              id: "password",
              type: "password",
              class: "mt-1 block w-full",
              modelValue: $data.form.password,
              "onUpdate:modelValue": ($event) => $data.form.password = $event,
              ref: "password",
              autocomplete: "new-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input_error, {
              message: $data.form.errors.password,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            vue.createVNode(_component_jet_label, {
              for: "password_confirmation",
              value: "Confirm Password"
            }),
            vue.createVNode(_component_jet_input, {
              id: "password_confirmation",
              type: "password",
              class: "mt-1 block w-full",
              modelValue: $data.form.password_confirmation,
              "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
              autocomplete: "new-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input_error, {
              message: $data.form.errors.password_confirmation,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_action_message, {
          on: $data.form.recentlySuccessful,
          class: "mr-3"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Saved. `);
            } else {
              return [
                vue.createTextVNode(" Saved. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                vue.createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_action_message, {
            on: $data.form.recentlySuccessful,
            class: "mr-3"
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Saved. ")
            ]),
            _: 1
          }, 8, ["on"]),
          vue.createVNode(_component_jet_button, {
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$14 = _sfc_main$14.setup;
_sfc_main$14.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/UpdatePasswordForm.vue");
  return _sfc_setup$14 ? _sfc_setup$14(props, ctx) : void 0;
};
var UpdatePasswordForm = /* @__PURE__ */ _export_sfc(_sfc_main$14, [["ssrRender", _sfc_ssrRender$12]]);
var UpdatePasswordForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdatePasswordForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$13 = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton
  },
  props: ["user"],
  data() {
    return {
      form: this.$inertia.form({
        _method: "PUT",
        name: this.user.name,
        email: this.user.email,
        photo: null
      }),
      photoPreview: null
    };
  },
  methods: {
    updateProfileInformation() {
      if (this.$refs.photo) {
        this.form.photo = this.$refs.photo.files[0];
      }
      this.form.post(route("user-profile-information.update"), {
        errorBag: "updateProfileInformation",
        preserveScroll: true,
        onSuccess: () => this.clearPhotoFileInput()
      });
    },
    selectNewPhoto() {
      this.$refs.photo.click();
    },
    updatePhotoPreview() {
      const photo = this.$refs.photo.files[0];
      if (!photo)
        return;
      const reader = new FileReader();
      reader.onload = (e2) => {
        this.photoPreview = e2.target.result;
      };
      reader.readAsDataURL(photo);
    },
    deletePhoto() {
      this.$inertia.delete(route("current-user-photo.destroy"), {
        preserveScroll: true,
        onSuccess: () => {
          this.photoPreview = null;
          this.clearPhotoFileInput();
        }
      });
    },
    clearPhotoFileInput() {
      var _a;
      if ((_a = this.$refs.photo) == null ? void 0 : _a.value) {
        this.$refs.photo.value = null;
      }
    }
  }
};
function _sfc_ssrRender$11(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_action_message = vue.resolveComponent("jet-action-message");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.updateProfileInformation }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Profile Information `);
      } else {
        return [
          vue.createTextVNode(" Profile Information ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update your account&#39;s profile information and email address. `);
      } else {
        return [
          vue.createTextVNode(" Update your account's profile information and email address. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (_ctx.$page.props.jetstream.managesProfilePhotos) {
          _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}><input type="file" class="hidden"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "photo",
            value: "Photo"
          }, null, _parent2, _scopeId));
          _push2(`<div class="mt-2" style="${serverRenderer.ssrRenderStyle(!$data.photoPreview ? null : { display: "none" })}"${_scopeId}><img${serverRenderer.ssrRenderAttr("src", $props.user.profile_photo_url)}${serverRenderer.ssrRenderAttr("alt", $props.user.name)} class="rounded-full h-20 w-20 object-cover"${_scopeId}></div><div class="mt-2" style="${serverRenderer.ssrRenderStyle($data.photoPreview ? null : { display: "none" })}"${_scopeId}><span class="block rounded-full w-20 h-20" style="${serverRenderer.ssrRenderStyle(
            "background-size: cover; background-repeat: no-repeat; background-position: center center; background-image: url('" + $data.photoPreview + "');"
          )}"${_scopeId}></span></div>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
            class: "mt-2 mr-2",
            type: "button",
            onClick: $options.selectNewPhoto
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Select A New Photo `);
              } else {
                return [
                  vue.createTextVNode(" Select A New Photo ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          if ($props.user.profile_photo_path) {
            _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
              type: "button",
              class: "mt-2",
              onClick: $options.deletePhoto
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Remove Photo `);
                } else {
                  return [
                    vue.createTextVNode(" Remove Photo ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.photo,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          autocomplete: "name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          class: "mt-1 block w-full",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.email,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          _ctx.$page.props.jetstream.managesProfilePhotos ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "col-span-6 sm:col-span-4"
          }, [
            vue.createVNode("input", {
              type: "file",
              class: "hidden",
              ref: "photo",
              onChange: $options.updatePhotoPreview
            }, null, 40, ["onChange"]),
            vue.createVNode(_component_jet_label, {
              for: "photo",
              value: "Photo"
            }),
            vue.withDirectives(vue.createVNode("div", { class: "mt-2" }, [
              vue.createVNode("img", {
                src: $props.user.profile_photo_url,
                alt: $props.user.name,
                class: "rounded-full h-20 w-20 object-cover"
              }, null, 8, ["src", "alt"])
            ], 512), [
              [vue.vShow, !$data.photoPreview]
            ]),
            vue.withDirectives(vue.createVNode("div", { class: "mt-2" }, [
              vue.createVNode("span", {
                class: "block rounded-full w-20 h-20",
                style: "background-size: cover; background-repeat: no-repeat; background-position: center center; background-image: url('" + $data.photoPreview + "');"
              }, null, 4)
            ], 512), [
              [vue.vShow, $data.photoPreview]
            ]),
            vue.createVNode(_component_jet_secondary_button, {
              class: "mt-2 mr-2",
              type: "button",
              onClick: vue.withModifiers($options.selectNewPhoto, ["prevent"])
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Select A New Photo ")
              ]),
              _: 1
            }, 8, ["onClick"]),
            $props.user.profile_photo_path ? (vue.openBlock(), vue.createBlock(_component_jet_secondary_button, {
              key: 0,
              type: "button",
              class: "mt-2",
              onClick: vue.withModifiers($options.deletePhoto, ["prevent"])
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Remove Photo ")
              ]),
              _: 1
            }, 8, ["onClick"])) : vue.createCommentVNode("", true),
            vue.createVNode(_component_jet_input_error, {
              message: $data.form.errors.photo,
              class: "mt-2"
            }, null, 8, ["message"])
          ])) : vue.createCommentVNode("", true),
          vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            vue.createVNode(_component_jet_label, {
              for: "name",
              value: "Name"
            }),
            vue.createVNode(_component_jet_input, {
              id: "name",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: $data.form.name,
              "onUpdate:modelValue": ($event) => $data.form.name = $event,
              autocomplete: "name"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input_error, {
              message: $data.form.errors.name,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            vue.createVNode(_component_jet_label, {
              for: "email",
              value: "Email"
            }),
            vue.createVNode(_component_jet_input, {
              id: "email",
              type: "email",
              class: "mt-1 block w-full",
              modelValue: $data.form.email,
              "onUpdate:modelValue": ($event) => $data.form.email = $event
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input_error, {
              message: $data.form.errors.email,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_action_message, {
          on: $data.form.recentlySuccessful,
          class: "mr-3"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Saved. `);
            } else {
              return [
                vue.createTextVNode(" Saved. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                vue.createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_action_message, {
            on: $data.form.recentlySuccessful,
            class: "mr-3"
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Saved. ")
            ]),
            _: 1
          }, 8, ["on"]),
          vue.createVNode(_component_jet_button, {
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$13 = _sfc_main$13.setup;
_sfc_main$13.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/UpdateProfileInformationForm.vue");
  return _sfc_setup$13 ? _sfc_setup$13(props, ctx) : void 0;
};
var UpdateProfileInformationForm = /* @__PURE__ */ _export_sfc(_sfc_main$13, [["ssrRender", _sfc_ssrRender$11]]);
var UpdateProfileInformationForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateProfileInformationForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$12 = {
  props: ["sessions"],
  components: {
    AppLayout,
    DeleteUserForm,
    JetSectionBorder,
    LogoutOtherBrowserSessionsForm,
    TwoFactorAuthenticationForm,
    UpdatePasswordForm,
    UpdateProfileInformationForm
  }
};
function _sfc_ssrRender$10(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_update_profile_information_form = vue.resolveComponent("update-profile-information-form");
  const _component_jet_section_border = vue.resolveComponent("jet-section-border");
  const _component_update_password_form = vue.resolveComponent("update-password-form");
  const _component_two_factor_authentication_form = vue.resolveComponent("two-factor-authentication-form");
  const _component_logout_other_browser_sessions_form = vue.resolveComponent("logout-other-browser-sessions-form");
  const _component_delete_user_form = vue.resolveComponent("delete-user-form");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> Profile </h2>`);
      } else {
        return [
          vue.createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " Profile ")
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="h-full overflow-y-auto"${_scopeId}><div class="max-w-7xl py-10 sm:px-6 lg:px-8"${_scopeId}>`);
        if (_ctx.$page.props.jetstream.canUpdateProfileInformation) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_update_profile_information_form, {
            user: _ctx.$page.props.user
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if (_ctx.$page.props.jetstream.canUpdatePassword) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_update_password_form, { class: "mt-10 sm:mt-0" }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if (_ctx.$page.props.jetstream.canManageTwoFactorAuthentication) {
          _push2(`<div${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_two_factor_authentication_form, { class: "mt-10 sm:mt-0" }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_logout_other_browser_sessions_form, {
          sessions: $props.sessions,
          class: "mt-10 sm:mt-0"
        }, null, _parent2, _scopeId));
        if (_ctx.$page.props.jetstream.hasAccountDeletionFeatures) {
          _push2(`<!--[-->`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_delete_user_form, { class: "mt-10 sm:mt-0" }, null, _parent2, _scopeId));
          _push2(`<!--]-->`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "h-full overflow-y-auto" }, [
            vue.createVNode("div", { class: "max-w-7xl py-10 sm:px-6 lg:px-8" }, [
              _ctx.$page.props.jetstream.canUpdateProfileInformation ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
                vue.createVNode(_component_update_profile_information_form, {
                  user: _ctx.$page.props.user
                }, null, 8, ["user"]),
                vue.createVNode(_component_jet_section_border)
              ])) : vue.createCommentVNode("", true),
              _ctx.$page.props.jetstream.canUpdatePassword ? (vue.openBlock(), vue.createBlock("div", { key: 1 }, [
                vue.createVNode(_component_update_password_form, { class: "mt-10 sm:mt-0" }),
                vue.createVNode(_component_jet_section_border)
              ])) : vue.createCommentVNode("", true),
              _ctx.$page.props.jetstream.canManageTwoFactorAuthentication ? (vue.openBlock(), vue.createBlock("div", { key: 2 }, [
                vue.createVNode(_component_two_factor_authentication_form, { class: "mt-10 sm:mt-0" }),
                vue.createVNode(_component_jet_section_border)
              ])) : vue.createCommentVNode("", true),
              vue.createVNode(_component_logout_other_browser_sessions_form, {
                sessions: $props.sessions,
                class: "mt-10 sm:mt-0"
              }, null, 8, ["sessions"]),
              _ctx.$page.props.jetstream.hasAccountDeletionFeatures ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 3 }, [
                vue.createVNode(_component_jet_section_border),
                vue.createVNode(_component_delete_user_form, { class: "mt-10 sm:mt-0" })
              ], 64)) : vue.createCommentVNode("", true)
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$12 = _sfc_main$12.setup;
_sfc_main$12.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Show.vue");
  return _sfc_setup$12 ? _sfc_setup$12(props, ctx) : void 0;
};
var Show$a = /* @__PURE__ */ _export_sfc(_sfc_main$12, [["ssrRender", _sfc_ssrRender$10]]);
var Show$b = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$a
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$11 = {
  components: {
    PageAside,
    AsideLink,
    ButtonLink,
    TabContainer,
    TabLink,
    SearchInput,
    EmptyState,
    JetSectionTitle: SectionTitle
  },
  props: {
    purchases: Array
  },
  computed: {
    purchasesLength: function() {
      return this.purchases.length;
    }
  },
  data() {
    return {
      search: "",
      filteredPurchases: this.purchases
    };
  },
  methods: {
    updatePurchases() {
      this.filteredPurchases = this.purchases.filter((purchase) => {
        var _a, _b;
        let lowerSearch = this.search.toLowerCase();
        if (purchase.vendor_name.toLowerCase().includes(lowerSearch) || ((_a = purchase.date) == null ? void 0 : _a.includes(lowerSearch)) || ((_b = purchase.order_number) == null ? void 0 : _b.toLowerCase().includes(lowerSearch))) {
          return true;
        } else {
          return false;
        }
      });
    }
  }
};
function _sfc_ssrRender$$(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_page_aside = vue.resolveComponent("page-aside");
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_search_input = vue.resolveComponent("search-input");
  const _component_aside_link = vue.resolveComponent("aside-link");
  const _component_empty_state = vue.resolveComponent("empty-state");
  _push(serverRenderer.ssrRenderComponent(_component_page_aside, vue.mergeProps({
    showOnMobile: _ctx.route().current("purchases.index")
  }, _attrs), {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, vue.createSlots({
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Purchases`);
            } else {
              return [
                vue.createTextVNode("Purchases")
              ];
            }
          }),
          aside: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_button_link, {
                href: _ctx.route("purchases.create")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`New Purchase`);
                  } else {
                    return [
                      vue.createTextVNode("New Purchase")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_button_link, {
                  href: _ctx.route("purchases.create")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("New Purchase")
                  ]),
                  _: 1
                }, 8, ["href"])
              ];
            }
          }),
          _: 2
        }, [
          $options.purchasesLength > 0 ? {
            name: "description",
            fn: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Search ${serverRenderer.ssrInterpolate($options.purchasesLength)} ${serverRenderer.ssrInterpolate($options.purchasesLength > 1 ? "Purchases" : "Purchase")}`);
              } else {
                return [
                  vue.createTextVNode("Search " + vue.toDisplayString($options.purchasesLength) + " " + vue.toDisplayString($options.purchasesLength > 1 ? "Purchases" : "Purchase"), 1)
                ];
              }
            })
          } : void 0
        ]), _parent2, _scopeId));
        if ($options.purchasesLength > 0) {
          _push2(serverRenderer.ssrRenderComponent(_component_search_input, {
            modelValue: $data.search,
            "onUpdate:modelValue": ($event) => $data.search = $event,
            onInput: $options.updatePurchases,
            placeholder: "Search by purchase number, vendor, or date."
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode(_component_jet_section_title, null, vue.createSlots({
            title: vue.withCtx(() => [
              vue.createTextVNode("Purchases")
            ]),
            aside: vue.withCtx(() => [
              vue.createVNode(_component_button_link, {
                href: _ctx.route("purchases.create")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New Purchase")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            _: 2
          }, [
            $options.purchasesLength > 0 ? {
              name: "description",
              fn: vue.withCtx(() => [
                vue.createTextVNode("Search " + vue.toDisplayString($options.purchasesLength) + " " + vue.toDisplayString($options.purchasesLength > 1 ? "Purchases" : "Purchase"), 1)
              ])
            } : void 0
          ]), 1024),
          $options.purchasesLength > 0 ? (vue.openBlock(), vue.createBlock(_component_search_input, {
            key: 0,
            modelValue: $data.search,
            "onUpdate:modelValue": ($event) => $data.search = $event,
            onInput: $options.updatePurchases,
            placeholder: "Search by purchase number, vendor, or date."
          }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white"${_scopeId}><ul class="divide-y divide-gray-200"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($data.filteredPurchases, (purchase) => {
          _push2(`<li class="bg-white"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_aside_link, {
            href: purchase.deleted_at ? _ctx.route("archived-purchases.show", purchase.id) : _ctx.route("purchases.show", purchase.id),
            current: _ctx.route().current("purchases.show", purchase.id) || _ctx.route().current(
              "archived-purchases.show",
              purchase.id
            )
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex-1 min-w-0"${_scopeId2}><div class="focus:outline-none"${_scopeId2}><span class="absolute inset-0" aria-hidden="true"${_scopeId2}></span><p class="text-sm text-gray-900"${_scopeId2}><b class="font-bold"${_scopeId2}>Vendor: </b>${serverRenderer.ssrInterpolate(purchase.vendor.name)}</p>`);
                if (purchase.purchase_number) {
                  _push3(`<p class="text-sm text-gray-900 truncate"${_scopeId2}><b class="font-bold"${_scopeId2}>Purchase Number: </b>${serverRenderer.ssrInterpolate(purchase.order_number)}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`<p class="text-sm text-gray-900 truncate"${_scopeId2}><b class="font-bold"${_scopeId2}>Purchase Date: </b>${serverRenderer.ssrInterpolate(new Date(purchase.date).toDateString())}</p></div></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                    vue.createVNode("div", { class: "focus:outline-none" }, [
                      vue.createVNode("span", {
                        class: "absolute inset-0",
                        "aria-hidden": "true"
                      }),
                      vue.createVNode("p", { class: "text-sm text-gray-900" }, [
                        vue.createVNode("b", { class: "font-bold" }, "Vendor: "),
                        vue.createTextVNode(vue.toDisplayString(purchase.vendor.name), 1)
                      ]),
                      purchase.purchase_number ? (vue.openBlock(), vue.createBlock("p", {
                        key: 0,
                        class: "text-sm text-gray-900 truncate"
                      }, [
                        vue.createVNode("b", { class: "font-bold" }, "Purchase Number: "),
                        vue.createTextVNode(vue.toDisplayString(purchase.order_number), 1)
                      ])) : vue.createCommentVNode("", true),
                      vue.createVNode("p", { class: "text-sm text-gray-900 truncate" }, [
                        vue.createVNode("b", { class: "font-bold" }, "Purchase Date: "),
                        vue.createTextVNode(vue.toDisplayString(new Date(purchase.date).toDateString()), 1)
                      ])
                    ])
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</li>`);
        });
        _push2(`<!--]--></ul></div>`);
        if ($options.purchasesLength < 1 && _ctx.route().current("purchases.index")) {
          _push2(serverRenderer.ssrRenderComponent(_component_empty_state, {
            heading: "No Purchases",
            subtitle: "Get started by creating a new purchase.",
            "button-text": "New Purchase",
            href: _ctx.route("purchases.create")
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", { class: "bg-white" }, [
            vue.createVNode("ul", { class: "divide-y divide-gray-200" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.filteredPurchases, (purchase) => {
                return vue.openBlock(), vue.createBlock("li", {
                  key: purchase.id,
                  class: "bg-white"
                }, [
                  vue.createVNode(_component_aside_link, {
                    href: purchase.deleted_at ? _ctx.route("archived-purchases.show", purchase.id) : _ctx.route("purchases.show", purchase.id),
                    current: _ctx.route().current("purchases.show", purchase.id) || _ctx.route().current(
                      "archived-purchases.show",
                      purchase.id
                    )
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                        vue.createVNode("div", { class: "focus:outline-none" }, [
                          vue.createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          vue.createVNode("p", { class: "text-sm text-gray-900" }, [
                            vue.createVNode("b", { class: "font-bold" }, "Vendor: "),
                            vue.createTextVNode(vue.toDisplayString(purchase.vendor.name), 1)
                          ]),
                          purchase.purchase_number ? (vue.openBlock(), vue.createBlock("p", {
                            key: 0,
                            class: "text-sm text-gray-900 truncate"
                          }, [
                            vue.createVNode("b", { class: "font-bold" }, "Purchase Number: "),
                            vue.createTextVNode(vue.toDisplayString(purchase.order_number), 1)
                          ])) : vue.createCommentVNode("", true),
                          vue.createVNode("p", { class: "text-sm text-gray-900 truncate" }, [
                            vue.createVNode("b", { class: "font-bold" }, "Purchase Date: "),
                            vue.createTextVNode(vue.toDisplayString(new Date(purchase.date).toDateString()), 1)
                          ])
                        ])
                      ])
                    ]),
                    _: 2
                  }, 1032, ["href", "current"])
                ]);
              }), 128))
            ])
          ]),
          $options.purchasesLength < 1 && _ctx.route().current("purchases.index") ? (vue.openBlock(), vue.createBlock(_component_empty_state, {
            key: 0,
            heading: "No Purchases",
            subtitle: "Get started by creating a new purchase.",
            "button-text": "New Purchase",
            href: _ctx.route("purchases.create")
          }, null, 8, ["href"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$11 = _sfc_main$11.setup;
_sfc_main$11.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/PurchasesAside.vue");
  return _sfc_setup$11 ? _sfc_setup$11(props, ctx) : void 0;
};
var PurchasesAside = /* @__PURE__ */ _export_sfc(_sfc_main$11, [["ssrRender", _sfc_ssrRender$$]]);
var PurchasesAside$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": PurchasesAside
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$10 = {
  components: {
    PurchasesAside,
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    purchases() {
      return this.$page.props.purchases;
    },
    isIndex() {
      return route().current("purchases.index") || route().current("archived-purchases.index");
    }
  }
};
function _sfc_ssrRender$_(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  const _component_purchases_aside = vue.resolveComponent("purchases-aside");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb" class="xl:hidden"${_scopeId2}><div class="px-4 md:pb-2"${_scopeId2}>`);
                if (_ctx.route().current("purchases.*")) {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("purchases.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Purchases`);
                      } else {
                        return [
                          vue.createTextVNode("Purchases")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("purchases.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("purchases.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Purchases")
                      ]),
                      _: 1
                    }, 8, ["href"])) : vue.createCommentVNode("", true)
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_purchases_aside, { purchases: $options.purchases }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
              default: vue.withCtx(() => [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("purchases.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("purchases.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Purchases")
                      ]),
                      _: 1
                    }, 8, ["href"])) : vue.createCommentVNode("", true)
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ]),
              _: 3
            }, 8, ["dontShowOnMobile"]),
            vue.createVNode(_component_purchases_aside, { purchases: $options.purchases }, null, 8, ["purchases"])
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$10 = _sfc_main$10.setup;
_sfc_main$10.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/PurchasesLayout.vue");
  return _sfc_setup$10 ? _sfc_setup$10(props, ctx) : void 0;
};
var PurchasesLayout = /* @__PURE__ */ _export_sfc(_sfc_main$10, [["ssrRender", _sfc_ssrRender$_]]);
var PurchasesLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": PurchasesLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$$ = {
  components: {
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    SelectBox
  },
  data() {
    return {
      vendors: this.$page.props.vendors,
      purchaseVendor: null,
      form: this.$inertia.form({
        _method: "POST",
        date: null,
        vendor_id: null,
        order_number: null,
        user_id: this.$page.props.user.id
      })
    };
  },
  watch: {
    purchaseVendor() {
      if (this.purchaseVendor) {
        this.form.vendor_id = this.purchaseVendor.id;
      } else {
        this.form.vendor_id = null;
      }
    }
  },
  methods: {
    createPurchase() {
      this.form.post(route("purchases.store"), {
        errorBag: "createPurchase",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$Z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.createPurchase }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create a Purchase`);
      } else {
        return [
          vue.createTextVNode("Create a Purchase")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a new purchase to bring into inventory. `);
      } else {
        return [
          vue.createTextVNode(" Create a new purchase to bring into inventory. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4 sm:grid-cols-3"${_scopeId}><div class="col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "date",
          value: "Purchase Date"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "date",
          type: "date",
          class: "mt-1 block w-full",
          modelValue: $data.form.date,
          "onUpdate:modelValue": ($event) => $data.form.date = $event,
          required: ""
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.date,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Vendor",
          items: $data.vendors,
          modelValue: $data.purchaseVendor,
          "onUpdate:modelValue": ($event) => $data.purchaseVendor = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.vendor_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "order_number",
          value: "Purchase Number"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "order_number",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.order_number,
          "onUpdate:modelValue": ($event) => $data.form.order_number = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.order_number,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4 sm:grid-cols-3" }, [
              vue.createVNode("div", { class: "col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "date",
                  value: "Purchase Date"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "date",
                  type: "date",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.date,
                  "onUpdate:modelValue": ($event) => $data.form.date = $event,
                  required: ""
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.date,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-1" }, [
                vue.createVNode(_component_select_box, {
                  labelValue: "Vendor",
                  items: $data.vendors,
                  modelValue: $data.purchaseVendor,
                  "onUpdate:modelValue": ($event) => $data.purchaseVendor = $event
                }, null, 8, ["items", "modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.vendor_id,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "order_number",
                  value: "Purchase Number"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "order_number",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.order_number,
                  "onUpdate:modelValue": ($event) => $data.form.order_number = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.order_number,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Purchase`);
            } else {
              return [
                vue.createTextVNode("Save Purchase")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Purchase")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$$ = _sfc_main$$.setup;
_sfc_main$$.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/CreatePurchaseForm.vue");
  return _sfc_setup$$ ? _sfc_setup$$(props, ctx) : void 0;
};
var CreatePurchaseForm = /* @__PURE__ */ _export_sfc(_sfc_main$$, [["ssrRender", _sfc_ssrRender$Z]]);
var CreatePurchaseForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreatePurchaseForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$_ = {
  components: {
    PurchasesLayout,
    CreatePurchaseForm
  }
};
function _sfc_ssrRender$Y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_purchases_layout = vue.resolveComponent("purchases-layout");
  const _component_create_purchase_form = vue.resolveComponent("create-purchase-form");
  _push(serverRenderer.ssrRenderComponent(_component_purchases_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_purchase_form, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_purchase_form)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$_ = _sfc_main$_.setup;
_sfc_main$_.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Create.vue");
  return _sfc_setup$_ ? _sfc_setup$_(props, ctx) : void 0;
};
var Create$8 = /* @__PURE__ */ _export_sfc(_sfc_main$_, [["ssrRender", _sfc_ssrRender$Y]]);
var Create$9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$8
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$Z = {
  components: {
    PurchasesLayout,
    ButtonLink
  }
};
function _sfc_ssrRender$X(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_purchases_layout = vue.resolveComponent("purchases-layout");
  _push(serverRenderer.ssrRenderComponent(_component_purchases_layout, _attrs, null, _parent));
}
const _sfc_setup$Z = _sfc_main$Z.setup;
_sfc_main$Z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Index.vue");
  return _sfc_setup$Z ? _sfc_setup$Z(props, ctx) : void 0;
};
var Index$a = /* @__PURE__ */ _export_sfc(_sfc_main$Z, [["ssrRender", _sfc_ssrRender$X]]);
var Index$b = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$a
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$Y = {
  components: {
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    SelectBox
  },
  props: {
    purchase: Object
  },
  data() {
    return {
      vendors: this.$page.props.vendors,
      purchaseVendor: this.$page.props.vendors.find(
        (vendor) => vendor.id == this.purchase.vendor_id
      ),
      form: this.$inertia.form({
        _method: "PATCH",
        date: this.purchase.date,
        vendor_id: this.purchase.vendor_id,
        order_number: this.purchase.order_number,
        user_id: this.purchase.user_id
      })
    };
  },
  watch: {
    purchaseVendor() {
      if (this.purchaseVendor) {
        this.form.vendor_id = this.purchaseVendor.id;
      } else {
        this.form.vendor_id = null;
      }
    }
  },
  methods: {
    updatePurchase() {
      this.form.patch(route("purchases.update", this.purchase), {
        errorBag: "updatePurchase",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$W(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.updatePurchase }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Update Purchase`);
      } else {
        return [
          vue.createTextVNode("Update Purchase")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4 sm:grid-cols-3"${_scopeId}><div class="col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "date",
          value: "Purchase Date"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "date",
          type: "date",
          class: "mt-1 block w-full",
          modelValue: $data.form.date,
          "onUpdate:modelValue": ($event) => $data.form.date = $event,
          required: ""
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.date,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Vendor",
          items: $data.vendors,
          selectedItem: $data.purchaseVendor,
          modelValue: $data.purchaseVendor,
          "onUpdate:modelValue": ($event) => $data.purchaseVendor = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.vendor_id,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "order_number",
          value: "Purchase Number"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "order_number",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.order_number,
          "onUpdate:modelValue": ($event) => $data.form.order_number = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.order_number,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4 sm:grid-cols-3" }, [
              vue.createVNode("div", { class: "col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "date",
                  value: "Purchase Date"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "date",
                  type: "date",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.date,
                  "onUpdate:modelValue": ($event) => $data.form.date = $event,
                  required: ""
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.date,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-1" }, [
                vue.createVNode(_component_select_box, {
                  labelValue: "Vendor",
                  items: $data.vendors,
                  selectedItem: $data.purchaseVendor,
                  modelValue: $data.purchaseVendor,
                  "onUpdate:modelValue": ($event) => $data.purchaseVendor = $event
                }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.vendor_id,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "order_number",
                  value: "Purchase Number"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "order_number",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.order_number,
                  "onUpdate:modelValue": ($event) => $data.form.order_number = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.order_number,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
          disabled: $data.form.processing || !$data.form.isDirty
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Purchase`);
            } else {
              return [
                vue.createTextVNode("Save Purchase")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
            disabled: $data.form.processing || !$data.form.isDirty
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Purchase")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$Y = _sfc_main$Y.setup;
_sfc_main$Y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/UpdatePurchaseForm.vue");
  return _sfc_setup$Y ? _sfc_setup$Y(props, ctx) : void 0;
};
var UpdatePurchaseForm = /* @__PURE__ */ _export_sfc(_sfc_main$Y, [["ssrRender", _sfc_ssrRender$W]]);
var UpdatePurchaseForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdatePurchaseForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$X = {
  props: ["purchase"],
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingPurchaseDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmPurchaseDeletion() {
      this.confirmingPurchaseDeletion = true;
    },
    deletePurchase() {
      this.form.delete(route("purchases.destroy", this.purchase), {
        errorBag: "deletePurchase"
      });
    }
  }
};
function _sfc_ssrRender$V(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Purchase`);
      } else {
        return [
          vue.createTextVNode(" Delete Purchase")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete this purchase, purchase items, and associated inventory. `);
      } else {
        return [
          vue.createTextVNode(" Delete this purchase, purchase items, and associated inventory. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="text-sm text-gray-600"${_scopeId}> If this purchase is deleted, all associated purchase items, and inventory already added will be removed. Only delete this purchase if you are sure you want to remove all inventory and items associated with this purchase. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmPurchaseDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Purchase `);
            } else {
              return [
                vue.createTextVNode(" Delete Purchase ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingPurchaseDeletion,
          onClose: ($event) => $data.confirmingPurchaseDeletion = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Purchase `);
            } else {
              return [
                vue.createTextVNode(" Delete Purchase ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this purchase? There will be no way to recover it, or inventory associated! `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete this purchase? There will be no way to recover it, or inventory associated! ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingPurchaseDeletion = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deletePurchase,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Purchase `);
                  } else {
                    return [
                      vue.createTextVNode(" Delete Purchase ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingPurchaseDeletion = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.deletePurchase,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Delete Purchase ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "text-sm text-gray-600" }, " If this purchase is deleted, all associated purchase items, and inventory already added will be removed. Only delete this purchase if you are sure you want to remove all inventory and items associated with this purchase. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmPurchaseDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete Purchase ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingPurchaseDeletion,
            onClose: ($event) => $data.confirmingPurchaseDeletion = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Delete Purchase ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete this purchase? There will be no way to recover it, or inventory associated! ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingPurchaseDeletion = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deletePurchase,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Delete Purchase ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$X = _sfc_main$X.setup;
_sfc_main$X.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/DeletePurchaseForm.vue");
  return _sfc_setup$X ? _sfc_setup$X(props, ctx) : void 0;
};
var DeletePurchaseForm = /* @__PURE__ */ _export_sfc(_sfc_main$X, [["ssrRender", _sfc_ssrRender$V]]);
var DeletePurchaseForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeletePurchaseForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$W = {
  components: {
    Switch: vue$1.Switch,
    SwitchDescription: vue$1.SwitchDescription,
    SwitchGroup: vue$1.SwitchGroup,
    SwitchLabel: vue$1.SwitchLabel,
    JetActionMessage,
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput,
    SelectBox
  },
  props: { purchase: Object },
  data() {
    return {
      addAnother: true,
      products: this.$page.props.products,
      sizes: this.$page.props.sizes,
      selectedProduct: null,
      selectedOriginalSize: null,
      selectedSize: null,
      creatingPurchaseItem: false,
      form: this.$inertia.form({
        _method: "POST",
        product_id: null,
        original_size_id: null,
        size_id: null,
        quantity_ordered: null,
        quantity_confirmed: null,
        unit_price: null,
        ready_date: null,
        received: true
      })
    };
  },
  watch: {
    selectedProduct() {
      if (this.selectedProduct) {
        this.form.product_id = this.selectedProduct.id;
      } else {
        this.form.product_id = null;
      }
    },
    selectedOriginalSize(size) {
      if (size) {
        this.form.original_size_id = size.id;
        if (!this.selectedSize) {
          this.selectedSize = size;
        }
      } else {
        this.form.original_size_id = null;
      }
    },
    "form.quantity_ordered"(value) {
      this.form.quantity_confirmed = value;
    },
    selectedSize(size) {
      if (size) {
        this.form.size_id = size.id;
      } else {
        this.form.size_id = null;
      }
    }
  },
  methods: {
    saveAndClose() {
      this.addAnother = false;
      this.createPurchaseItem();
    },
    createPurchaseItem() {
      this.form.post(
        route("purchases.purchase-item.store", this.purchase),
        {
          preserveScroll: true,
          preserveState: true,
          onSuccess: () => {
            this.form.reset();
            this.selectedSize = null;
            this.selectedProduct = null;
            if (this.addAnother == false) {
              this.creatingPurchaseItem = false;
            }
          }
        }
      );
    }
  }
};
function _sfc_ssrRender$U(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_SwitchGroup = vue.resolveComponent("SwitchGroup");
  const _component_SwitchLabel = vue.resolveComponent("SwitchLabel");
  const _component_Switch = vue.resolveComponent("Switch");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    type: "button",
    onClick: ($event) => $data.creatingPurchaseItem = true
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`New Purchase Item`);
      } else {
        return [
          vue.createTextVNode("New Purchase Item")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.creatingPurchaseItem,
    onClose: ($event) => $data.creatingPurchaseItem = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Add an purchase item.`);
      } else {
        return [
          vue.createTextVNode("Add an purchase item.")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Add a new purchase item. Then, you can add this item to inventory and print tags. `);
      } else {
        return [
          vue.createTextVNode(" Add a new purchase item. Then, you can add this item to inventory and print tags. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<form${_scopeId}><div class="col-span-6 grid gap-4"${_scopeId}><div class="grid gap-4 sm:grid-cols-2"${_scopeId}><div class="sm:col-span-2 min-w-0"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Product",
          items: $data.products,
          selectedItem: $data.selectedProduct,
          modelValue: $data.selectedProduct,
          "onUpdate:modelValue": ($event) => $data.selectedProduct = $event
        }, null, _parent2, _scopeId));
        if (!$data.form.product_id) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.product_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Purchase Size",
          items: $data.sizes,
          selectedItem: $data.selectedOriginalSize,
          modelValue: $data.selectedOriginalSize,
          "onUpdate:modelValue": ($event) => $data.selectedOriginalSize = $event
        }, null, _parent2, _scopeId));
        if (!$data.form.size_id) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.size_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Size",
          items: $data.sizes,
          selectedItem: $data.selectedSize,
          modelValue: $data.selectedSize,
          "onUpdate:modelValue": ($event) => $data.selectedSize = $event
        }, null, _parent2, _scopeId));
        if (!$data.form.size_id) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.size_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><div class="grid gap-4 grid-cols-1 sm:grid-cols-3"${_scopeId}><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "quantity_ordered",
          value: "Quantity Purchaseed"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "quantity_ordered",
          type: "number",
          step: "1",
          class: "mt-1 block w-full",
          modelValue: $data.form.quantity_ordered,
          "onUpdate:modelValue": ($event) => $data.form.quantity_ordered = $event,
          required: ""
        }, null, _parent2, _scopeId));
        if (!$data.form.quantity_ordered) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.quantity_ordered,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "quantity_confirmed",
          value: "Quantity Confirmed"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "quantity_confirmed",
          type: "number",
          step: "1",
          class: "mt-1 block w-full",
          modelValue: $data.form.quantity_confirmed,
          "onUpdate:modelValue": ($event) => $data.form.quantity_confirmed = $event,
          required: ""
        }, null, _parent2, _scopeId));
        if (!$data.form.quantity_confirmed) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.quantity_confirmed,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "unit_price",
          value: "Unit Price"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "unit_price",
          type: "number",
          step: "0.01",
          class: "mt-1 block w-full",
          modelValue: $data.form.unit_price,
          "onUpdate:modelValue": ($event) => $data.form.unit_price = $event,
          required: ""
        }, null, _parent2, _scopeId));
        if (!$data.form.unit_price) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.unit_price,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "ready_date",
          value: "Ready Date"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "ready_date",
          type: "date",
          class: "mt-1 block w-full",
          modelValue: $data.form.ready_date,
          "onUpdate:modelValue": ($event) => $data.form.ready_date = $event,
          required: ""
        }, null, _parent2, _scopeId));
        if (!$data.form.ready_date) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.ready_date,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-start sm:col-span-1"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm font-medium text-gray-900 mr-4"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Received?`);
                  } else {
                    return [
                      vue.createTextVNode("Received?")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.form.received,
                "onUpdate:modelValue": ($event) => $data.form.received = $event,
                class: [
                  $data.form.received ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.form.received ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.received ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_SwitchLabel, {
                  as: "span",
                  class: "text-sm font-medium text-gray-900 mr-4"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Received?")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.form.received,
                  "onUpdate:modelValue": ($event) => $data.form.received = $event,
                  class: [
                    $data.form.received ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.form.received ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.createPurchaseItem, ["prevent"]),
            onKeydown: vue.withKeys($options.createPurchaseItem, ["enter"])
          }, [
            vue.createVNode("div", { class: "col-span-6 grid gap-4" }, [
              vue.createVNode("div", { class: "grid gap-4 sm:grid-cols-2" }, [
                vue.createVNode("div", { class: "sm:col-span-2 min-w-0" }, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Product",
                    items: $data.products,
                    selectedItem: $data.selectedProduct,
                    modelValue: $data.selectedProduct,
                    "onUpdate:modelValue": ($event) => $data.selectedProduct = $event
                  }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                  !$data.form.product_id ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.product_id,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Purchase Size",
                    items: $data.sizes,
                    selectedItem: $data.selectedOriginalSize,
                    modelValue: $data.selectedOriginalSize,
                    "onUpdate:modelValue": ($event) => $data.selectedOriginalSize = $event
                  }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                  !$data.form.size_id ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.size_id,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Size",
                    items: $data.sizes,
                    selectedItem: $data.selectedSize,
                    modelValue: $data.selectedSize,
                    "onUpdate:modelValue": ($event) => $data.selectedSize = $event
                  }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                  !$data.form.size_id ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.size_id,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ])
              ]),
              vue.createVNode("div", { class: "grid gap-4 grid-cols-1 sm:grid-cols-3" }, [
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "quantity_ordered",
                    value: "Quantity Purchaseed"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "quantity_ordered",
                    type: "number",
                    step: "1",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.quantity_ordered,
                    "onUpdate:modelValue": ($event) => $data.form.quantity_ordered = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  !$data.form.quantity_ordered ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.quantity_ordered,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "quantity_confirmed",
                    value: "Quantity Confirmed"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "quantity_confirmed",
                    type: "number",
                    step: "1",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.quantity_confirmed,
                    "onUpdate:modelValue": ($event) => $data.form.quantity_confirmed = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  !$data.form.quantity_confirmed ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.quantity_confirmed,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "unit_price",
                    value: "Unit Price"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "unit_price",
                    type: "number",
                    step: "0.01",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.unit_price,
                    "onUpdate:modelValue": ($event) => $data.form.unit_price = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  !$data.form.unit_price ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.unit_price,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "ready_date",
                    value: "Ready Date"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "ready_date",
                    type: "date",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.ready_date,
                    "onUpdate:modelValue": ($event) => $data.form.ready_date = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  !$data.form.ready_date ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.ready_date,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ]),
                vue.createVNode(_component_SwitchGroup, {
                  as: "div",
                  class: "flex items-center justify-start sm:col-span-1"
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm font-medium text-gray-900 mr-4"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Received?")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_Switch, {
                      modelValue: $data.form.received,
                      "onUpdate:modelValue": ($event) => $data.form.received = $event,
                      class: [
                        $data.form.received ? "bg-green-600" : "bg-gray-200",
                        "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                      ]
                    }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("span", {
                          "aria-hidden": "true",
                          class: [
                            $data.form.received ? "translate-x-5" : "translate-x-0",
                            "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                          ]
                        }, null, 2)
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                  ]),
                  _: 1
                })
              ])
            ])
          ], 40, ["onSubmit", "onKeydown"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between items-center w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.creatingPurchaseItem = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.createPurchaseItem,
          class: [
            { "opacity-25": $data.form.processing },
            " mb-2 sm:mb-0 sm:mr-2"
          ],
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save and add another Item`);
            } else {
              return [
                vue.createTextVNode("Save and add another Item")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.saveAndClose,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save and Close`);
            } else {
              return [
                vue.createTextVNode("Save and Close")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between items-center w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.creatingPurchaseItem = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_button, {
                type: "submit",
                onClick: $options.createPurchaseItem,
                class: [
                  { "opacity-25": $data.form.processing },
                  " mb-2 sm:mb-0 sm:mr-2"
                ],
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Save and add another Item")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"]),
              vue.createVNode(_component_jet_button, {
                type: "submit",
                onClick: $options.saveAndClose,
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Save and Close")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$W = _sfc_main$W.setup;
_sfc_main$W.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/CreatePurchaseItem.vue");
  return _sfc_setup$W ? _sfc_setup$W(props, ctx) : void 0;
};
var CreatePurchaseItem = /* @__PURE__ */ _export_sfc(_sfc_main$W, [["ssrRender", _sfc_ssrRender$U]]);
var CreatePurchaseItem$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreatePurchaseItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$V = {
  components: {
    Switch: vue$1.Switch,
    SwitchDescription: vue$1.SwitchDescription,
    SwitchGroup: vue$1.SwitchGroup,
    SwitchLabel: vue$1.SwitchLabel,
    JetActionMessage,
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput,
    SelectBox,
    EditButton
  },
  props: { purchaseItem: Object },
  data() {
    return {
      products: this.$page.props.products,
      sizes: this.$page.props.sizes,
      selectedProduct: this.$page.props.products.find(
        (product) => product.id == this.purchaseItem.product_id
      ),
      selectedOriginalSize: this.$page.props.sizes.find(
        (size) => size.id == this.purchaseItem.original_size_id
      ),
      selectedSize: this.$page.props.sizes.find(
        (size) => size.id == this.purchaseItem.size_id
      ),
      updatingPurchaseItem: false,
      form: this.$inertia.form(this.purchaseItem)
    };
  },
  watch: {
    selectedProduct() {
      if (this.selectedProduct) {
        this.form.product_id = this.selectedProduct.id;
      } else {
        this.form.product_id = null;
      }
    },
    selectedOriginalSize(size) {
      if (size) {
        this.form.original_size_id = size.id;
        if (!this.selectedSize) {
          this.selectedSize = size;
        }
      } else {
        this.form.original_size_id = null;
      }
    },
    selectedSize(size) {
      if (size) {
        this.form.size_id = size.id;
      } else {
        this.form.size_id = null;
      }
    }
  },
  methods: {
    updatePurchaseItem() {
      this.form.patch(route("purchase-item.update", this.purchaseItem), {
        preserveScroll: true,
        preserveState: false
      });
    }
  }
};
function _sfc_ssrRender$T(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_edit_button = vue.resolveComponent("edit-button");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_SwitchGroup = vue.resolveComponent("SwitchGroup");
  const _component_SwitchLabel = vue.resolveComponent("SwitchLabel");
  const _component_Switch = vue.resolveComponent("Switch");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_edit_button, {
    onClick: ($event) => $data.updatingPurchaseItem = true
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Edit`);
      } else {
        return [
          vue.createTextVNode("Edit")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.updatingPurchaseItem,
    onClose: ($event) => $data.updatingPurchaseItem = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Edit`);
      } else {
        return [
          vue.createTextVNode("Edit")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Edit this purchase item. `);
      } else {
        return [
          vue.createTextVNode(" Edit this purchase item. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<form${_scopeId}><div class="col-span-6 grid gap-4"${_scopeId}><div class="grid gap-4 sm:grid-cols-2"${_scopeId}><div class="sm:col-span-2 min-w-0"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Product",
          items: $data.products,
          selectedItem: $data.selectedProduct,
          modelValue: $data.selectedProduct,
          "onUpdate:modelValue": ($event) => $data.selectedProduct = $event
        }, null, _parent2, _scopeId));
        if (!$data.form.product_id) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.product_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Purchase Size",
          items: $data.sizes,
          selectedItem: $data.selectedOriginalSize,
          modelValue: $data.selectedOriginalSize,
          "onUpdate:modelValue": ($event) => $data.selectedOriginalSize = $event
        }, null, _parent2, _scopeId));
        if (!$data.form.size_id) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.size_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
          labelValue: "Size",
          items: $data.sizes,
          selectedItem: $data.selectedSize,
          modelValue: $data.selectedSize,
          "onUpdate:modelValue": ($event) => $data.selectedSize = $event
        }, null, _parent2, _scopeId));
        if (!$data.form.size_id) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.size_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><div class="grid gap-4 grid-cols-1 sm:grid-cols-3"${_scopeId}><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "quantity_ordered",
          value: "Quantity Purchaseed"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "quantity_ordered",
          type: "number",
          step: "1",
          class: "mt-1 block w-full",
          modelValue: $data.form.quantity_ordered,
          "onUpdate:modelValue": ($event) => $data.form.quantity_ordered = $event,
          required: ""
        }, null, _parent2, _scopeId));
        if (!$data.form.quantity_ordered) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.quantity_ordered,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "quantity_confirmed",
          value: "Quantity Confirmed"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "quantity_confirmed",
          type: "number",
          step: "1",
          class: "mt-1 block w-full",
          modelValue: $data.form.quantity_confirmed,
          "onUpdate:modelValue": ($event) => $data.form.quantity_confirmed = $event,
          required: ""
        }, null, _parent2, _scopeId));
        if (!$data.form.quantity_confirmed) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.quantity_confirmed,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "unit_price",
          value: "Unit Price"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "unit_price",
          type: "number",
          step: "0.01",
          class: "mt-1 block w-full",
          modelValue: $data.form.unit_price,
          "onUpdate:modelValue": ($event) => $data.form.unit_price = $event,
          required: ""
        }, null, _parent2, _scopeId));
        if (!$data.form.unit_price) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.unit_price,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><div class="grid gap-4 grid-cols-1 sm:grid-cols-2"${_scopeId}><div class="sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "ready_date",
          value: "Ready Date"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "ready_date",
          type: "date",
          class: "mt-1 block w-full",
          modelValue: $data.form.ready_date,
          "onUpdate:modelValue": ($event) => $data.form.ready_date = $event,
          required: ""
        }, null, _parent2, _scopeId));
        if (!$data.form.ready_date) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.ready_date,
            class: "mt-2"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex justify-start items-center sm:col-span-1"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm font-medium text-gray-900 mr-4"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Received?`);
                  } else {
                    return [
                      vue.createTextVNode("Received?")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.form.received,
                "onUpdate:modelValue": ($event) => $data.form.received = $event,
                class: [
                  $data.form.received ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.form.received ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.received ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_SwitchLabel, {
                  as: "span",
                  class: "text-sm font-medium text-gray-900 mr-4"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Received?")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.form.received,
                  "onUpdate:modelValue": ($event) => $data.form.received = $event,
                  class: [
                    $data.form.received ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.form.received ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.updatePurchaseItem, ["prevent"]),
            onKeydown: vue.withKeys($options.updatePurchaseItem, ["enter"])
          }, [
            vue.createVNode("div", { class: "col-span-6 grid gap-4" }, [
              vue.createVNode("div", { class: "grid gap-4 sm:grid-cols-2" }, [
                vue.createVNode("div", { class: "sm:col-span-2 min-w-0" }, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Product",
                    items: $data.products,
                    selectedItem: $data.selectedProduct,
                    modelValue: $data.selectedProduct,
                    "onUpdate:modelValue": ($event) => $data.selectedProduct = $event
                  }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                  !$data.form.product_id ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.product_id,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Purchase Size",
                    items: $data.sizes,
                    selectedItem: $data.selectedOriginalSize,
                    modelValue: $data.selectedOriginalSize,
                    "onUpdate:modelValue": ($event) => $data.selectedOriginalSize = $event
                  }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                  !$data.form.size_id ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.size_id,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_select_box, {
                    labelValue: "Size",
                    items: $data.sizes,
                    selectedItem: $data.selectedSize,
                    modelValue: $data.selectedSize,
                    "onUpdate:modelValue": ($event) => $data.selectedSize = $event
                  }, null, 8, ["items", "selectedItem", "modelValue", "onUpdate:modelValue"]),
                  !$data.form.size_id ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.size_id,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ])
              ]),
              vue.createVNode("div", { class: "grid gap-4 grid-cols-1 sm:grid-cols-3" }, [
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "quantity_ordered",
                    value: "Quantity Purchaseed"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "quantity_ordered",
                    type: "number",
                    step: "1",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.quantity_ordered,
                    "onUpdate:modelValue": ($event) => $data.form.quantity_ordered = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  !$data.form.quantity_ordered ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.quantity_ordered,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "quantity_confirmed",
                    value: "Quantity Confirmed"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "quantity_confirmed",
                    type: "number",
                    step: "1",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.quantity_confirmed,
                    "onUpdate:modelValue": ($event) => $data.form.quantity_confirmed = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  !$data.form.quantity_confirmed ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.quantity_confirmed,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "unit_price",
                    value: "Unit Price"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "unit_price",
                    type: "number",
                    step: "0.01",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.unit_price,
                    "onUpdate:modelValue": ($event) => $data.form.unit_price = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  !$data.form.unit_price ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.unit_price,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ])
              ]),
              vue.createVNode("div", { class: "grid gap-4 grid-cols-1 sm:grid-cols-2" }, [
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode(_component_jet_label, {
                    for: "ready_date",
                    value: "Ready Date"
                  }),
                  vue.createVNode(_component_jet_input, {
                    id: "ready_date",
                    type: "date",
                    class: "mt-1 block w-full",
                    modelValue: $data.form.ready_date,
                    "onUpdate:modelValue": ($event) => $data.form.ready_date = $event,
                    required: ""
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  !$data.form.ready_date ? (vue.openBlock(), vue.createBlock(_component_jet_input_error, {
                    key: 0,
                    message: $data.form.errors.ready_date,
                    class: "mt-2"
                  }, null, 8, ["message"])) : vue.createCommentVNode("", true)
                ]),
                vue.createVNode(_component_SwitchGroup, {
                  as: "div",
                  class: "flex justify-start items-center sm:col-span-1"
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm font-medium text-gray-900 mr-4"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Received?")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_Switch, {
                      modelValue: $data.form.received,
                      "onUpdate:modelValue": ($event) => $data.form.received = $event,
                      class: [
                        $data.form.received ? "bg-green-600" : "bg-gray-200",
                        "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                      ]
                    }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("span", {
                          "aria-hidden": "true",
                          class: [
                            $data.form.received ? "translate-x-5" : "translate-x-0",
                            "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                          ]
                        }, null, 2)
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                  ]),
                  _: 1
                })
              ])
            ])
          ], 40, ["onSubmit", "onKeydown"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.updatingPurchaseItem = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.updatePurchaseItem,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Item`);
            } else {
              return [
                vue.createTextVNode("Save Item")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.updatingPurchaseItem = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_button, {
              type: "submit",
              onClick: $options.updatePurchaseItem,
              class: { "opacity-25": $data.form.processing },
              disabled: $data.form.processing
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Save Item")
              ]),
              _: 1
            }, 8, ["onClick", "class", "disabled"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$V = _sfc_main$V.setup;
_sfc_main$V.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/EditPurchaseItem.vue");
  return _sfc_setup$V ? _sfc_setup$V(props, ctx) : void 0;
};
var EditPurchaseItem = /* @__PURE__ */ _export_sfc(_sfc_main$V, [["ssrRender", _sfc_ssrRender$T]]);
var EditPurchaseItem$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": EditPurchaseItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$U = {
  props: ["item"],
  components: {
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton,
    DeleteButton
  },
  data() {
    return {
      confirmingPurchaseItemDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmPurchaseItemDeletion() {
      this.confirmingPurchaseItemDeletion = true;
    },
    deletePurchaseItem() {
      this.form.delete(route("purchase-item.destroy", this.item), {
        errorBag: "deletePurchaseItem",
        preserveState: false
      });
    }
  }
};
function _sfc_ssrRender$S(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_DeleteButton = vue.resolveComponent("DeleteButton");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_DeleteButton, { onClick: $options.confirmPurchaseItemDeletion }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.confirmingPurchaseItemDeletion,
    onClose: ($event) => $data.confirmingPurchaseItemDeletion = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Item `);
      } else {
        return [
          vue.createTextVNode(" Delete Item ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you want to delete this item? All products in inventory associated to this item will be permanentaly deleted from inventory! `);
      } else {
        return [
          vue.createTextVNode(" Are you sure you want to delete this item? All products in inventory associated to this item will be permanentaly deleted from inventory! ")
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.confirmingPurchaseItemDeletion = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.form.processing }],
          onClick: $options.deletePurchaseItem,
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Item `);
            } else {
              return [
                vue.createTextVNode(" Delete Item ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.confirmingPurchaseItemDeletion = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.form.processing }],
            onClick: $options.deletePurchaseItem,
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Delete Item ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$U = _sfc_main$U.setup;
_sfc_main$U.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/DeletePurchaseItem.vue");
  return _sfc_setup$U ? _sfc_setup$U(props, ctx) : void 0;
};
var DeletePurchaseItem = /* @__PURE__ */ _export_sfc(_sfc_main$U, [["ssrRender", _sfc_ssrRender$S]]);
var DeletePurchaseItem$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeletePurchaseItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$T = {
  props: { size: { default: 4 } },
  components: {
    RemoveIcon: RemoveIcon__default["default"]
  }
};
function _sfc_ssrRender$R(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_RemoveIcon = vue.resolveComponent("RemoveIcon");
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "hover:opacity-50 transition p-2" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_RemoveIcon, {
    class: ["w-" + $props.size, "h-" + $props.size]
  }, null, _parent));
  _push(`</button>`);
}
const _sfc_setup$T = _sfc_main$T.setup;
_sfc_main$T.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Buttons/RemoveButton.vue");
  return _sfc_setup$T ? _sfc_setup$T(props, ctx) : void 0;
};
var RemoveButton = /* @__PURE__ */ _export_sfc(_sfc_main$T, [["ssrRender", _sfc_ssrRender$R]]);
const _sfc_main$S = {
  components: {
    JetDangerButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    RemoveButton
  },
  props: { item: Object },
  data() {
    return {
      removingInventoryItem: false,
      form: this.$inertia.form({
        _method: "POST",
        item_id: this.item.id
      })
    };
  },
  watch: {
    selectedType() {
      this.form.type = this.selectedType.value;
    }
  },
  methods: {
    removeItemFromInventory() {
      this.form.delete(route("delete-inventory-purchase-item"), {
        preserveScroll: true,
        preserveState: false
      });
    }
  }
};
function _sfc_ssrRender$Q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_RemoveButton = vue.resolveComponent("RemoveButton");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_RemoveButton, {
    title: "Remove from inventory",
    onClick: ($event) => $data.removingInventoryItem = true
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.removingInventoryItem,
    onClose: ($event) => $data.removingInventoryItem = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Remove from Inventory`);
      } else {
        return [
          vue.createTextVNode("Remove from Inventory")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Remove this item from inventory? All associated inventory will be removed! Do this if you need to update the quantity confirmed, made a mistake, or other details. `);
      } else {
        return [
          vue.createTextVNode(" Remove this item from inventory? All associated inventory will be removed! Do this if you need to update the quantity confirmed, made a mistake, or other details. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<form${_scopeId}><div class="col-span-6 grid gap-4"${_scopeId}></div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.removeItemFromInventory, ["prevent"]),
            onKeydown: vue.withKeys($options.removeItemFromInventory, ["enter"])
          }, [
            vue.createVNode("div", { class: "col-span-6 grid gap-4" })
          ], 40, ["onSubmit", "onKeydown"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.removingInventoryItem = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          type: "submit",
          onClick: $options.removeItemFromInventory,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Yes, remove item`);
            } else {
              return [
                vue.createTextVNode("Yes, remove item")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.removingInventoryItem = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_danger_button, {
                type: "submit",
                onClick: $options.removeItemFromInventory,
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Yes, remove item")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$S = _sfc_main$S.setup;
_sfc_main$S.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/RemoveItemFromInventory.vue");
  return _sfc_setup$S ? _sfc_setup$S(props, ctx) : void 0;
};
var RemoveItemFromInventory = /* @__PURE__ */ _export_sfc(_sfc_main$S, [["ssrRender", _sfc_ssrRender$Q]]);
var RemoveItemFromInventory$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": RemoveItemFromInventory
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$R = {
  components: {
    Check: Check__default["default"],
    JetCheckBox,
    JetLabel,
    EditPurchaseItem,
    DeletePurchaseItem,
    RemoveItemFromInventory
  },
  props: {
    item: Object,
    itemSelected: Boolean
  },
  data() {
    return {
      selected: this.itemSelected,
      form: this.$inertia.form(this.item)
    };
  },
  watch: {
    itemSelected() {
      this.selected = this.itemSelected;
    }
  },
  methods: {
    itemReceived() {
      this.form.patch(route("purchase-item.update", this.item));
    }
  }
};
function _sfc_ssrRender$P(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_check_box = vue.resolveComponent("jet-check-box");
  const _component_RemoveItemFromInventory = vue.resolveComponent("RemoveItemFromInventory");
  const _component_DeletePurchaseItem = vue.resolveComponent("DeletePurchaseItem");
  const _component_edit_purchase_item = vue.resolveComponent("edit-purchase-item");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "grid gap-4 grid-cols-5 md:grid-cols-10 py-2 items-center" }, _attrs))}><div class="col-span-2 md:col-span-4 flex items-center">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, {
    class: "sr-only",
    for: "item-selected" + $data.form.id
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Select`);
      } else {
        return [
          vue.createTextVNode("Select")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_check_box, {
    id: "item-selected" + $data.form.id,
    onChange: ($event) => _ctx.$emit("selected"),
    value: $data.form.id,
    modelValue: $data.selected,
    "onUpdate:modelValue": ($event) => $data.selected = $event,
    checked: $data.selected
  }, null, _parent));
  _push(`<div title="Product Name" class="ml-6 truncate">${serverRenderer.ssrInterpolate($data.form.product.name)}</div></div><div class="px-1 text-sm text-gray-500 tracking-wider uppercase" title="Product Size">${serverRenderer.ssrInterpolate($data.form.size.name)}</div><div class="px-1 text-sm text-gray-500 tracking-wider uppercase" title="Quantity Confirmed">${serverRenderer.ssrInterpolate($data.form.quantity_confirmed)}</div><div class="px-1 hidden md:block text-sm text-gray-500 tracking-wider uppercase" title="Unit Price"> $ ${serverRenderer.ssrInterpolate($data.form.unit_price)}</div><div class="px-1 hidden md:block">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, {
    class: "sr-only",
    for: "item-recieved" + $data.form.id
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Item Received`);
      } else {
        return [
          vue.createTextVNode("Item Received")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_check_box, {
    id: "item-recieved" + $data.form.id,
    onChange: $options.itemReceived,
    modelValue: $data.form.received,
    "onUpdate:modelValue": ($event) => $data.form.received = $event,
    disabled: $props.item.in_inventory,
    color: "gray",
    checked: $data.form.received
  }, null, _parent));
  _push(`</div><div class="px-1 hidden md:block">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_check_box, {
    disabled: true,
    checked: $props.item.printed
  }, null, _parent));
  _push(`</div>`);
  if ($props.item.in_inventory) {
    _push(`<div>`);
    _push(serverRenderer.ssrRenderComponent(_component_RemoveItemFromInventory, { item: $props.item }, null, _parent));
    _push(`</div>`);
  } else {
    _push(`<div class="flex">`);
    _push(serverRenderer.ssrRenderComponent(_component_DeletePurchaseItem, { item: $props.item }, null, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_edit_purchase_item, {
      title: "Edit",
      purchaseItem: $props.item
    }, null, _parent));
    _push(`</div>`);
  }
  _push(`</div>`);
}
const _sfc_setup$R = _sfc_main$R.setup;
_sfc_main$R.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/PurchaseLineItem.vue");
  return _sfc_setup$R ? _sfc_setup$R(props, ctx) : void 0;
};
var PurchaseLineItem = /* @__PURE__ */ _export_sfc(_sfc_main$R, [["ssrRender", _sfc_ssrRender$P]]);
var PurchaseLineItem$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": PurchaseLineItem
}, Symbol.toStringTag, { value: "Module" }));
const types = [
  {
    name: "Individual",
    value: "individual",
    description: "Store these items individually in inventory. Each item will have a unique tag id, and a unique place in the nursery."
  },
  {
    name: "Group",
    value: "group",
    description: "Store items in a group. Items will be sized and given a block location as a whole. Each item will have an matching id tag."
  }
];
const _sfc_main$Q = {
  components: {
    RadioGroup: vue$1.RadioGroup,
    RadioGroupDescription: vue$1.RadioGroupDescription,
    RadioGroupLabel: vue$1.RadioGroupLabel,
    RadioGroupOption: vue$1.RadioGroupOption,
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    SelectBox,
    BackButton
  },
  props: { selectedItems: Array },
  data() {
    return {
      blocks: [],
      nurseries: this.$page.props.nurseryLocations,
      selectedBlock: null,
      selectedNursery: null,
      addingInventory: false,
      types,
      selectedType: null,
      form: this.$inertia.form({
        _method: "POST",
        type: null,
        block_id: null,
        nursery_location_id: null,
        selectedItems: this.selectedItems
      })
    };
  },
  watch: {
    selectedType(type) {
      this.form.type = type.value;
    },
    selectedBlock(block) {
      if (block) {
        this.form.block_id = block.id;
      } else {
        this.form.block_id = null;
      }
    },
    selectedNursery(nursery) {
      if (nursery) {
        this.form.nursery_location_id = nursery.id;
        this.blocks = this.$page.props.blocks.filter(
          (block) => block.nursery_location_id === nursery.id
        );
      } else {
        this.form.nursery_location_id = null;
      }
    }
  },
  methods: {
    addInventory() {
      this.form.post(route("inventory.store"), {
        preserveState: true,
        onSuccess: () => {
          inertia.Inertia.reload();
        }
      });
    }
  }
};
function _sfc_ssrRender$O(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_RadioGroup = vue.resolveComponent("RadioGroup");
  const _component_RadioGroupLabel = vue.resolveComponent("RadioGroupLabel");
  const _component_JetInputError = vue.resolveComponent("JetInputError");
  const _component_RadioGroupOption = vue.resolveComponent("RadioGroupOption");
  const _component_RadioGroupDescription = vue.resolveComponent("RadioGroupDescription");
  const _component_back_button = vue.resolveComponent("back-button");
  const _component_select_box = vue.resolveComponent("select-box");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, {
    onClick: ($event) => $data.addingInventory = true
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Add Selected to Inventory`);
      } else {
        return [
          vue.createTextVNode("Add Selected to Inventory")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.addingInventory,
    onClose: ($event) => $data.addingInventory = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Add these items to inventory.`);
      } else {
        return [
          vue.createTextVNode("Add these items to inventory.")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Once you add these items to inventory, you can print their tags. You won&#39;t be able to make changes to these items once added to inventory unless you remove them from inventory. `);
      } else {
        return [
          vue.createTextVNode(" Once you add these items to inventory, you can print their tags. You won't be able to make changes to these items once added to inventory unless you remove them from inventory. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<form${_scopeId}><div class="col-span-6 grid gap-6 divide-gray-100 divide-y"${_scopeId}><div${_scopeId}><h2 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}> Inventory Type </h2><p class="mt-1 text-sm text-gray-500"${_scopeId}> Choose how these items will be stored in inventory. Within a group, or individually. </p>`);
        _push2(serverRenderer.ssrRenderComponent(_component_RadioGroup, {
          modelValue: $data.selectedType,
          "onUpdate:modelValue": ($event) => $data.selectedType = $event,
          class: "mt-4"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_RadioGroupLabel, { class: "sr-only" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Type of inventory `);
                  } else {
                    return [
                      vue.createTextVNode(" Type of inventory ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_JetInputError, {
                message: $data.form.errors.type
              }, null, _parent3, _scopeId2));
              _push3(`<div class="bg-white rounded-md -space-y-px"${_scopeId2}><!--[-->`);
              serverRenderer.ssrRenderList($data.types, (type, typeIdx) => {
                _push3(serverRenderer.ssrRenderComponent(_component_RadioGroupOption, {
                  as: "template",
                  key: type.name,
                  value: type
                }, {
                  default: vue.withCtx(({ checked, active }, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`<div class="${serverRenderer.ssrRenderClass([
                        typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                        typeIdx === $data.types.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                        checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                        "relative border p-4 flex cursor-pointer focus:outline-none"
                      ])}"${_scopeId3}><span class="${serverRenderer.ssrRenderClass([
                        checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                        active ? "ring-2 ring-offset-2 ring-green-500" : "",
                        "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center flex-shrink-0"
                      ])}" aria-hidden="true"${_scopeId3}><span class="rounded-full bg-white w-1.5 h-1.5"${_scopeId3}></span></span><div class="ml-3 flex flex-col"${_scopeId3}>`);
                      _push4(serverRenderer.ssrRenderComponent(_component_RadioGroupLabel, {
                        as: "span",
                        class: [
                          checked ? "text-green-900" : "text-gray-900",
                          "block text-sm font-medium"
                        ]
                      }, {
                        default: vue.withCtx((_3, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`${serverRenderer.ssrInterpolate(type.name)}`);
                          } else {
                            return [
                              vue.createTextVNode(vue.toDisplayString(type.name), 1)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_RadioGroupDescription, {
                        as: "span",
                        class: [
                          checked ? "text-green-700" : "text-gray-500",
                          "block text-sm"
                        ]
                      }, {
                        default: vue.withCtx((_3, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`${serverRenderer.ssrInterpolate(type.description)}`);
                          } else {
                            return [
                              vue.createTextVNode(vue.toDisplayString(type.description), 1)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent4, _scopeId3));
                      _push4(`</div></div>`);
                    } else {
                      return [
                        vue.createVNode("div", {
                          class: [
                            typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                            typeIdx === $data.types.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                            checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                            "relative border p-4 flex cursor-pointer focus:outline-none"
                          ]
                        }, [
                          vue.createVNode("span", {
                            class: [
                              checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                              active ? "ring-2 ring-offset-2 ring-green-500" : "",
                              "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center flex-shrink-0"
                            ],
                            "aria-hidden": "true"
                          }, [
                            vue.createVNode("span", { class: "rounded-full bg-white w-1.5 h-1.5" })
                          ], 2),
                          vue.createVNode("div", { class: "ml-3 flex flex-col" }, [
                            vue.createVNode(_component_RadioGroupLabel, {
                              as: "span",
                              class: [
                                checked ? "text-green-900" : "text-gray-900",
                                "block text-sm font-medium"
                              ]
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode(vue.toDisplayString(type.name), 1)
                              ]),
                              _: 2
                            }, 1032, ["class"]),
                            vue.createVNode(_component_RadioGroupDescription, {
                              as: "span",
                              class: [
                                checked ? "text-green-700" : "text-gray-500",
                                "block text-sm"
                              ]
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode(vue.toDisplayString(type.description), 1)
                              ]),
                              _: 2
                            }, 1032, ["class"])
                          ])
                        ], 2)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
              });
              _push3(`<!--]--></div>`);
            } else {
              return [
                vue.createVNode(_component_RadioGroupLabel, { class: "sr-only" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Type of inventory ")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_JetInputError, {
                  message: $data.form.errors.type
                }, null, 8, ["message"]),
                vue.createVNode("div", { class: "bg-white rounded-md -space-y-px" }, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.types, (type, typeIdx) => {
                    return vue.openBlock(), vue.createBlock(_component_RadioGroupOption, {
                      as: "template",
                      key: type.name,
                      value: type
                    }, {
                      default: vue.withCtx(({ checked, active }) => [
                        vue.createVNode("div", {
                          class: [
                            typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                            typeIdx === $data.types.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                            checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                            "relative border p-4 flex cursor-pointer focus:outline-none"
                          ]
                        }, [
                          vue.createVNode("span", {
                            class: [
                              checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                              active ? "ring-2 ring-offset-2 ring-green-500" : "",
                              "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center flex-shrink-0"
                            ],
                            "aria-hidden": "true"
                          }, [
                            vue.createVNode("span", { class: "rounded-full bg-white w-1.5 h-1.5" })
                          ], 2),
                          vue.createVNode("div", { class: "ml-3 flex flex-col" }, [
                            vue.createVNode(_component_RadioGroupLabel, {
                              as: "span",
                              class: [
                                checked ? "text-green-900" : "text-gray-900",
                                "block text-sm font-medium"
                              ]
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode(vue.toDisplayString(type.name), 1)
                              ]),
                              _: 2
                            }, 1032, ["class"]),
                            vue.createVNode(_component_RadioGroupDescription, {
                              as: "span",
                              class: [
                                checked ? "text-green-700" : "text-gray-500",
                                "block text-sm"
                              ]
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode(vue.toDisplayString(type.description), 1)
                              ]),
                              _: 2
                            }, 1032, ["class"])
                          ])
                        ], 2)
                      ]),
                      _: 2
                    }, 1032, ["value"]);
                  }), 128))
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        if (!$data.selectedNursery) {
          _push2(`<div class="pt-6"${_scopeId}><h2 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}> Nursery Location </h2><p class="mt-1 text-sm text-gray-500"${_scopeId}> Select which nursery these plants will be located in. </p>`);
          _push2(serverRenderer.ssrRenderComponent(_component_RadioGroup, {
            modelValue: $data.selectedNursery,
            "onUpdate:modelValue": ($event) => $data.selectedNursery = $event,
            class: "mt-4"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(serverRenderer.ssrRenderComponent(_component_RadioGroupLabel, { class: "sr-only" }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Nursery Location `);
                    } else {
                      return [
                        vue.createTextVNode(" Nursery Location ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_JetInputError, {
                  message: $data.form.errors.nursery_location_id
                }, null, _parent3, _scopeId2));
                _push3(`<div class="bg-white rounded-md -space-y-px"${_scopeId2}><!--[-->`);
                serverRenderer.ssrRenderList($data.nurseries, (nursery, typeIdx) => {
                  _push3(serverRenderer.ssrRenderComponent(_component_RadioGroupOption, {
                    as: "template",
                    key: nursery.id,
                    value: nursery
                  }, {
                    default: vue.withCtx(({ checked, active }, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<div class="${serverRenderer.ssrRenderClass([
                          typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                          typeIdx === $data.nurseries.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                          checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                          "relative border p-4 flex cursor-pointer focus:outline-none"
                        ])}"${_scopeId3}><span class="${serverRenderer.ssrRenderClass([
                          checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                          active ? "ring-2 ring-offset-2 ring-green-500" : "",
                          "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center flex-shrink-0"
                        ])}" aria-hidden="true"${_scopeId3}><span class="rounded-full bg-white w-1.5 h-1.5"${_scopeId3}></span></span><div class="ml-3 flex flex-col"${_scopeId3}>`);
                        _push4(serverRenderer.ssrRenderComponent(_component_RadioGroupLabel, {
                          as: "span",
                          class: [
                            checked ? "text-green-900" : "text-gray-900",
                            "block text-sm font-medium"
                          ]
                        }, {
                          default: vue.withCtx((_3, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`${serverRenderer.ssrInterpolate(nursery.name)}`);
                            } else {
                              return [
                                vue.createTextVNode(vue.toDisplayString(nursery.name), 1)
                              ];
                            }
                          }),
                          _: 2
                        }, _parent4, _scopeId3));
                        _push4(serverRenderer.ssrRenderComponent(_component_RadioGroupDescription, {
                          as: "span",
                          class: [
                            checked ? "text-green-700" : "text-gray-500",
                            "block text-sm"
                          ]
                        }, {
                          default: vue.withCtx((_3, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`${serverRenderer.ssrInterpolate(nursery.city)}${serverRenderer.ssrInterpolate(", " + nursery.state)}`);
                            } else {
                              return [
                                vue.createTextVNode(vue.toDisplayString(nursery.city) + vue.toDisplayString(", " + nursery.state), 1)
                              ];
                            }
                          }),
                          _: 2
                        }, _parent4, _scopeId3));
                        _push4(`</div></div>`);
                      } else {
                        return [
                          vue.createVNode("div", {
                            class: [
                              typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                              typeIdx === $data.nurseries.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                              checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                              "relative border p-4 flex cursor-pointer focus:outline-none"
                            ]
                          }, [
                            vue.createVNode("span", {
                              class: [
                                checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                                active ? "ring-2 ring-offset-2 ring-green-500" : "",
                                "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center flex-shrink-0"
                              ],
                              "aria-hidden": "true"
                            }, [
                              vue.createVNode("span", { class: "rounded-full bg-white w-1.5 h-1.5" })
                            ], 2),
                            vue.createVNode("div", { class: "ml-3 flex flex-col" }, [
                              vue.createVNode(_component_RadioGroupLabel, {
                                as: "span",
                                class: [
                                  checked ? "text-green-900" : "text-gray-900",
                                  "block text-sm font-medium"
                                ]
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode(vue.toDisplayString(nursery.name), 1)
                                ]),
                                _: 2
                              }, 1032, ["class"]),
                              vue.createVNode(_component_RadioGroupDescription, {
                                as: "span",
                                class: [
                                  checked ? "text-green-700" : "text-gray-500",
                                  "block text-sm"
                                ]
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode(vue.toDisplayString(nursery.city) + vue.toDisplayString(", " + nursery.state), 1)
                                ]),
                                _: 2
                              }, 1032, ["class"])
                            ])
                          ], 2)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent3, _scopeId2));
                });
                _push3(`<!--]--></div>`);
              } else {
                return [
                  vue.createVNode(_component_RadioGroupLabel, { class: "sr-only" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Nursery Location ")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_JetInputError, {
                    message: $data.form.errors.nursery_location_id
                  }, null, 8, ["message"]),
                  vue.createVNode("div", { class: "bg-white rounded-md -space-y-px" }, [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.nurseries, (nursery, typeIdx) => {
                      return vue.openBlock(), vue.createBlock(_component_RadioGroupOption, {
                        as: "template",
                        key: nursery.id,
                        value: nursery
                      }, {
                        default: vue.withCtx(({ checked, active }) => [
                          vue.createVNode("div", {
                            class: [
                              typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                              typeIdx === $data.nurseries.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                              checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                              "relative border p-4 flex cursor-pointer focus:outline-none"
                            ]
                          }, [
                            vue.createVNode("span", {
                              class: [
                                checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                                active ? "ring-2 ring-offset-2 ring-green-500" : "",
                                "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center flex-shrink-0"
                              ],
                              "aria-hidden": "true"
                            }, [
                              vue.createVNode("span", { class: "rounded-full bg-white w-1.5 h-1.5" })
                            ], 2),
                            vue.createVNode("div", { class: "ml-3 flex flex-col" }, [
                              vue.createVNode(_component_RadioGroupLabel, {
                                as: "span",
                                class: [
                                  checked ? "text-green-900" : "text-gray-900",
                                  "block text-sm font-medium"
                                ]
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode(vue.toDisplayString(nursery.name), 1)
                                ]),
                                _: 2
                              }, 1032, ["class"]),
                              vue.createVNode(_component_RadioGroupDescription, {
                                as: "span",
                                class: [
                                  checked ? "text-green-700" : "text-gray-500",
                                  "block text-sm"
                                ]
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode(vue.toDisplayString(nursery.city) + vue.toDisplayString(", " + nursery.state), 1)
                                ]),
                                _: 2
                              }, 1032, ["class"])
                            ])
                          ], 2)
                        ]),
                        _: 2
                      }, 1032, ["value"]);
                    }), 128))
                  ])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($data.selectedNursery) {
          _push2(`<div class="py-4"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_back_button, {
            onClick: ($event) => $data.selectedNursery = null,
            class: "mb-4"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Change Nursery`);
              } else {
                return [
                  vue.createTextVNode("Change Nursery")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`<h2 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}>${serverRenderer.ssrInterpolate($data.selectedNursery.name)}: Block Location </h2><p class="mt-1 text-sm text-gray-500"${_scopeId}> Here you can add a block location for these items. This will give group inventory their location, and individual inventory a block location until they are given a place. </p>`);
          _push2(serverRenderer.ssrRenderComponent(_component_select_box, {
            items: $data.blocks,
            showLabel: false,
            modelValue: $data.selectedBlock,
            "onUpdate:modelValue": ($event) => $data.selectedBlock = $event,
            class: "mt-4"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            onSubmit: vue.withModifiers($options.addInventory, ["prevent"]),
            onKeydown: vue.withKeys($options.addInventory, ["enter"])
          }, [
            vue.createVNode("div", { class: "col-span-6 grid gap-6 divide-gray-100 divide-y" }, [
              vue.createVNode("div", null, [
                vue.createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, " Inventory Type "),
                vue.createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Choose how these items will be stored in inventory. Within a group, or individually. "),
                vue.createVNode(_component_RadioGroup, {
                  modelValue: $data.selectedType,
                  "onUpdate:modelValue": ($event) => $data.selectedType = $event,
                  class: "mt-4"
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_RadioGroupLabel, { class: "sr-only" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" Type of inventory ")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_JetInputError, {
                      message: $data.form.errors.type
                    }, null, 8, ["message"]),
                    vue.createVNode("div", { class: "bg-white rounded-md -space-y-px" }, [
                      (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.types, (type, typeIdx) => {
                        return vue.openBlock(), vue.createBlock(_component_RadioGroupOption, {
                          as: "template",
                          key: type.name,
                          value: type
                        }, {
                          default: vue.withCtx(({ checked, active }) => [
                            vue.createVNode("div", {
                              class: [
                                typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                                typeIdx === $data.types.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                                checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                                "relative border p-4 flex cursor-pointer focus:outline-none"
                              ]
                            }, [
                              vue.createVNode("span", {
                                class: [
                                  checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                                  active ? "ring-2 ring-offset-2 ring-green-500" : "",
                                  "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center flex-shrink-0"
                                ],
                                "aria-hidden": "true"
                              }, [
                                vue.createVNode("span", { class: "rounded-full bg-white w-1.5 h-1.5" })
                              ], 2),
                              vue.createVNode("div", { class: "ml-3 flex flex-col" }, [
                                vue.createVNode(_component_RadioGroupLabel, {
                                  as: "span",
                                  class: [
                                    checked ? "text-green-900" : "text-gray-900",
                                    "block text-sm font-medium"
                                  ]
                                }, {
                                  default: vue.withCtx(() => [
                                    vue.createTextVNode(vue.toDisplayString(type.name), 1)
                                  ]),
                                  _: 2
                                }, 1032, ["class"]),
                                vue.createVNode(_component_RadioGroupDescription, {
                                  as: "span",
                                  class: [
                                    checked ? "text-green-700" : "text-gray-500",
                                    "block text-sm"
                                  ]
                                }, {
                                  default: vue.withCtx(() => [
                                    vue.createTextVNode(vue.toDisplayString(type.description), 1)
                                  ]),
                                  _: 2
                                }, 1032, ["class"])
                              ])
                            ], 2)
                          ]),
                          _: 2
                        }, 1032, ["value"]);
                      }), 128))
                    ])
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue"])
              ]),
              !$data.selectedNursery ? (vue.openBlock(), vue.createBlock("div", {
                key: 0,
                class: "pt-6"
              }, [
                vue.createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, " Nursery Location "),
                vue.createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Select which nursery these plants will be located in. "),
                vue.createVNode(_component_RadioGroup, {
                  modelValue: $data.selectedNursery,
                  "onUpdate:modelValue": ($event) => $data.selectedNursery = $event,
                  class: "mt-4"
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_RadioGroupLabel, { class: "sr-only" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" Nursery Location ")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_JetInputError, {
                      message: $data.form.errors.nursery_location_id
                    }, null, 8, ["message"]),
                    vue.createVNode("div", { class: "bg-white rounded-md -space-y-px" }, [
                      (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.nurseries, (nursery, typeIdx) => {
                        return vue.openBlock(), vue.createBlock(_component_RadioGroupOption, {
                          as: "template",
                          key: nursery.id,
                          value: nursery
                        }, {
                          default: vue.withCtx(({ checked, active }) => [
                            vue.createVNode("div", {
                              class: [
                                typeIdx === 0 ? "rounded-tl-md rounded-tr-md" : "",
                                typeIdx === $data.nurseries.length - 1 ? "rounded-bl-md rounded-br-md" : "",
                                checked ? "bg-green-50 border-green-200 z-10" : "border-gray-200",
                                "relative border p-4 flex cursor-pointer focus:outline-none"
                              ]
                            }, [
                              vue.createVNode("span", {
                                class: [
                                  checked ? "bg-green-600 border-transparent" : "bg-white border-gray-300",
                                  active ? "ring-2 ring-offset-2 ring-green-500" : "",
                                  "h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center flex-shrink-0"
                                ],
                                "aria-hidden": "true"
                              }, [
                                vue.createVNode("span", { class: "rounded-full bg-white w-1.5 h-1.5" })
                              ], 2),
                              vue.createVNode("div", { class: "ml-3 flex flex-col" }, [
                                vue.createVNode(_component_RadioGroupLabel, {
                                  as: "span",
                                  class: [
                                    checked ? "text-green-900" : "text-gray-900",
                                    "block text-sm font-medium"
                                  ]
                                }, {
                                  default: vue.withCtx(() => [
                                    vue.createTextVNode(vue.toDisplayString(nursery.name), 1)
                                  ]),
                                  _: 2
                                }, 1032, ["class"]),
                                vue.createVNode(_component_RadioGroupDescription, {
                                  as: "span",
                                  class: [
                                    checked ? "text-green-700" : "text-gray-500",
                                    "block text-sm"
                                  ]
                                }, {
                                  default: vue.withCtx(() => [
                                    vue.createTextVNode(vue.toDisplayString(nursery.city) + vue.toDisplayString(", " + nursery.state), 1)
                                  ]),
                                  _: 2
                                }, 1032, ["class"])
                              ])
                            ], 2)
                          ]),
                          _: 2
                        }, 1032, ["value"]);
                      }), 128))
                    ])
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue"])
              ])) : vue.createCommentVNode("", true),
              $data.selectedNursery ? (vue.openBlock(), vue.createBlock("div", {
                key: 1,
                class: "py-4"
              }, [
                vue.createVNode(_component_back_button, {
                  onClick: ($event) => $data.selectedNursery = null,
                  class: "mb-4"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Change Nursery")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, vue.toDisplayString($data.selectedNursery.name) + ": Block Location ", 1),
                vue.createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Here you can add a block location for these items. This will give group inventory their location, and individual inventory a block location until they are given a place. "),
                vue.createVNode(_component_select_box, {
                  items: $data.blocks,
                  showLabel: false,
                  modelValue: $data.selectedBlock,
                  "onUpdate:modelValue": ($event) => $data.selectedBlock = $event,
                  class: "mt-4"
                }, null, 8, ["items", "modelValue", "onUpdate:modelValue"])
              ])) : vue.createCommentVNode("", true)
            ])
          ], 40, ["onSubmit", "onKeydown"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between w-full"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          type: "button",
          onClick: ($event) => $data.addingInventory = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.addInventory,
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Add items to Inventory`);
            } else {
              return [
                vue.createTextVNode("Add items to Inventory")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between w-full" }, [
            vue.createVNode(_component_jet_secondary_button, {
              type: "button",
              onClick: ($event) => $data.addingInventory = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode("div", null, [
              vue.createVNode(_component_jet_button, {
                type: "submit",
                onClick: $options.addInventory,
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Add items to Inventory")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$Q = _sfc_main$Q.setup;
_sfc_main$Q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/AddPurchaseItemsToInventory.vue");
  return _sfc_setup$Q ? _sfc_setup$Q(props, ctx) : void 0;
};
var AddPurchaseItemsToInventory = /* @__PURE__ */ _export_sfc(_sfc_main$Q, [["ssrRender", _sfc_ssrRender$O]]);
var AddPurchaseItemsToInventory$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": AddPurchaseItemsToInventory
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$P = {
  components: {
    PrintButton
  },
  props: { purchase_items: Array },
  methods: {
    printTags() {
      window.open(
        route("print-items-tags", {
          purchase_items: this.purchase_items
        })
      );
      setTimeout(() => {
        inertia.Inertia.reload();
      }, 3e3);
    }
  }
};
function _sfc_ssrRender$N(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_print_button = vue.resolveComponent("print-button");
  _push(serverRenderer.ssrRenderComponent(_component_print_button, vue.mergeProps({ onClick: $options.printTags }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Print Tags`);
      } else {
        return [
          vue.createTextVNode("Print Tags")
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$P = _sfc_main$P.setup;
_sfc_main$P.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/PrintPurchaseItemsInventory.vue");
  return _sfc_setup$P ? _sfc_setup$P(props, ctx) : void 0;
};
var PrintPurchaseItemsInventory = /* @__PURE__ */ _export_sfc(_sfc_main$P, [["ssrRender", _sfc_ssrRender$N]]);
var PrintPurchaseItemsInventory$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": PrintPurchaseItemsInventory
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$O = {
  props: { purchase: Object, purchaseItems: Array },
  components: {
    JetActionSection,
    CreatePurchaseItem,
    PurchaseLineItem,
    AddPurchaseItemsToInventory,
    PrintPurchaseItemsInventory
  },
  data() {
    return {
      allSelected: false,
      selected: []
    };
  },
  computed: {
    itemsNotInInventory() {
      return this.purchaseItems.filter((item) => this.selected.includes(item.id)).map((item) => item.in_inventory).includes(false);
    },
    itemsInInventory() {
      return this.purchaseItems.filter((item) => this.selected.includes(item.id)).map((item) => item.in_inventory).includes(true);
    }
  },
  watch: {
    selected() {
      let selectedLength = this.selected.length;
      if (selectedLength === 0) {
        this.allSelected = false;
      }
    }
  },
  methods: {
    toggleSelected(item) {
      if (this.selected.includes(item.id)) {
        this.selected = this.selected.filter((id) => id != item.id);
      } else {
        this.selected.push(item.id);
      }
    },
    isItemSelected(item) {
      return this.selected.includes(item.id);
    },
    toggleAllSelected() {
      if (this.allSelected) {
        this.selected = this.purchaseItems.map((item) => item.id);
      } else {
        this.selected = [];
      }
    }
  }
};
function _sfc_ssrRender$M(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_create_purchase_item = vue.resolveComponent("create-purchase-item");
  const _component_AddPurchaseItemsToInventory = vue.resolveComponent("AddPurchaseItemsToInventory");
  const _component_PrintPurchaseItemsInventory = vue.resolveComponent("PrintPurchaseItemsInventory");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_purchase_line_item = vue.resolveComponent("purchase-line-item");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Purchase Items`);
      } else {
        return [
          vue.createTextVNode("Purchase Items")
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_purchase_item, { purchase: $props.purchase }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_purchase_item, { purchase: $props.purchase }, null, 8, ["purchase"])
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($data.selected.length) {
          _push2(`<div class="flex pb-4 space-x-4"${_scopeId}>`);
          if ($options.itemsNotInInventory) {
            _push2(serverRenderer.ssrRenderComponent(_component_AddPurchaseItemsToInventory, { selectedItems: $data.selected }, null, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
          if ($options.itemsInInventory) {
            _push2(serverRenderer.ssrRenderComponent(_component_PrintPurchaseItemsInventory, { purchase_items: $data.selected }, null, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div${_scopeId}><div class="py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider grid gap-4 grid-cols-5 md:grid-cols-10 items-center border-b border-gray-50"${_scopeId}><div class="col-span-2 md:col-span-4 flex items-center"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          class: "sr-only",
          for: "select-all"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Select all`);
            } else {
              return [
                vue.createTextVNode("Select all")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          id: "select-all",
          checked: $data.allSelected,
          modelValue: $data.allSelected,
          "onUpdate:modelValue": ($event) => $data.allSelected = $event,
          onChange: $options.toggleAllSelected
        }, null, _parent2, _scopeId));
        _push2(`<div class="ml-6"${_scopeId}>Name</div></div><div class="truncate"${_scopeId}>Size</div><div class="truncate"${_scopeId}>Confirmed</div><div class="hidden md:block truncate"${_scopeId}>Price</div><div class="hidden md:block truncate"${_scopeId}>Received</div><div class="hidden md:block truncate"${_scopeId}>Printed</div><div${_scopeId}></div></div><div class="divide-gray-50 divide-y"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($props.purchaseItems, (item) => {
          _push2(serverRenderer.ssrRenderComponent(_component_purchase_line_item, {
            onSelected: ($event) => $options.toggleSelected(item),
            key: item.id,
            item,
            itemSelected: $options.isItemSelected(item)
          }, null, _parent2, _scopeId));
        });
        _push2(`<!--]--></div></div>`);
      } else {
        return [
          $data.selected.length ? (vue.openBlock(), vue.createBlock("div", {
            key: 0,
            class: "flex pb-4 space-x-4"
          }, [
            $options.itemsNotInInventory ? (vue.openBlock(), vue.createBlock(_component_AddPurchaseItemsToInventory, {
              key: 0,
              selectedItems: $data.selected
            }, null, 8, ["selectedItems"])) : vue.createCommentVNode("", true),
            $options.itemsInInventory ? (vue.openBlock(), vue.createBlock(_component_PrintPurchaseItemsInventory, {
              key: 1,
              purchase_items: $data.selected
            }, null, 8, ["purchase_items"])) : vue.createCommentVNode("", true)
          ])) : vue.createCommentVNode("", true),
          vue.createVNode("div", null, [
            vue.createVNode("div", { class: "py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider grid gap-4 grid-cols-5 md:grid-cols-10 items-center border-b border-gray-50" }, [
              vue.createVNode("div", { class: "col-span-2 md:col-span-4 flex items-center" }, [
                vue.createVNode(_component_jet_label, {
                  class: "sr-only",
                  for: "select-all"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Select all")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_jet_checkbox, {
                  id: "select-all",
                  checked: $data.allSelected,
                  modelValue: $data.allSelected,
                  "onUpdate:modelValue": ($event) => $data.allSelected = $event,
                  onChange: $options.toggleAllSelected
                }, null, 8, ["checked", "modelValue", "onUpdate:modelValue", "onChange"]),
                vue.createVNode("div", { class: "ml-6" }, "Name")
              ]),
              vue.createVNode("div", { class: "truncate" }, "Size"),
              vue.createVNode("div", { class: "truncate" }, "Confirmed"),
              vue.createVNode("div", { class: "hidden md:block truncate" }, "Price"),
              vue.createVNode("div", { class: "hidden md:block truncate" }, "Received"),
              vue.createVNode("div", { class: "hidden md:block truncate" }, "Printed"),
              vue.createVNode("div")
            ]),
            vue.createVNode("div", { class: "divide-gray-50 divide-y" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.purchaseItems, (item) => {
                return vue.openBlock(), vue.createBlock(_component_purchase_line_item, {
                  onSelected: ($event) => $options.toggleSelected(item),
                  key: item.id,
                  item,
                  itemSelected: $options.isItemSelected(item)
                }, null, 8, ["onSelected", "item", "itemSelected"]);
              }), 128))
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$O = _sfc_main$O.setup;
_sfc_main$O.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Components/PurchaseItems.vue");
  return _sfc_setup$O ? _sfc_setup$O(props, ctx) : void 0;
};
var PurchaseItems = /* @__PURE__ */ _export_sfc(_sfc_main$O, [["ssrRender", _sfc_ssrRender$M]]);
var PurchaseItems$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": PurchaseItems
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$N = {
  components: {
    PurchasesLayout,
    UpdatePurchaseForm,
    ButtonLink,
    DeletePurchaseForm,
    PurchaseItems
  },
  props: {
    purchase: Object,
    purchaseItems: Array
  }
};
function _sfc_ssrRender$L(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_purchases_layout = vue.resolveComponent("purchases-layout");
  const _component_update_purchase_form = vue.resolveComponent("update-purchase-form");
  const _component_purchase_items = vue.resolveComponent("purchase-items");
  const _component_delete_purchase_form = vue.resolveComponent("delete-purchase-form");
  _push(serverRenderer.ssrRenderComponent(_component_purchases_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="space-y-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_update_purchase_form, { purchase: $props.purchase }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_purchase_items, {
          purchase: $props.purchase,
          purchaseItems: $props.purchaseItems
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_delete_purchase_form, { purchase: $props.purchase }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", null, [
            vue.createVNode("div", { class: "space-y-6" }, [
              vue.createVNode(_component_update_purchase_form, { purchase: $props.purchase }, null, 8, ["purchase"]),
              vue.createVNode(_component_purchase_items, {
                purchase: $props.purchase,
                purchaseItems: $props.purchaseItems
              }, null, 8, ["purchase", "purchaseItems"]),
              vue.createVNode(_component_delete_purchase_form, { purchase: $props.purchase }, null, 8, ["purchase"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$N = _sfc_main$N.setup;
_sfc_main$N.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Purchases/Show.vue");
  return _sfc_setup$N ? _sfc_setup$N(props, ctx) : void 0;
};
var Show$8 = /* @__PURE__ */ _export_sfc(_sfc_main$N, [["ssrRender", _sfc_ssrRender$L]]);
var Show$9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$8
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$M = {
  components: {
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    isIndex() {
      return route().current("quotes.index");
    }
  }
};
function _sfc_ssrRender$K(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: false }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb"${_scopeId2}><div class="px-4 md:pb-2"${_scopeId2}>`);
                if (_ctx.route().current("quotes.*")) {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("quotes.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Quotes`);
                      } else {
                        return [
                          vue.createTextVNode("Quotes")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("quotes.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("quotes.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Quotes")
                      ]),
                      _: 1
                    }, 8, ["href"])) : vue.createCommentVNode("", true)
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_main_area, { dontShowOnMobile: false }, {
            default: vue.withCtx(() => [
              !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                key: 0,
                "aria-label": "Breadcrumb"
              }, [
                vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                  _ctx.route().current("quotes.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                    key: 0,
                    href: _ctx.route("quotes.index")
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Quotes")
                    ]),
                    _: 1
                  }, 8, ["href"])) : vue.createCommentVNode("", true)
                ])
              ])) : vue.createCommentVNode("", true),
              vue.createVNode("div", { class: "py-2" }, [
                vue.renderSlot(_ctx.$slots, "default")
              ])
            ]),
            _: 3
          })
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$M = _sfc_main$M.setup;
_sfc_main$M.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Quotes/QuotesLayout.vue");
  return _sfc_setup$M ? _sfc_setup$M(props, ctx) : void 0;
};
var QuotesLayout = /* @__PURE__ */ _export_sfc(_sfc_main$M, [["ssrRender", _sfc_ssrRender$K]]);
var QuotesLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": QuotesLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$L = {
  components: {
    QuotesLayout,
    OrderCreate
  },
  props: ["customers"]
};
function _sfc_ssrRender$J(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_quotes_layout = vue.resolveComponent("quotes-layout");
  const _component_OrderCreate = vue.resolveComponent("OrderCreate");
  _push(serverRenderer.ssrRenderComponent(_component_quotes_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_OrderCreate, {
          "is-quote": true,
          customers: $props.customers
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_OrderCreate, {
            "is-quote": true,
            customers: $props.customers
          }, null, 8, ["customers"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$L = _sfc_main$L.setup;
_sfc_main$L.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Quotes/Create.vue");
  return _sfc_setup$L ? _sfc_setup$L(props, ctx) : void 0;
};
var Create$6 = /* @__PURE__ */ _export_sfc(_sfc_main$L, [["ssrRender", _sfc_ssrRender$J]]);
var Create$7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$6
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$K = {
  components: {
    ExternalLinkIcon: outline.ExternalLinkIcon,
    ArrowDownIcon: outline.ArrowDownIcon,
    ArrowUpIcon: outline.ArrowUpIcon,
    QuotesLayout,
    ButtonLink,
    DetailsSection,
    HeadingOne,
    CompletedOrdersCard,
    ActiveQuotesCard,
    ViewOrders
  },
  props: {
    quotes: {
      type: Object
    },
    filters: {
      type: Object
    }
  }
};
function _sfc_ssrRender$I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_quotes_layout = vue.resolveComponent("quotes-layout");
  const _component_heading_one = vue.resolveComponent("heading-one");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_completed_orders_card = vue.resolveComponent("completed-orders-card");
  const _component_view_orders = vue.resolveComponent("view-orders");
  _push(serverRenderer.ssrRenderComponent(_component_quotes_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between items-center w-full pb-9 px-2 lg:px-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_heading_one, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Quotes`);
            } else {
              return [
                vue.createTextVNode("Quotes")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_button_link, {
          href: _ctx.route("quotes.create")
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`New Quote`);
            } else {
              return [
                vue.createTextVNode("New Quote")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div class="grid gap-6 lg:gap-8"${_scopeId}><div class="grid gap-4 lg:gap-6 md:grid-cols-3 text-gray-900"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_completed_orders_card, {
          thirtyDaysCompletedOrders: 0,
          thirtyDaysCompletedSales: 0
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_view_orders, {
          "are-quotes": true,
          orders: $props.quotes,
          filters: $props.filters
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between items-center w-full pb-9 px-2 lg:px-4" }, [
            vue.createVNode(_component_heading_one, null, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Quotes")
              ]),
              _: 1
            }),
            vue.createVNode(_component_button_link, {
              href: _ctx.route("quotes.create")
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("New Quote")
              ]),
              _: 1
            }, 8, ["href"])
          ]),
          vue.createVNode("div", { class: "grid gap-6 lg:gap-8" }, [
            vue.createVNode("div", { class: "grid gap-4 lg:gap-6 md:grid-cols-3 text-gray-900" }, [
              vue.createVNode(_component_completed_orders_card, {
                thirtyDaysCompletedOrders: 0,
                thirtyDaysCompletedSales: 0
              })
            ]),
            vue.createVNode(_component_view_orders, {
              "are-quotes": true,
              orders: $props.quotes,
              filters: $props.filters
            }, null, 8, ["orders", "filters"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$K = _sfc_main$K.setup;
_sfc_main$K.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Quotes/Index.vue");
  return _sfc_setup$K ? _sfc_setup$K(props, ctx) : void 0;
};
var Index$8 = /* @__PURE__ */ _export_sfc(_sfc_main$K, [["ssrRender", _sfc_ssrRender$I]]);
var Index$9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$8
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$J = {
  components: {
    DetailsSection,
    SmallLineItem,
    EmptyState
  },
  props: {
    quote: {
      type: Object,
      required: true
    }
  },
  data() {
    return {
      loading: false,
      errorMessage: null,
      orders: []
    };
  },
  computed: {
    hasOrders() {
      return this.orders.length > 0;
    }
  },
  mounted() {
    this.getOrders();
  },
  methods: {
    getOrders() {
      this.loading = true;
      axios__default["default"].get(route("api.quotes.orders.index", { quote: this.quote.id })).then((response) => {
        this.orders = response.data;
      }).catch((error) => {
        this.errorMessage = error.message;
        this.orders = [];
      }).finally(() => {
        this.loading = false;
      });
    }
  }
};
function _sfc_ssrRender$H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_SmallLineItem = vue.resolveComponent("SmallLineItem");
  const _component_EmptyState = vue.resolveComponent("EmptyState");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Linked Orders `);
      } else {
        return [
          vue.createTextVNode("Linked Orders ")
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($data.orders, (order) => {
          _push2(serverRenderer.ssrRenderComponent(_component_SmallLineItem, {
            as: "a",
            target: "_blank",
            href: _ctx.route(order.route, order.id),
            key: order.id,
            class: "flex items-center justify-between py-2"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex items-center"${_scopeId2}><span class="text-sm"${_scopeId2}>${serverRenderer.ssrInterpolate(order.name)}</span><span class="text-sm ml-2"${_scopeId2}>${serverRenderer.ssrInterpolate(_ctx.formatDate(order.created_at))}</span></div><div class="flex items-center"${_scopeId2}><span class="text-sm ml-2"${_scopeId2}>${serverRenderer.ssrInterpolate(_ctx.formatMoney(order.total))}</span></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode("span", { class: "text-sm" }, vue.toDisplayString(order.name), 1),
                    vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatDate(order.created_at)), 1)
                  ]),
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatMoney(order.total)), 1)
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]-->`);
        if (!$data.orders.length) {
          _push2(serverRenderer.ssrRenderComponent(_component_EmptyState, {
            heading: "No orders created from this quote.",
            showIcon: false,
            align: "left",
            class: "p-0"
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", null, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.orders, (order) => {
              return vue.openBlock(), vue.createBlock(_component_SmallLineItem, {
                as: "a",
                target: "_blank",
                href: _ctx.route(order.route, order.id),
                key: order.id,
                class: "flex items-center justify-between py-2"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode("span", { class: "text-sm" }, vue.toDisplayString(order.name), 1),
                    vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatDate(order.created_at)), 1)
                  ]),
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode("span", { class: "text-sm ml-2" }, vue.toDisplayString(_ctx.formatMoney(order.total)), 1)
                  ])
                ]),
                _: 2
              }, 1032, ["href"]);
            }), 128)),
            !$data.orders.length ? (vue.openBlock(), vue.createBlock(_component_EmptyState, {
              key: 0,
              heading: "No orders created from this quote.",
              showIcon: false,
              align: "left",
              class: "p-0"
            })) : vue.createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$J = _sfc_main$J.setup;
_sfc_main$J.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Quotes/Components/LinkedOrdersCard.vue");
  return _sfc_setup$J ? _sfc_setup$J(props, ctx) : void 0;
};
var LinkedOrdersCard = /* @__PURE__ */ _export_sfc(_sfc_main$J, [["ssrRender", _sfc_ssrRender$H]]);
var LinkedOrdersCard$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": LinkedOrdersCard
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$I = {
  components: {
    QuotesLayout,
    OrderUpdate,
    OrderDelete,
    ActionCard,
    LinkedOrdersCard
  },
  props: {
    quote: Object,
    items: Array,
    priceLevels: Array,
    customers: Array
  },
  data() {
    return {
      editingInventory: false
    };
  }
};
function _sfc_ssrRender$G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_QuotesLayout = vue.resolveComponent("QuotesLayout");
  const _component_OrderUpdate = vue.resolveComponent("OrderUpdate");
  const _component_ActionCard = vue.resolveComponent("ActionCard");
  const _component_LinkedOrdersCard = vue.resolveComponent("LinkedOrdersCard");
  const _component_OrderDelete = vue.resolveComponent("OrderDelete");
  _push(serverRenderer.ssrRenderComponent(_component_QuotesLayout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="lg:flex"${_scopeId}><div class="lg:w-3/4 lg:mr-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_OrderUpdate, {
          order: $props.quote,
          customers: $props.customers,
          priceLevels: $props.priceLevels
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="lg:w-1/4 mt-4 lg:mt-0 space-y-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_ActionCard, { order: $props.quote }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_LinkedOrdersCard, { quote: $props.quote }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_OrderDelete, { order: $props.quote }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "lg:flex" }, [
            vue.createVNode("div", { class: "lg:w-3/4 lg:mr-6" }, [
              vue.createVNode(_component_OrderUpdate, {
                order: $props.quote,
                customers: $props.customers,
                priceLevels: $props.priceLevels
              }, null, 8, ["order", "customers", "priceLevels"])
            ]),
            vue.createVNode("div", { class: "lg:w-1/4 mt-4 lg:mt-0 space-y-4" }, [
              vue.createVNode(_component_ActionCard, { order: $props.quote }, null, 8, ["order"]),
              vue.createVNode(_component_LinkedOrdersCard, { quote: $props.quote }, null, 8, ["quote"]),
              vue.createVNode(_component_OrderDelete, { order: $props.quote }, null, 8, ["order"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$I = _sfc_main$I.setup;
_sfc_main$I.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Quotes/Show.vue");
  return _sfc_setup$I ? _sfc_setup$I(props, ctx) : void 0;
};
var Show$6 = /* @__PURE__ */ _export_sfc(_sfc_main$I, [["ssrRender", _sfc_ssrRender$G]]);
var Show$7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$6
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$H = {
  components: {
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    isIndex() {
      return route().current("reprint-queue.index");
    }
  }
};
function _sfc_ssrRender$F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: false }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb"${_scopeId2}><div class="px-4 md:pb-2"${_scopeId2}>`);
                if (_ctx.route().current("reprint-queue.*")) {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("reprint-queue.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`All Inventory in Queue`);
                      } else {
                        return [
                          vue.createTextVNode("All Inventory in Queue")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("reprint-queue.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("reprint-queue.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("All Inventory in Queue")
                      ]),
                      _: 1
                    }, 8, ["href"])) : vue.createCommentVNode("", true)
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_main_area, { dontShowOnMobile: false }, {
            default: vue.withCtx(() => [
              !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                key: 0,
                "aria-label": "Breadcrumb"
              }, [
                vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                  _ctx.route().current("reprint-queue.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                    key: 0,
                    href: _ctx.route("reprint-queue.index")
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("All Inventory in Queue")
                    ]),
                    _: 1
                  }, 8, ["href"])) : vue.createCommentVNode("", true)
                ])
              ])) : vue.createCommentVNode("", true),
              vue.createVNode("div", { class: "py-2" }, [
                vue.renderSlot(_ctx.$slots, "default")
              ])
            ]),
            _: 3
          })
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$H = _sfc_main$H.setup;
_sfc_main$H.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/ReprintQueue/QueueLayout.vue");
  return _sfc_setup$H ? _sfc_setup$H(props, ctx) : void 0;
};
var QueueLayout = /* @__PURE__ */ _export_sfc(_sfc_main$H, [["ssrRender", _sfc_ssrRender$F]]);
var QueueLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": QueueLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$G = {
  components: {
    PrintButton
  },
  props: { inventory: Array },
  methods: {
    printTags() {
      window.open(
        route("reprint-tags", {
          inventory: this.inventory
        })
      );
      setTimeout(() => {
        inertia.Inertia.reload();
      }, 3e3);
    }
  }
};
function _sfc_ssrRender$E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_print_button = vue.resolveComponent("print-button");
  _push(serverRenderer.ssrRenderComponent(_component_print_button, vue.mergeProps({ onClick: $options.printTags }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Print Tags`);
      } else {
        return [
          vue.createTextVNode("Print Tags")
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$G = _sfc_main$G.setup;
_sfc_main$G.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/ReprintQueue/Components/ReprintTagsButton.vue");
  return _sfc_setup$G ? _sfc_setup$G(props, ctx) : void 0;
};
var ReprintTagsButton = /* @__PURE__ */ _export_sfc(_sfc_main$G, [["ssrRender", _sfc_ssrRender$E]]);
var ReprintTagsButton$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ReprintTagsButton
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$F = {
  components: {
    TableD
  },
  props: {
    item: Object,
    itemSelected: Boolean
  },
  data() {
    return {
      selected: this.itemSelected
    };
  },
  emits: ["selected"],
  watch: {
    itemSelected() {
      this.selected = this.itemSelected;
    }
  }
};
function _sfc_ssrRender$D(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_table_d = vue.resolveComponent("table-d");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  _push(`<tr${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    tabindex: "0",
    class: "px-2"
  }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_table_d, { class: "sticky left-0 bg-white" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          class: "sr-only",
          for: "item-selected" + $props.item.id
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Select`);
            } else {
              return [
                vue.createTextVNode("Select")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
          id: "item-selected" + $props.item.id,
          onChange: ($event) => _ctx.$emit("selected"),
          value: $props.item.id,
          modelValue: $data.selected,
          "onUpdate:modelValue": ($event) => $data.selected = $event,
          checked: $data.selected
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_label, {
            class: "sr-only",
            for: "item-selected" + $props.item.id
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Select")
            ]),
            _: 1
          }, 8, ["for"]),
          vue.createVNode(_component_jet_checkbox, {
            id: "item-selected" + $props.item.id,
            onChange: ($event) => _ctx.$emit("selected"),
            value: $props.item.id,
            modelValue: $data.selected,
            "onUpdate:modelValue": ($event) => $data.selected = $event,
            checked: $data.selected
          }, null, 8, ["id", "onChange", "value", "modelValue", "onUpdate:modelValue", "checked"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.item.id)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.item.id), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.item.pivot.to_print)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.item.pivot.to_print), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate(_ctx.formatDate($props.item.pivot.created_at))}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString(_ctx.formatDate($props.item.pivot.created_at)), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.item.product.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.item.product.name), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.item.size.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.item.size.name), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      var _a, _b;
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate((_a = $props.item.nursery_location) == null ? void 0 : _a.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString((_b = $props.item.nursery_location) == null ? void 0 : _b.name), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_d, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      var _a, _b;
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate((_a = $props.item.block) == null ? void 0 : _a.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString((_b = $props.item.block) == null ? void 0 : _b.name), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</tr>`);
}
const _sfc_setup$F = _sfc_main$F.setup;
_sfc_main$F.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/ReprintQueue/Components/QueueItem.vue");
  return _sfc_setup$F ? _sfc_setup$F(props, ctx) : void 0;
};
var QueueItem = /* @__PURE__ */ _export_sfc(_sfc_main$F, [["ssrRender", _sfc_ssrRender$D]]);
var QueueItem$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": QueueItem
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$E = {
  components: {
    ExternalLinkIcon: outline.ExternalLinkIcon,
    ArrowDownIcon: outline.ArrowDownIcon,
    ArrowUpIcon: outline.ArrowUpIcon,
    DetailsSection,
    TableTable,
    TableHead,
    TableH,
    ReprintTagsButton,
    SearchInput,
    Pagination,
    QueueItem,
    ButtonLink
  },
  props: {
    inventory: {
      type: Object
    },
    filters: {
      type: Object
    }
  },
  data() {
    var _a;
    return {
      allSelected: false,
      selected: [],
      search: this.filters.search || "",
      orderBy: this.filters.orderBy || "",
      orderByDirection: (_a = this.filters.orderByDirection) != null ? _a : "desc"
    };
  },
  computed: {
    itemsToPrint() {
      return this.inventory.data.filter(
        (item) => this.selected.includes(item.id)
      );
    }
  },
  watch: {
    selected: {
      handler() {
        this.allSelected = this.selected.length === this.inventory.data.length;
      },
      deep: true
    },
    search: _debounce__default["default"](function(value) {
      this.updateSearch();
    }, 300)
  },
  methods: {
    toggleAllSelected() {
      this.allSelected = !this.allSelected;
      this.selected = this.allSelected ? this.inventory.data.map((item) => item.id) : [];
    },
    toggleSelected(currentItem) {
      if (this.selected.includes(currentItem.id)) {
        this.selected = this.selected.filter(
          (item) => item !== currentItem.id
        );
      } else {
        this.selected.push(currentItem.id);
      }
    },
    isItemSelected(currentItem) {
      return this.selected.includes(currentItem.id);
    },
    updateItemBy(value) {
      if (this.orderBy === value) {
        this.orderByDirection = this.orderByDirection === "desc" ? "asc" : "desc";
      } else {
        this.orderBy = value;
        this.orderByDirection = "desc";
      }
      this.updateSearch();
    },
    updateSearch() {
      this.$inertia.get(
        this.route("reprint-queue.index"),
        {
          search: this.search,
          orderBy: this.orderBy,
          orderByDirection: this.orderByDirection,
          includePrinted: this.filters.includePrinted
        },
        {
          preserveState: true,
          replace: true
        }
      );
    },
    showItem(item) {
      this.$inertia.get(route("inventory.show", item));
    }
  }
};
function _sfc_ssrRender$C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_search_input = vue.resolveComponent("search-input");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_ReprintTagsButton = vue.resolveComponent("ReprintTagsButton");
  const _component_table_table = vue.resolveComponent("table-table");
  const _component_table_head = vue.resolveComponent("table-head");
  const _component_table_h = vue.resolveComponent("table-h");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_checkbox = vue.resolveComponent("jet-checkbox");
  const _component_QueueItem = vue.resolveComponent("QueueItem");
  const _component_pagination = vue.resolveComponent("pagination");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, () => {
          _push2(`Inventory`);
        }, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "title", {}, () => [
            vue.createTextVNode("Inventory")
          ])
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_search_input, {
          modelValue: $data.search,
          "onUpdate:modelValue": ($event) => $data.search = $event
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_search_input, {
            modelValue: $data.search,
            "onUpdate:modelValue": ($event) => $data.search = $event
          }, null, 8, ["modelValue", "onUpdate:modelValue"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      var _a, _b;
      if (_push2) {
        _push2(`<div class="flex pb-4 space-x-4"${_scopeId}>`);
        if ($props.filters.includePrinted) {
          _push2(serverRenderer.ssrRenderComponent(_component_button_link, {
            href: _ctx.route("reprint-queue.index"),
            class: "btn btn-sm"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Hide Printed`);
              } else {
                return [
                  vue.createTextVNode(" Hide Printed")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(serverRenderer.ssrRenderComponent(_component_button_link, {
            href: _ctx.route("reprint-queue.index", { includePrinted: true }),
            class: "btn btn-sm"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Show Printed`);
              } else {
                return [
                  vue.createTextVNode(" Show Printed")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        }
        _push2(serverRenderer.ssrRenderComponent(_component_ReprintTagsButton, {
          disabled: !$data.selected.length,
          inventory: $data.selected
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 overflow-auto"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_table_table, { class: "text-left" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_table_head, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, { class: "sticky left-0 bg-white" }, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div${_scopeId4}>`);
                          _push5(serverRenderer.ssrRenderComponent(_component_jet_label, {
                            class: "sr-only",
                            for: "select-all"
                          }, {
                            default: vue.withCtx((_5, _push6, _parent6, _scopeId5) => {
                              if (_push6) {
                                _push6(`Select all`);
                              } else {
                                return [
                                  vue.createTextVNode("Select all")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent5, _scopeId4));
                          _push5(serverRenderer.ssrRenderComponent(_component_jet_checkbox, {
                            id: "select-all",
                            checked: $data.allSelected,
                            onChange: $options.toggleAllSelected
                          }, null, _parent5, _scopeId4));
                          _push5(`</div>`);
                        } else {
                          return [
                            vue.createVNode("div", null, [
                              vue.createVNode(_component_jet_label, {
                                class: "sr-only",
                                for: "select-all"
                              }, {
                                default: vue.withCtx(() => [
                                  vue.createTextVNode("Select all")
                                ]),
                                _: 1
                              }),
                              vue.createVNode(_component_jet_checkbox, {
                                id: "select-all",
                                checked: $data.allSelected,
                                onChange: $options.toggleAllSelected
                              }, null, 8, ["checked", "onChange"])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Inventory ID`);
                        } else {
                          return [
                            vue.createTextVNode("Inventory ID")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Qty to Print`);
                        } else {
                          return [
                            vue.createTextVNode("Qty to Print")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Date Added`);
                        } else {
                          return [
                            vue.createTextVNode("Date Added")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Product Name`);
                        } else {
                          return [
                            vue.createTextVNode("Product Name")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Size`);
                        } else {
                          return [
                            vue.createTextVNode("Size")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Nursery Location`);
                        } else {
                          return [
                            vue.createTextVNode("Nursery Location")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Block`);
                        } else {
                          return [
                            vue.createTextVNode("Block")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                        default: vue.withCtx(() => [
                          vue.createVNode("div", null, [
                            vue.createVNode(_component_jet_label, {
                              class: "sr-only",
                              for: "select-all"
                            }, {
                              default: vue.withCtx(() => [
                                vue.createTextVNode("Select all")
                              ]),
                              _: 1
                            }),
                            vue.createVNode(_component_jet_checkbox, {
                              id: "select-all",
                              checked: $data.allSelected,
                              onChange: $options.toggleAllSelected
                            }, null, 8, ["checked", "onChange"])
                          ])
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Inventory ID")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Qty to Print")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Date Added")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Product Name")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Size")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Nursery Location")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Block")
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<tbody${_scopeId2}><!--[-->`);
              serverRenderer.ssrRenderList($props.inventory.data, (item) => {
                _push3(serverRenderer.ssrRenderComponent(_component_QueueItem, {
                  key: `${item.id}-${item.pivot.created_at}`,
                  item,
                  itemSelected: $options.isItemSelected(item),
                  onSelected: ($event) => $options.toggleSelected(item)
                }, null, _parent3, _scopeId2));
              });
              _push3(`<!--]--></tbody>`);
            } else {
              return [
                vue.createVNode(_component_table_head, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", null, [
                          vue.createVNode(_component_jet_label, {
                            class: "sr-only",
                            for: "select-all"
                          }, {
                            default: vue.withCtx(() => [
                              vue.createTextVNode("Select all")
                            ]),
                            _: 1
                          }),
                          vue.createVNode(_component_jet_checkbox, {
                            id: "select-all",
                            checked: $data.allSelected,
                            onChange: $options.toggleAllSelected
                          }, null, 8, ["checked", "onChange"])
                        ])
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Inventory ID")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Qty to Print")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Date Added")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Product Name")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Size")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Nursery Location")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Block")
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                vue.createVNode("tbody", null, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.inventory.data, (item) => {
                    return vue.openBlock(), vue.createBlock(_component_QueueItem, {
                      key: `${item.id}-${item.pivot.created_at}`,
                      item,
                      itemSelected: $options.isItemSelected(item),
                      onSelected: ($event) => $options.toggleSelected(item)
                    }, null, 8, ["item", "itemSelected", "onSelected"]);
                  }), 128))
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        if (((_a = $props.inventory.data) == null ? void 0 : _a.length) < 1) {
          _push2(`<div class="p-4"${_scopeId}><div class="text-gray-500"${_scopeId}>No Inventory found.</div></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.inventory.data) {
          _push2(serverRenderer.ssrRenderComponent(_component_pagination, { items: $props.inventory }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex pb-4 space-x-4" }, [
            $props.filters.includePrinted ? (vue.openBlock(), vue.createBlock(_component_button_link, {
              key: 0,
              href: _ctx.route("reprint-queue.index"),
              class: "btn btn-sm"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Hide Printed")
              ]),
              _: 1
            }, 8, ["href"])) : (vue.openBlock(), vue.createBlock(_component_button_link, {
              key: 1,
              href: _ctx.route("reprint-queue.index", { includePrinted: true }),
              class: "btn btn-sm"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Show Printed")
              ]),
              _: 1
            }, 8, ["href"])),
            vue.createVNode(_component_ReprintTagsButton, {
              disabled: !$data.selected.length,
              inventory: $data.selected
            }, null, 8, ["disabled", "inventory"])
          ]),
          vue.createVNode("div", { class: "col-span-6 overflow-auto" }, [
            vue.createVNode(_component_table_table, { class: "text-left" }, {
              default: vue.withCtx(() => [
                vue.createVNode(_component_table_head, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", null, [
                          vue.createVNode(_component_jet_label, {
                            class: "sr-only",
                            for: "select-all"
                          }, {
                            default: vue.withCtx(() => [
                              vue.createTextVNode("Select all")
                            ]),
                            _: 1
                          }),
                          vue.createVNode(_component_jet_checkbox, {
                            id: "select-all",
                            checked: $data.allSelected,
                            onChange: $options.toggleAllSelected
                          }, null, 8, ["checked", "onChange"])
                        ])
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Inventory ID")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Qty to Print")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Date Added")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Product Name")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Size")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Nursery Location")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Block")
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                vue.createVNode("tbody", null, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.inventory.data, (item) => {
                    return vue.openBlock(), vue.createBlock(_component_QueueItem, {
                      key: `${item.id}-${item.pivot.created_at}`,
                      item,
                      itemSelected: $options.isItemSelected(item),
                      onSelected: ($event) => $options.toggleSelected(item)
                    }, null, 8, ["item", "itemSelected", "onSelected"]);
                  }), 128))
                ])
              ]),
              _: 1
            }),
            ((_b = $props.inventory.data) == null ? void 0 : _b.length) < 1 ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "p-4"
            }, [
              vue.createVNode("div", { class: "text-gray-500" }, "No Inventory found.")
            ])) : vue.createCommentVNode("", true),
            $props.inventory.data ? (vue.openBlock(), vue.createBlock(_component_pagination, {
              key: 1,
              items: $props.inventory
            }, null, 8, ["items"])) : vue.createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$E = _sfc_main$E.setup;
_sfc_main$E.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/ReprintQueue/Components/QueueView.vue");
  return _sfc_setup$E ? _sfc_setup$E(props, ctx) : void 0;
};
var QueueView = /* @__PURE__ */ _export_sfc(_sfc_main$E, [["ssrRender", _sfc_ssrRender$C]]);
var QueueView$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": QueueView
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$D = {
  components: {
    DialogModal: JetDialogModal
  },
  data() {
    return {
      addingToQueue: false,
      form: this.$inertia.form({
        inventory: null,
        quantity: 1
      })
    };
  },
  methods: {
    addToQueue() {
      this.addingToQueue = true;
    },
    save() {
      this.form.post(route("reprint-queue.store"), {
        onSuccess: () => {
          this.addingToQueue = false;
        }
      });
    }
  }
};
function _sfc_ssrRender$B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_dialog_modal = vue.resolveComponent("dialog-modal");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_button, { onClick: $options.addToQueue }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Add to Queue`);
      } else {
        return [
          vue.createTextVNode("Add to Queue")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_dialog_modal, {
    show: $data.addingToQueue,
    onClose: ($event) => $data.addingToQueue = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Add to Queue`);
      } else {
        return [
          vue.createTextVNode("Add to Queue")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<form class="w-full grid gap-4"${_scopeId}><div class="form-group"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "inventory_id" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Inventory ID`);
            } else {
              return [
                vue.createTextVNode("Inventory ID")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          class: "w-full",
          id: "inventory_id",
          type: "text",
          modelValue: $data.form.inventory,
          "onUpdate:modelValue": ($event) => $data.form.inventory = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          class: "mt-2",
          message: $data.form.errors.inventory
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="form-group"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { for: "quantity" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Quantity to Print`);
            } else {
              return [
                vue.createTextVNode("Quantity to Print")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          class: "w-full",
          id: "quantity",
          type: "number",
          modelValue: $data.form.quantity,
          "onUpdate:modelValue": ($event) => $data.form.quantity = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          class: "mt-2",
          message: $data.form.errors.quantity
        }, null, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          vue.createVNode("form", {
            onKeydown: vue.withKeys($options.save, ["enter"]),
            class: "w-full grid gap-4"
          }, [
            vue.createVNode("div", { class: "form-group" }, [
              vue.createVNode(_component_jet_label, { for: "inventory_id" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Inventory ID")
                ]),
                _: 1
              }),
              vue.createVNode(_component_jet_input, {
                class: "w-full",
                id: "inventory_id",
                type: "text",
                modelValue: $data.form.inventory,
                "onUpdate:modelValue": ($event) => $data.form.inventory = $event
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              vue.createVNode(_component_jet_input_error, {
                class: "mt-2",
                message: $data.form.errors.inventory
              }, null, 8, ["message"])
            ]),
            vue.createVNode("div", { class: "form-group" }, [
              vue.createVNode(_component_jet_label, { for: "quantity" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Quantity to Print")
                ]),
                _: 1
              }),
              vue.createVNode(_component_jet_input, {
                class: "w-full",
                id: "quantity",
                type: "number",
                modelValue: $data.form.quantity,
                "onUpdate:modelValue": ($event) => $data.form.quantity = $event
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              vue.createVNode(_component_jet_input_error, {
                class: "mt-2",
                message: $data.form.errors.quantity
              }, null, 8, ["message"])
            ])
          ], 40, ["onKeydown"])
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex items-center justify-between"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: "mr-4",
          onClick: ($event) => $data.addingToQueue = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cancel`);
            } else {
              return [
                vue.createTextVNode("Cancel")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          onClick: $options.save
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Add`);
            } else {
              return [
                vue.createTextVNode("Add")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex items-center justify-between" }, [
            vue.createVNode(_component_jet_button, {
              class: "mr-4",
              onClick: ($event) => $data.addingToQueue = false
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Cancel")
              ]),
              _: 1
            }, 8, ["onClick"]),
            vue.createVNode(_component_jet_button, {
              type: "submit",
              onClick: $options.save
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Add")
              ]),
              _: 1
            }, 8, ["onClick"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$D = _sfc_main$D.setup;
_sfc_main$D.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/ReprintQueue/Components/AddToQueue.vue");
  return _sfc_setup$D ? _sfc_setup$D(props, ctx) : void 0;
};
var AddToQueue = /* @__PURE__ */ _export_sfc(_sfc_main$D, [["ssrRender", _sfc_ssrRender$B]]);
var AddToQueue$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": AddToQueue
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$C = {
  components: {
    QueueLayout,
    ButtonLink,
    HeadingOne,
    QueueView,
    AddToQueue
  },
  props: {
    queue: {
      type: [Object, Array]
    },
    filters: {
      type: Object
    }
  }
};
function _sfc_ssrRender$A(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_QueueLayout = vue.resolveComponent("QueueLayout");
  const _component_heading_one = vue.resolveComponent("heading-one");
  const _component_add_to_queue = vue.resolveComponent("add-to-queue");
  const _component_QueueView = vue.resolveComponent("QueueView");
  _push(serverRenderer.ssrRenderComponent(_component_QueueLayout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between items-center w-full pb-9 px-2 lg:px-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_heading_one, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Inventory to Print`);
            } else {
              return [
                vue.createTextVNode("Inventory to Print")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_add_to_queue, null, null, _parent2, _scopeId));
        _push2(`</div><div class="grid gap-6 lg:gap-8"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_QueueView, {
          filters: $props.filters,
          inventory: $props.queue
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex justify-between items-center w-full pb-9 px-2 lg:px-4" }, [
            vue.createVNode(_component_heading_one, null, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Inventory to Print")
              ]),
              _: 1
            }),
            vue.createVNode(_component_add_to_queue)
          ]),
          vue.createVNode("div", { class: "grid gap-6 lg:gap-8" }, [
            vue.createVNode(_component_QueueView, {
              filters: $props.filters,
              inventory: $props.queue
            }, null, 8, ["filters", "inventory"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$C = _sfc_main$C.setup;
_sfc_main$C.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/ReprintQueue/Index.vue");
  return _sfc_setup$C ? _sfc_setup$C(props, ctx) : void 0;
};
var Index$6 = /* @__PURE__ */ _export_sfc(_sfc_main$C, [["ssrRender", _sfc_ssrRender$A]]);
var Index$7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$6
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$B = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput
  },
  data() {
    return {
      form: this.$inertia.form({
        _method: "POST",
        name: ""
      })
    };
  },
  methods: {
    createSize() {
      this.form.post(route("sizes.store"), {
        errorBag: "createSize",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.createSize }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create a Size`);
      } else {
        return [
          vue.createTextVNode("Create a Size")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a size for your products. Products will be able to assigned this size. `);
      } else {
        return [
          vue.createTextVNode(" Create a size for your products. Products will be able to assigned this size. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Size Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "off"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Size Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "off"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Size`);
            } else {
              return [
                vue.createTextVNode("Save Size")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Size")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$B = _sfc_main$B.setup;
_sfc_main$B.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Sizes/CreateSizeForm.vue");
  return _sfc_setup$B ? _sfc_setup$B(props, ctx) : void 0;
};
var CreateSizeForm = /* @__PURE__ */ _export_sfc(_sfc_main$B, [["ssrRender", _sfc_ssrRender$z]]);
var CreateSizeForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateSizeForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$A = {
  components: {
    AppLayout,
    MainArea,
    CreateSizeForm,
    BackLink
  },
  computed: {}
};
function _sfc_ssrRender$y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  const _component_create_size_form = vue.resolveComponent("create-size-form");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: false }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="py-2"${_scopeId2}><div class="sm:pb-4 px-6"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                href: _ctx.route("sizes.index")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Sizes`);
                  } else {
                    return [
                      vue.createTextVNode("Sizes")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
              _push3(serverRenderer.ssrRenderComponent(_component_create_size_form, { class: "max-w-screen-sm" }, null, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                vue.createVNode("div", { class: "py-2" }, [
                  vue.createVNode("div", { class: "sm:pb-4 px-6" }, [
                    vue.createVNode(_component_back_link, {
                      href: _ctx.route("sizes.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Sizes")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ]),
                  vue.createVNode(_component_create_size_form, { class: "max-w-screen-sm" })
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: false }, {
              default: vue.withCtx(() => [
                vue.createVNode("div", { class: "py-2" }, [
                  vue.createVNode("div", { class: "sm:pb-4 px-6" }, [
                    vue.createVNode(_component_back_link, {
                      href: _ctx.route("sizes.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Sizes")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ]),
                  vue.createVNode(_component_create_size_form, { class: "max-w-screen-sm" })
                ])
              ]),
              _: 1
            })
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$A = _sfc_main$A.setup;
_sfc_main$A.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Sizes/Create.vue");
  return _sfc_setup$A ? _sfc_setup$A(props, ctx) : void 0;
};
var Create$4 = /* @__PURE__ */ _export_sfc(_sfc_main$A, [["ssrRender", _sfc_ssrRender$y]]);
var Create$5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$4
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$z = {
  props: ["size"],
  components: {
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton,
    DeleteButton
  },
  data() {
    return {
      confirmingSizeDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmSizeDeletion() {
      this.confirmingSizeDeletion = true;
    },
    deleteSize() {
      this.form.delete(route("sizes.destroy", this.size), {
        errorBag: "deleteSize",
        preserveState: false
      });
    }
  }
};
function _sfc_ssrRender$x(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_DeleteButton = vue.resolveComponent("DeleteButton");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  _push(`<!--[-->`);
  _push(serverRenderer.ssrRenderComponent(_component_DeleteButton, {
    onClick: $options.confirmSizeDeletion,
    size: 6
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.confirmingSizeDeletion,
    onClose: ($event) => $data.confirmingSizeDeletion = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Size `);
      } else {
        return [
          vue.createTextVNode(" Delete Size ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you want to delete this size? All products in inventory with this size will be given a null size and all product pricing with this size will be deleted. `);
      } else {
        return [
          vue.createTextVNode(" Are you sure you want to delete this size? All products in inventory with this size will be given a null size and all product pricing with this size will be deleted. ")
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.confirmingSizeDeletion = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.form.processing }],
          onClick: $options.deleteSize,
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Size `);
            } else {
              return [
                vue.createTextVNode(" Delete Size ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.confirmingSizeDeletion = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.form.processing }],
            onClick: $options.deleteSize,
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Delete Size ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$z = _sfc_main$z.setup;
_sfc_main$z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Sizes/DeleteSizeComponent.vue");
  return _sfc_setup$z ? _sfc_setup$z(props, ctx) : void 0;
};
var DeleteSizeComponent = /* @__PURE__ */ _export_sfc(_sfc_main$z, [["ssrRender", _sfc_ssrRender$x]]);
var DeleteSizeComponent$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteSizeComponent
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$y = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    TextAreaInput,
    SelectBox
  },
  props: {
    size: Object
  },
  data() {
    return {
      sizes: this.$page.props.sizes,
      selectedSize: this.$page.props.sizes.find(
        (size) => size.id == this.size.next_size_id
      ),
      form: this.$inertia.form({
        _method: "POST",
        name: this.size.name,
        next_size_id: this.size.next_size_id
      })
    };
  },
  watch: {
    selectedSize(value) {
      this.form.next_size_id = value.id;
      this.updateSize();
    }
  },
  methods: {
    updateSize() {
      this.form.patch(route("sizes.update", this.size), {
        errorBag: "updateSize",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_select_box = vue.resolveComponent("select-box");
  _push(`<!--[--><td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_label, {
    class: "sr-only",
    for: "name",
    value: "Size Name"
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_input, {
    onChange: $options.updateSize,
    id: "name",
    type: "text",
    class: "mt-1 block w-full",
    modelValue: $data.form.name,
    "onUpdate:modelValue": ($event) => $data.form.name = $event,
    required: "",
    autocomplete: "off"
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
    message: $data.form.errors.name,
    class: "mt-2"
  }, null, _parent));
  _push(`</td><td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">`);
  _push(serverRenderer.ssrRenderComponent(_component_select_box, {
    items: $data.sizes,
    showLabel: false,
    selectedItem: $data.selectedSize,
    modelValue: $data.selectedSize,
    "onUpdate:modelValue": ($event) => $data.selectedSize = $event
  }, null, _parent));
  _push(`</td><!--]-->`);
}
const _sfc_setup$y = _sfc_main$y.setup;
_sfc_main$y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Sizes/UpdateSizeForm.vue");
  return _sfc_setup$y ? _sfc_setup$y(props, ctx) : void 0;
};
var UpdateSizeForm = /* @__PURE__ */ _export_sfc(_sfc_main$y, [["ssrRender", _sfc_ssrRender$w]]);
var UpdateSizeForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateSizeForm
}, Symbol.toStringTag, { value: "Module" }));
var SizeList_vue_vue_type_style_index_0_lang = "";
const _sfc_main$x = {
  components: {
    EmptyState,
    UpdateSizeForm,
    draggable: draggable__default["default"],
    DeleteSizeComponent,
    TableH,
    TableD,
    TableTable
  },
  data() {
    return {
      sizes: this.$page.props.sizes,
      drag: false,
      saving: false
    };
  },
  methods: {
    updateSort() {
      clearTimeout(this.saving);
      this.sizes.map((size, index) => {
        size.sort_num = index + 1;
      });
      this.saving = setTimeout(() => this.saveOrderChanges(), 2e3);
    },
    saveOrderChanges() {
      inertia.Inertia.put(route("sizes.updateOrder"), { sizes: this.sizes });
    }
  },
  computed: {
    dragOptions() {
      return {
        animation: 200,
        group: "description",
        disabled: false,
        ghostClass: "ghost"
      };
    }
  }
};
function _sfc_ssrRender$v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_table_table = vue.resolveComponent("table-table");
  const _component_table_h = vue.resolveComponent("table-h");
  const _component_draggable = vue.resolveComponent("draggable");
  const _component_update_size_form = vue.resolveComponent("update-size-form");
  const _component_table_d = vue.resolveComponent("table-d");
  const _component_delete_size_component = vue.resolveComponent("delete-size-component");
  const _component_empty_state = vue.resolveComponent("empty-state");
  if ($data.sizes.length > 0) {
    _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "flex flex-col max-w-screen-sm min-w-max" }, _attrs))}><div class="shadow border-b border-gray-200 sm:rounded-lg">`);
    _push(serverRenderer.ssrRenderComponent(_component_table_table, null, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<thead class="bg-gray-50"${_scopeId}><tr${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_table_h, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Name`);
              } else {
                return [
                  vue.createTextVNode("Name")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_h, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Next Size`);
              } else {
                return [
                  vue.createTextVNode("Next Size")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_h, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Delete`);
              } else {
                return [
                  vue.createTextVNode("Delete")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_h, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Sort`);
              } else {
                return [
                  vue.createTextVNode("Sort")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</tr></thead>`);
          _push2(serverRenderer.ssrRenderComponent(_component_draggable, vue.mergeProps({
            tag: "tbody",
            modelValue: $data.sizes,
            "onUpdate:modelValue": ($event) => $data.sizes = $event,
            handle: ".handle",
            "item-key": "id"
          }, $options.dragOptions, {
            onChange: $options.updateSort,
            class: "divide-y divide-gray-200"
          }), {
            item: vue.withCtx(({ element }, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<tr${_scopeId2}>`);
                _push3(serverRenderer.ssrRenderComponent(_component_update_size_form, { size: element }, null, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, null, {
                  default: vue.withCtx((_2, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(serverRenderer.ssrRenderComponent(_component_delete_size_component, { size: element }, null, _parent4, _scopeId3));
                    } else {
                      return [
                        vue.createVNode(_component_delete_size_component, { size: element }, null, 8, ["size"])
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, { class: "cursor-pointer handle" }, {
                  default: vue.withCtx((_2, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`<svg class="rotate-45 mx-auto w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"${_scopeId3}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"${_scopeId3}></path></svg>`);
                    } else {
                      return [
                        (vue.openBlock(), vue.createBlock("svg", {
                          class: "rotate-45 mx-auto w-4 h-4",
                          fill: "none",
                          stroke: "currentColor",
                          viewBox: "0 0 24 24",
                          xmlns: "http://www.w3.org/2000/svg"
                        }, [
                          vue.createVNode("path", {
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round",
                            "stroke-width": "2",
                            d: "M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"
                          })
                        ]))
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(`</tr>`);
              } else {
                return [
                  vue.createVNode("tr", null, [
                    vue.createVNode(_component_update_size_form, { size: element }, null, 8, ["size"]),
                    vue.createVNode(_component_table_d, null, {
                      default: vue.withCtx(() => [
                        vue.createVNode(_component_delete_size_component, { size: element }, null, 8, ["size"])
                      ]),
                      _: 2
                    }, 1024),
                    vue.createVNode(_component_table_d, { class: "cursor-pointer handle" }, {
                      default: vue.withCtx(() => [
                        (vue.openBlock(), vue.createBlock("svg", {
                          class: "rotate-45 mx-auto w-4 h-4",
                          fill: "none",
                          stroke: "currentColor",
                          viewBox: "0 0 24 24",
                          xmlns: "http://www.w3.org/2000/svg"
                        }, [
                          vue.createVNode("path", {
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round",
                            "stroke-width": "2",
                            d: "M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"
                          })
                        ]))
                      ]),
                      _: 1
                    })
                  ])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          return [
            vue.createVNode("thead", { class: "bg-gray-50" }, [
              vue.createVNode("tr", null, [
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Name")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Next Size")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Delete")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Sort")
                  ]),
                  _: 1
                })
              ])
            ]),
            vue.createVNode(_component_draggable, vue.mergeProps({
              tag: "tbody",
              modelValue: $data.sizes,
              "onUpdate:modelValue": ($event) => $data.sizes = $event,
              handle: ".handle",
              "item-key": "id"
            }, $options.dragOptions, {
              onChange: $options.updateSort,
              class: "divide-y divide-gray-200"
            }), {
              item: vue.withCtx(({ element }) => [
                vue.createVNode("tr", null, [
                  vue.createVNode(_component_update_size_form, { size: element }, null, 8, ["size"]),
                  vue.createVNode(_component_table_d, null, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_delete_size_component, { size: element }, null, 8, ["size"])
                    ]),
                    _: 2
                  }, 1024),
                  vue.createVNode(_component_table_d, { class: "cursor-pointer handle" }, {
                    default: vue.withCtx(() => [
                      (vue.openBlock(), vue.createBlock("svg", {
                        class: "rotate-45 mx-auto w-4 h-4",
                        fill: "none",
                        stroke: "currentColor",
                        viewBox: "0 0 24 24",
                        xmlns: "http://www.w3.org/2000/svg"
                      }, [
                        vue.createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          "stroke-width": "2",
                          d: "M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"
                        })
                      ]))
                    ]),
                    _: 1
                  })
                ])
              ]),
              _: 1
            }, 16, ["modelValue", "onUpdate:modelValue", "onChange"])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div></div>`);
  } else {
    _push(serverRenderer.ssrRenderComponent(_component_empty_state, vue.mergeProps({
      heading: "No Sizes",
      subtitle: "Get started by creating a new product size.",
      "button-text": "New Size",
      href: _ctx.route("sizes.create")
    }, _attrs), null, _parent));
  }
}
const _sfc_setup$x = _sfc_main$x.setup;
_sfc_main$x.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Sizes/SizeList.vue");
  return _sfc_setup$x ? _sfc_setup$x(props, ctx) : void 0;
};
var SizeList = /* @__PURE__ */ _export_sfc(_sfc_main$x, [["ssrRender", _sfc_ssrRender$v]]);
var SizeList$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": SizeList
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$w = {
  components: {
    AppLayout,
    MainArea,
    SizeList,
    ButtonLink
  },
  computed: {}
};
function _sfc_ssrRender$u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_size_list = vue.resolveComponent("size-list");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: false }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="py-2"${_scopeId2}><div class="pb-4 px-6"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_button_link, {
                href: _ctx.route("sizes.create")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`New Size`);
                  } else {
                    return [
                      vue.createTextVNode("New Size")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
              _push3(serverRenderer.ssrRenderComponent(_component_size_list, null, null, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                vue.createVNode("div", { class: "py-2" }, [
                  vue.createVNode("div", { class: "pb-4 px-6" }, [
                    vue.createVNode(_component_button_link, {
                      href: _ctx.route("sizes.create")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("New Size")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ]),
                  vue.createVNode(_component_size_list)
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: false }, {
              default: vue.withCtx(() => [
                vue.createVNode("div", { class: "py-2" }, [
                  vue.createVNode("div", { class: "pb-4 px-6" }, [
                    vue.createVNode(_component_button_link, {
                      href: _ctx.route("sizes.create")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("New Size")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ]),
                  vue.createVNode(_component_size_list)
                ])
              ]),
              _: 1
            })
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$w = _sfc_main$w.setup;
_sfc_main$w.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Sizes/Index.vue");
  return _sfc_setup$w ? _sfc_setup$w(props, ctx) : void 0;
};
var Index$4 = /* @__PURE__ */ _export_sfc(_sfc_main$w, [["ssrRender", _sfc_ssrRender$u]]);
var Index$5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$4
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$v = {
  components: {
    JetSectionTitle: SectionTitle
  }
};
function _sfc_ssrRender$t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "md:grid md:gap-6" }, _attrs))}><div class="mt-5 md:mt-0 md:col-span-2"><div class="px-4 py-5 bg-white sm:p-6 shadow">`);
  _push(serverRenderer.ssrRenderComponent(_component_jet_section_title, { class: "col-span-6" }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "title")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "description", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "description")
        ];
      }
    }),
    _: 3
  }, _parent));
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div></div>`);
}
const _sfc_setup$v = _sfc_main$v.setup;
_sfc_main$v.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Section.vue");
  return _sfc_setup$v ? _sfc_setup$v(props, ctx) : void 0;
};
var JetSection = /* @__PURE__ */ _export_sfc(_sfc_main$v, [["ssrRender", _sfc_ssrRender$t]]);
const _sfc_main$u = {
  __name: "Loader",
  __ssrInlineRender: true,
  props: { loading: Boolean },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      if (__props.loading) {
        _push(`<svg${serverRenderer.ssrRenderAttrs(vue.mergeProps({
          class: "animate-spin -ml-1 mr-3 h-5 w-5 text-white",
          xmlns: "http://www.w3.org/2000/svg",
          fill: "none",
          viewBox: "0 0 24 24"
        }, _attrs))}><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
};
const _sfc_setup$u = _sfc_main$u.setup;
_sfc_main$u.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Loader.vue");
  return _sfc_setup$u ? _sfc_setup$u(props, ctx) : void 0;
};
const _sfc_main$t = {
  __name: "ConnectAccounting",
  __ssrInlineRender: true,
  props: ["team"],
  setup(__props) {
    const props = __props;
    const isLoading = vue.ref(false);
    const isDisconnectModalOpen = vue.ref(false);
    const connected = vue.ref(!!props.team.codat_company_id);
    function connect() {
      isLoading.value = true;
      const { team } = props;
      axios__default["default"].post(route("teams.connect", { team })).then(({ data: { redirectUrl } }) => {
        let url = new URL(redirectUrl);
        url.searchParams.append("teamId", team.id);
        window.location.href = url;
        connected.value = true;
      }).finally(() => {
        isLoading.value = false;
      });
    }
    function disconnect() {
      isLoading.value = true;
      isDisconnectModalOpen.value = false;
      const { team } = props;
      axios__default["default"].delete(route("teams.disconnect", { team })).then(() => {
        connected.value = false;
      }).finally(() => {
        isLoading.value = false;
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      _push(serverRenderer.ssrRenderComponent(JetSection, null, {
        title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Connect your accounting system `);
          } else {
            return [
              vue.createTextVNode(" Connect your accounting system ")
            ];
          }
        }),
        description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Sync your orders and quotes with your accounting platform of choice, including QuickBooks Online or QuickBooks Desktop. `);
          } else {
            return [
              vue.createTextVNode(" Sync your orders and quotes with your accounting platform of choice, including QuickBooks Online or QuickBooks Desktop. ")
            ];
          }
        }),
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (!connected.value) {
              _push2(serverRenderer.ssrRenderComponent(JetButton, {
                type: "button",
                disabled: isLoading.value,
                onClick: connect
              }, {
                default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_sfc_main$u, { loading: isLoading.value }, null, _parent3, _scopeId2));
                    _push3(` Connect now `);
                  } else {
                    return [
                      vue.createVNode(_sfc_main$u, { loading: isLoading.value }, null, 8, ["loading"]),
                      vue.createTextVNode(" Connect now ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            if (connected.value) {
              _push2(serverRenderer.ssrRenderComponent(JetButton, {
                type: "button",
                disabled: isLoading.value,
                onClick: ($event) => isDisconnectModalOpen.value = true
              }, {
                default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_sfc_main$u, { loading: isLoading.value }, null, _parent3, _scopeId2));
                    _push3(` Disconnect now `);
                  } else {
                    return [
                      vue.createVNode(_sfc_main$u, { loading: isLoading.value }, null, 8, ["loading"]),
                      vue.createTextVNode(" Disconnect now ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
          } else {
            return [
              !connected.value ? (vue.openBlock(), vue.createBlock(JetButton, {
                key: 0,
                type: "button",
                disabled: isLoading.value,
                onClick: connect
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_sfc_main$u, { loading: isLoading.value }, null, 8, ["loading"]),
                  vue.createTextVNode(" Connect now ")
                ]),
                _: 1
              }, 8, ["disabled"])) : vue.createCommentVNode("", true),
              connected.value ? (vue.openBlock(), vue.createBlock(JetButton, {
                key: 1,
                type: "button",
                disabled: isLoading.value,
                onClick: ($event) => isDisconnectModalOpen.value = true
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_sfc_main$u, { loading: isLoading.value }, null, 8, ["loading"]),
                  vue.createTextVNode(" Disconnect now ")
                ]),
                _: 1
              }, 8, ["disabled", "onClick"])) : vue.createCommentVNode("", true)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(JetConfirmationModal, {
        show: isDisconnectModalOpen.value,
        onClose: ($event) => isDisconnectModalOpen.value = false
      }, {
        title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Disconnect `);
          } else {
            return [
              vue.createTextVNode(" Disconnect ")
            ];
          }
        }),
        content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Are you sure you want to disconnect accounting? `);
          } else {
            return [
              vue.createTextVNode(" Are you sure you want to disconnect accounting? ")
            ];
          }
        }),
        footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(JetSecondaryButton, {
              onClick: ($event) => isDisconnectModalOpen.value = false
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Cancel `);
                } else {
                  return [
                    vue.createTextVNode(" Cancel ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(JetDangerButton, {
              class: "ml-2",
              onClick: disconnect
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Disconnect `);
                } else {
                  return [
                    vue.createTextVNode(" Disconnect ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(JetSecondaryButton, {
                onClick: ($event) => isDisconnectModalOpen.value = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(JetDangerButton, {
                class: "ml-2",
                onClick: disconnect
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Disconnect ")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$t = _sfc_main$t.setup;
_sfc_main$t.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/ConnectAccounting.vue");
  return _sfc_setup$t ? _sfc_setup$t(props, ctx) : void 0;
};
var ConnectAccounting = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": _sfc_main$t
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$s = {
  components: {
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel
  },
  data() {
    return {
      form: this.$inertia.form({
        name: ""
      })
    };
  },
  methods: {
    createTeam() {
      this.form.post(route("teams.store"), {
        errorBag: "createTeam",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.createTeam }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Team Details `);
      } else {
        return [
          vue.createTextVNode(" Team Details ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a new team to collaborate with others on projects. `);
      } else {
        return [
          vue.createTextVNode(" Create a new team to collaborate with others on projects. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { value: "Primary Account Manager" }, null, _parent2, _scopeId));
        _push2(`<div class="flex items-center mt-2"${_scopeId}><img class="w-12 h-12 rounded-full object-cover"${serverRenderer.ssrRenderAttr("src", _ctx.$page.props.user.profile_photo_url)}${serverRenderer.ssrRenderAttr("alt", _ctx.$page.props.user.name)}${_scopeId}><div class="ml-4 leading-tight"${_scopeId}><div${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.$page.props.user.name)}</div><div class="text-gray-700 text-sm"${_scopeId}>${serverRenderer.ssrInterpolate(_ctx.$page.props.user.email)}</div></div></div></div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Company Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode(_component_jet_label, { value: "Primary Account Manager" }),
            vue.createVNode("div", { class: "flex items-center mt-2" }, [
              vue.createVNode("img", {
                class: "w-12 h-12 rounded-full object-cover",
                src: _ctx.$page.props.user.profile_photo_url,
                alt: _ctx.$page.props.user.name
              }, null, 8, ["src", "alt"]),
              vue.createVNode("div", { class: "ml-4 leading-tight" }, [
                vue.createVNode("div", null, vue.toDisplayString(_ctx.$page.props.user.name), 1),
                vue.createVNode("div", { class: "text-gray-700 text-sm" }, vue.toDisplayString(_ctx.$page.props.user.email), 1)
              ])
            ])
          ]),
          vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            vue.createVNode(_component_jet_label, {
              for: "name",
              value: "Company Name"
            }),
            vue.createVNode(_component_jet_input, {
              id: "name",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: $data.form.name,
              "onUpdate:modelValue": ($event) => $data.form.name = $event,
              autofocus: ""
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            vue.createVNode(_component_jet_input_error, {
              message: $data.form.errors.name,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Create `);
            } else {
              return [
                vue.createTextVNode(" Create ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Create ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$s = _sfc_main$s.setup;
_sfc_main$s.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/CreateTeamForm.vue");
  return _sfc_setup$s ? _sfc_setup$s(props, ctx) : void 0;
};
var CreateTeamForm = /* @__PURE__ */ _export_sfc(_sfc_main$s, [["ssrRender", _sfc_ssrRender$s]]);
var CreateTeamForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateTeamForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$r = {
  components: {
    AppLayout,
    CreateTeamForm
  }
};
function _sfc_ssrRender$r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_create_team_form = vue.resolveComponent("create-team-form");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> Create Team </h2>`);
      } else {
        return [
          vue.createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " Create Team ")
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="h-full overflow-y-auto max-w-7xl py-10 sm:px-6 lg:px-8"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_create_team_form, null, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", null, [
            vue.createVNode("div", { class: "h-full overflow-y-auto max-w-7xl py-10 sm:px-6 lg:px-8" }, [
              vue.createVNode(_component_create_team_form)
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$r = _sfc_main$r.setup;
_sfc_main$r.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/Create.vue");
  return _sfc_setup$r ? _sfc_setup$r(props, ctx) : void 0;
};
var Create$2 = /* @__PURE__ */ _export_sfc(_sfc_main$r, [["ssrRender", _sfc_ssrRender$r]]);
var Create$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create$2
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$q = {
  props: ["team"],
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingTeamDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmTeamDeletion() {
      this.confirmingTeamDeletion = true;
    },
    deleteTeam() {
      this.form.delete(route("teams.destroy", this.team), {
        errorBag: "deleteTeam"
      });
    }
  }
};
function _sfc_ssrRender$q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Team `);
      } else {
        return [
          vue.createTextVNode(" Delete Team ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Permanently delete this team. `);
      } else {
        return [
          vue.createTextVNode(" Permanently delete this team. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a team is deleted, all of its resources and data will be permanently deleted. Before deleting this team, please download any data or information regarding this team that you wish to retain. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmTeamDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Team `);
            } else {
              return [
                vue.createTextVNode(" Delete Team ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingTeamDeletion,
          onClose: ($event) => $data.confirmingTeamDeletion = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Team `);
            } else {
              return [
                vue.createTextVNode(" Delete Team ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this team? Once a team is deleted, all of its resources and data will be permanently deleted. `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete this team? Once a team is deleted, all of its resources and data will be permanently deleted. ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingTeamDeletion = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteTeam,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Team `);
                  } else {
                    return [
                      vue.createTextVNode(" Delete Team ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingTeamDeletion = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.deleteTeam,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Delete Team ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a team is deleted, all of its resources and data will be permanently deleted. Before deleting this team, please download any data or information regarding this team that you wish to retain. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmTeamDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete Team ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingTeamDeletion,
            onClose: ($event) => $data.confirmingTeamDeletion = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Delete Team ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete this team? Once a team is deleted, all of its resources and data will be permanently deleted. ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingTeamDeletion = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteTeam,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Delete Team ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$q = _sfc_main$q.setup;
_sfc_main$q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/DeleteTeamForm.vue");
  return _sfc_setup$q ? _sfc_setup$q(props, ctx) : void 0;
};
var DeleteTeamForm = /* @__PURE__ */ _export_sfc(_sfc_main$q, [["ssrRender", _sfc_ssrRender$q]]);
var DeleteTeamForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteTeamForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$p = {
  components: {
    JetActionMessage,
    JetActionSection,
    JetButton,
    JetConfirmationModal,
    JetDangerButton,
    JetDialogModal,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    JetSectionBorder
  },
  props: ["team", "availableRoles", "userPermissions"],
  data() {
    return {
      addTeamMemberForm: this.$inertia.form({
        email: "",
        role: null
      }),
      updateRoleForm: this.$inertia.form({
        role: null
      }),
      leaveTeamForm: this.$inertia.form(),
      removeTeamMemberForm: this.$inertia.form(),
      currentlyManagingRole: false,
      managingRoleFor: null,
      confirmingLeavingTeam: false,
      teamMemberBeingRemoved: null
    };
  },
  methods: {
    addTeamMember() {
      this.addTeamMemberForm.post(
        route("team-members.store", this.team),
        {
          errorBag: "addTeamMember",
          preserveScroll: true,
          onSuccess: () => this.addTeamMemberForm.reset()
        }
      );
    },
    cancelTeamInvitation(invitation) {
      this.$inertia.delete(
        route("team-invitations.destroy", invitation),
        {
          preserveScroll: true
        }
      );
    },
    manageRole(teamMember) {
      this.managingRoleFor = teamMember;
      this.updateRoleForm.role = teamMember.membership.role;
      this.currentlyManagingRole = true;
    },
    updateRole() {
      this.updateRoleForm.put(
        route("team-members.update", [this.team, this.managingRoleFor]),
        {
          preserveScroll: true,
          onSuccess: () => this.currentlyManagingRole = false
        }
      );
    },
    confirmLeavingTeam() {
      this.confirmingLeavingTeam = true;
    },
    leaveTeam() {
      this.leaveTeamForm.delete(
        route("team-members.destroy", [
          this.team,
          this.$page.props.user
        ])
      );
    },
    confirmTeamMemberRemoval(teamMember) {
      this.teamMemberBeingRemoved = teamMember;
    },
    removeTeamMember() {
      this.removeTeamMemberForm.delete(
        route("team-members.destroy", [
          this.team,
          this.teamMemberBeingRemoved
        ]),
        {
          errorBag: "removeTeamMember",
          preserveScroll: true,
          preserveState: true,
          onSuccess: () => this.teamMemberBeingRemoved = null
        }
      );
    },
    displayableRole(role) {
      return this.availableRoles.find((r2) => r2.key === role).name;
    }
  }
};
function _sfc_ssrRender$p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_border = vue.resolveComponent("jet-section-border");
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_action_message = vue.resolveComponent("jet-action-message");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_dialog_modal = vue.resolveComponent("jet-dialog-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  _push(`<div${serverRenderer.ssrRenderAttrs(_attrs)}>`);
  if ($props.userPermissions.canAddTeamMembers) {
    _push(`<div>`);
    _push(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, { onSubmitted: $options.addTeamMember }, {
      title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Add Team Member `);
        } else {
          return [
            vue.createTextVNode(" Add Team Member ")
          ];
        }
      }),
      description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Add a new team member to your account, allowing them to collaborate with you. `);
        } else {
          return [
            vue.createTextVNode(" Add a new team member to your account, allowing them to collaborate with you. ")
          ];
        }
      }),
      form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="col-span-6"${_scopeId}><div class="max-w-xl text-sm text-gray-600"${_scopeId}> Please provide the email address of the person you would like to add to this account. </div></div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "email",
            value: "Email"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "email",
            type: "email",
            class: "mt-1 block w-full",
            modelValue: $data.addTeamMemberForm.email,
            "onUpdate:modelValue": ($event) => $data.addTeamMemberForm.email = $event
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.addTeamMemberForm.errors.email,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
          if ($props.availableRoles.length > 0) {
            _push2(`<div class="col-span-6 lg:col-span-4"${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
              for: "roles",
              value: "Role"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
              message: $data.addTeamMemberForm.errors.role,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`<div class="relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer"${_scopeId}><!--[-->`);
            serverRenderer.ssrRenderList($props.availableRoles, (role, i2) => {
              _push2(`<button type="button" class="${serverRenderer.ssrRenderClass([{
                "border-t border-gray-200 rounded-t-none": i2 > 0,
                "rounded-b-none": i2 != Object.keys($props.availableRoles).length - 1
              }, "relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200"])}"${_scopeId}><div class="${serverRenderer.ssrRenderClass({
                "opacity-50": $data.addTeamMemberForm.role && $data.addTeamMemberForm.role != role.key
              })}"${_scopeId}><div class="flex items-center"${_scopeId}><div class="${serverRenderer.ssrRenderClass([{
                "font-semibold": $data.addTeamMemberForm.role == role.key
              }, "text-sm text-gray-600"])}"${_scopeId}>${serverRenderer.ssrInterpolate(role.name)}</div>`);
              if ($data.addTeamMemberForm.role == role.key) {
                _push2(`<svg class="ml-2 h-5 w-5 text-green-400" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="currentColor" viewBox="0 0 24 24"${_scopeId}><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId}></path></svg>`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</div><div class="mt-2 text-xs text-gray-600"${_scopeId}>${serverRenderer.ssrInterpolate(role.description)}</div></div></button>`);
            });
            _push2(`<!--]--></div></div>`);
          } else {
            _push2(`<!---->`);
          }
        } else {
          return [
            vue.createVNode("div", { class: "col-span-6" }, [
              vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Please provide the email address of the person you would like to add to this account. ")
            ]),
            vue.createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
              vue.createVNode(_component_jet_label, {
                for: "email",
                value: "Email"
              }),
              vue.createVNode(_component_jet_input, {
                id: "email",
                type: "email",
                class: "mt-1 block w-full",
                modelValue: $data.addTeamMemberForm.email,
                "onUpdate:modelValue": ($event) => $data.addTeamMemberForm.email = $event
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.addTeamMemberForm.errors.email,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            $props.availableRoles.length > 0 ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "col-span-6 lg:col-span-4"
            }, [
              vue.createVNode(_component_jet_label, {
                for: "roles",
                value: "Role"
              }),
              vue.createVNode(_component_jet_input_error, {
                message: $data.addTeamMemberForm.errors.role,
                class: "mt-2"
              }, null, 8, ["message"]),
              vue.createVNode("div", { class: "relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer" }, [
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.availableRoles, (role, i2) => {
                  return vue.openBlock(), vue.createBlock("button", {
                    type: "button",
                    class: ["relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200", {
                      "border-t border-gray-200 rounded-t-none": i2 > 0,
                      "rounded-b-none": i2 != Object.keys($props.availableRoles).length - 1
                    }],
                    onClick: ($event) => $data.addTeamMemberForm.role = role.key,
                    key: role.key
                  }, [
                    vue.createVNode("div", {
                      class: {
                        "opacity-50": $data.addTeamMemberForm.role && $data.addTeamMemberForm.role != role.key
                      }
                    }, [
                      vue.createVNode("div", { class: "flex items-center" }, [
                        vue.createVNode("div", {
                          class: ["text-sm text-gray-600", {
                            "font-semibold": $data.addTeamMemberForm.role == role.key
                          }]
                        }, vue.toDisplayString(role.name), 3),
                        $data.addTeamMemberForm.role == role.key ? (vue.openBlock(), vue.createBlock("svg", {
                          key: 0,
                          class: "ml-2 h-5 w-5 text-green-400",
                          fill: "none",
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          "stroke-width": "2",
                          stroke: "currentColor",
                          viewBox: "0 0 24 24"
                        }, [
                          vue.createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                        ])) : vue.createCommentVNode("", true)
                      ]),
                      vue.createVNode("div", { class: "mt-2 text-xs text-gray-600" }, vue.toDisplayString(role.description), 1)
                    ], 2)
                  ], 10, ["onClick"]);
                }), 128))
              ])
            ])) : vue.createCommentVNode("", true)
          ];
        }
      }),
      actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_action_message, {
            on: $data.addTeamMemberForm.recentlySuccessful,
            class: "mr-3"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Added. `);
              } else {
                return [
                  vue.createTextVNode(" Added. ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
            class: { "opacity-25": $data.addTeamMemberForm.processing },
            disabled: $data.addTeamMemberForm.processing
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Add `);
              } else {
                return [
                  vue.createTextVNode(" Add ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          return [
            vue.createVNode(_component_jet_action_message, {
              on: $data.addTeamMemberForm.recentlySuccessful,
              class: "mr-3"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Added. ")
              ]),
              _: 1
            }, 8, ["on"]),
            vue.createVNode(_component_jet_button, {
              class: { "opacity-25": $data.addTeamMemberForm.processing },
              disabled: $data.addTeamMemberForm.processing
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Add ")
              ]),
              _: 1
            }, 8, ["class", "disabled"])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  if ($props.team.team_invitations.length > 0 && $props.userPermissions.canAddTeamMembers) {
    _push(`<div>`);
    _push(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, { class: "mt-10 sm:mt-0" }, {
      title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Pending Team Invitations `);
        } else {
          return [
            vue.createTextVNode(" Pending Team Invitations ")
          ];
        }
      }),
      description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` These people have been invited to your team and have been sent an invitation email. They may join the team by accepting the email invitation. `);
        } else {
          return [
            vue.createTextVNode(" These people have been invited to your team and have been sent an invitation email. They may join the team by accepting the email invitation. ")
          ];
        }
      }),
      content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="space-y-6"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList($props.team.team_invitations, (invitation) => {
            _push2(`<div class="flex items-center justify-between"${_scopeId}><div class="text-gray-600"${_scopeId}>${serverRenderer.ssrInterpolate(invitation.email)}</div><div class="flex items-center"${_scopeId}>`);
            if ($props.userPermissions.canRemoveTeamMembers) {
              _push2(`<button class="cursor-pointer ml-6 text-sm text-red-500 focus:outline-none"${_scopeId}> Cancel </button>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div>`);
          });
          _push2(`<!--]--></div>`);
        } else {
          return [
            vue.createVNode("div", { class: "space-y-6" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.team.team_invitations, (invitation) => {
                return vue.openBlock(), vue.createBlock("div", {
                  class: "flex items-center justify-between",
                  key: invitation.id
                }, [
                  vue.createVNode("div", { class: "text-gray-600" }, vue.toDisplayString(invitation.email), 1),
                  vue.createVNode("div", { class: "flex items-center" }, [
                    $props.userPermissions.canRemoveTeamMembers ? (vue.openBlock(), vue.createBlock("button", {
                      key: 0,
                      class: "cursor-pointer ml-6 text-sm text-red-500 focus:outline-none",
                      onClick: ($event) => $options.cancelTeamInvitation(invitation)
                    }, " Cancel ", 8, ["onClick"])) : vue.createCommentVNode("", true)
                  ])
                ]);
              }), 128))
            ])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  if ($props.team.users.length > 0) {
    _push(`<div>`);
    _push(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent));
    _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, { class: "mt-10 sm:mt-0" }, {
      title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Company Team Members `);
        } else {
          return [
            vue.createTextVNode(" Company Team Members ")
          ];
        }
      }),
      description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` All of the people that are part of this team. `);
        } else {
          return [
            vue.createTextVNode(" All of the people that are part of this team. ")
          ];
        }
      }),
      content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="space-y-6"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList($props.team.users, (user) => {
            _push2(`<div class="flex items-center justify-between"${_scopeId}><div class="flex items-center"${_scopeId}><img class="w-8 h-8 rounded-full"${serverRenderer.ssrRenderAttr("src", user.profile_photo_url)}${serverRenderer.ssrRenderAttr("alt", user.name)}${_scopeId}><div class="ml-4"${_scopeId}>${serverRenderer.ssrInterpolate(user.name)}</div></div><div class="flex items-center"${_scopeId}>`);
            if ($props.userPermissions.canAddTeamMembers && $props.availableRoles.length) {
              _push2(`<button class="ml-2 text-sm text-gray-400 underline"${_scopeId}>${serverRenderer.ssrInterpolate($options.displayableRole(user.membership.role))}</button>`);
            } else if ($props.availableRoles.length) {
              _push2(`<div class="ml-2 text-sm text-gray-400"${_scopeId}>${serverRenderer.ssrInterpolate($options.displayableRole(user.membership.role))}</div>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.$page.props.user.id === user.id) {
              _push2(`<button class="cursor-pointer ml-6 text-sm text-red-500"${_scopeId}> Leave </button>`);
            } else {
              _push2(`<!---->`);
            }
            if ($props.userPermissions.canRemoveTeamMembers) {
              _push2(`<button class="cursor-pointer ml-6 text-sm text-red-500"${_scopeId}> Remove </button>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div>`);
          });
          _push2(`<!--]--></div>`);
        } else {
          return [
            vue.createVNode("div", { class: "space-y-6" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.team.users, (user) => {
                return vue.openBlock(), vue.createBlock("div", {
                  class: "flex items-center justify-between",
                  key: user.id
                }, [
                  vue.createVNode("div", { class: "flex items-center" }, [
                    vue.createVNode("img", {
                      class: "w-8 h-8 rounded-full",
                      src: user.profile_photo_url,
                      alt: user.name
                    }, null, 8, ["src", "alt"]),
                    vue.createVNode("div", { class: "ml-4" }, vue.toDisplayString(user.name), 1)
                  ]),
                  vue.createVNode("div", { class: "flex items-center" }, [
                    $props.userPermissions.canAddTeamMembers && $props.availableRoles.length ? (vue.openBlock(), vue.createBlock("button", {
                      key: 0,
                      class: "ml-2 text-sm text-gray-400 underline",
                      onClick: ($event) => $options.manageRole(user)
                    }, vue.toDisplayString($options.displayableRole(user.membership.role)), 9, ["onClick"])) : $props.availableRoles.length ? (vue.openBlock(), vue.createBlock("div", {
                      key: 1,
                      class: "ml-2 text-sm text-gray-400"
                    }, vue.toDisplayString($options.displayableRole(user.membership.role)), 1)) : vue.createCommentVNode("", true),
                    _ctx.$page.props.user.id === user.id ? (vue.openBlock(), vue.createBlock("button", {
                      key: 2,
                      class: "cursor-pointer ml-6 text-sm text-red-500",
                      onClick: $options.confirmLeavingTeam
                    }, " Leave ", 8, ["onClick"])) : vue.createCommentVNode("", true),
                    $props.userPermissions.canRemoveTeamMembers ? (vue.openBlock(), vue.createBlock("button", {
                      key: 3,
                      class: "cursor-pointer ml-6 text-sm text-red-500",
                      onClick: ($event) => $options.confirmTeamMemberRemoval(user)
                    }, " Remove ", 8, ["onClick"])) : vue.createCommentVNode("", true)
                  ])
                ]);
              }), 128))
            ])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(serverRenderer.ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.currentlyManagingRole,
    onClose: ($event) => $data.currentlyManagingRole = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Manage Role `);
      } else {
        return [
          vue.createTextVNode(" Manage Role ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($data.managingRoleFor) {
          _push2(`<div${_scopeId}><div class="relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer"${_scopeId}><!--[-->`);
          serverRenderer.ssrRenderList($props.availableRoles, (role, i2) => {
            _push2(`<button type="button" class="${serverRenderer.ssrRenderClass([{
              "border-t border-gray-200 rounded-t-none": i2 > 0,
              "rounded-b-none": i2 !== Object.keys($props.availableRoles).length - 1
            }, "relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200"])}"${_scopeId}><div class="${serverRenderer.ssrRenderClass({
              "opacity-50": $data.updateRoleForm.role && $data.updateRoleForm.role !== role.key
            })}"${_scopeId}><div class="flex items-center"${_scopeId}><div class="${serverRenderer.ssrRenderClass([{
              "font-semibold": $data.updateRoleForm.role === role.key
            }, "text-sm text-gray-600"])}"${_scopeId}>${serverRenderer.ssrInterpolate(role.name)}</div>`);
            if ($data.updateRoleForm.role === role.key) {
              _push2(`<svg class="ml-2 h-5 w-5 text-green-400" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="currentColor" viewBox="0 0 24 24"${_scopeId}><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId}></path></svg>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div><div class="mt-2 text-xs text-gray-600"${_scopeId}>${serverRenderer.ssrInterpolate(role.description)}</div></div></button>`);
          });
          _push2(`<!--]--></div></div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          $data.managingRoleFor ? (vue.openBlock(), vue.createBlock("div", { key: 0 }, [
            vue.createVNode("div", { class: "relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.availableRoles, (role, i2) => {
                return vue.openBlock(), vue.createBlock("button", {
                  type: "button",
                  class: ["relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200", {
                    "border-t border-gray-200 rounded-t-none": i2 > 0,
                    "rounded-b-none": i2 !== Object.keys($props.availableRoles).length - 1
                  }],
                  onClick: ($event) => $data.updateRoleForm.role = role.key,
                  key: role.key
                }, [
                  vue.createVNode("div", {
                    class: {
                      "opacity-50": $data.updateRoleForm.role && $data.updateRoleForm.role !== role.key
                    }
                  }, [
                    vue.createVNode("div", { class: "flex items-center" }, [
                      vue.createVNode("div", {
                        class: ["text-sm text-gray-600", {
                          "font-semibold": $data.updateRoleForm.role === role.key
                        }]
                      }, vue.toDisplayString(role.name), 3),
                      $data.updateRoleForm.role === role.key ? (vue.openBlock(), vue.createBlock("svg", {
                        key: 0,
                        class: "ml-2 h-5 w-5 text-green-400",
                        fill: "none",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round",
                        "stroke-width": "2",
                        stroke: "currentColor",
                        viewBox: "0 0 24 24"
                      }, [
                        vue.createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                      ])) : vue.createCommentVNode("", true)
                    ]),
                    vue.createVNode("div", { class: "mt-2 text-xs text-gray-600" }, vue.toDisplayString(role.description), 1)
                  ], 2)
                ], 10, ["onClick"]);
              }), 128))
            ])
          ])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.currentlyManagingRole = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          class: ["ml-2", { "opacity-25": $data.updateRoleForm.processing }],
          onClick: $options.updateRole,
          disabled: $data.updateRoleForm.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                vue.createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.currentlyManagingRole = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_button, {
            class: ["ml-2", { "opacity-25": $data.updateRoleForm.processing }],
            onClick: $options.updateRole,
            disabled: $data.updateRoleForm.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.confirmingLeavingTeam,
    onClose: ($event) => $data.confirmingLeavingTeam = false
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Leave Team `);
      } else {
        return [
          vue.createTextVNode(" Leave Team ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you would like to leave this team? `);
      } else {
        return [
          vue.createTextVNode(" Are you sure you would like to leave this team? ")
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.confirmingLeavingTeam = false
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.leaveTeamForm.processing }],
          onClick: $options.leaveTeam,
          disabled: $data.leaveTeamForm.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Leave `);
            } else {
              return [
                vue.createTextVNode(" Leave ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.confirmingLeavingTeam = false
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.leaveTeamForm.processing }],
            onClick: $options.leaveTeam,
            disabled: $data.leaveTeamForm.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Leave ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.teamMemberBeingRemoved,
    onClose: ($event) => $data.teamMemberBeingRemoved = null
  }, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Remove Company Team Member `);
      } else {
        return [
          vue.createTextVNode(" Remove Company Team Member ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you would like to remove this person from the team? `);
      } else {
        return [
          vue.createTextVNode(" Are you sure you would like to remove this person from the team? ")
        ];
      }
    }),
    footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.teamMemberBeingRemoved = null
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                vue.createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.removeTeamMemberForm.processing }],
          onClick: $options.removeTeamMember,
          disabled: $data.removeTeamMemberForm.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Remove `);
            } else {
              return [
                vue.createTextVNode(" Remove ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.teamMemberBeingRemoved = null
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.removeTeamMemberForm.processing }],
            onClick: $options.removeTeamMember,
            disabled: $data.removeTeamMemberForm.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(" Remove ")
            ]),
            _: 1
          }, 8, ["onClick", "class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$p = _sfc_main$p.setup;
_sfc_main$p.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/TeamMemberManager.vue");
  return _sfc_setup$p ? _sfc_setup$p(props, ctx) : void 0;
};
var TeamMemberManager = /* @__PURE__ */ _export_sfc(_sfc_main$p, [["ssrRender", _sfc_ssrRender$p]]);
var TeamMemberManager$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": TeamMemberManager
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$o = {};
function _sfc_ssrRender$o(_ctx, _push, _parent, _attrs) {
  _push(`<h2${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "text-2xl font-bold" }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</h2>`);
}
const _sfc_setup$o = _sfc_main$o.setup;
_sfc_main$o.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Components/Headings/HeadingTwo.vue");
  return _sfc_setup$o ? _sfc_setup$o(props, ctx) : void 0;
};
var HeadingTwo = /* @__PURE__ */ _export_sfc(_sfc_main$o, [["ssrRender", _sfc_ssrRender$o]]);
const _sfc_main$n = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    HeadingTwo
  },
  props: ["team", "permissions"],
  data() {
    return {
      form: this.$inertia.form({
        name: this.team.name,
        website: this.team.website,
        email: this.team.email,
        phone: this.team.phone,
        address_line_1: this.team.address_line_1,
        address_line_2: this.team.address_line_2,
        city: this.team.city,
        state: this.team.state,
        zip: this.team.zip,
        country: this.team.country
      }),
      logoUrl: this.team.logo_url,
      isLogoUploading: false
    };
  },
  methods: {
    updateTeam() {
      this.form.put(route("teams.update", this.team), {
        errorBag: "updateTeam",
        preserveScroll: true
      });
    },
    chooseLogo() {
      this.$refs.logo.click();
    },
    uploadLogo(e2) {
      const config = {
        headers: { "Content-Type": "multipart/form-data" }
      };
      const formData = new FormData();
      formData.append("logo", e2.target.files[0]);
      this.isLogoUploading = true;
      axios__default["default"].post(route("teams.logo", this.team), formData, config).then(({ data }) => {
        this.logoUrl = data.logo_url;
      }).finally(() => {
        this.isLogoUploading = false;
      });
    }
  }
};
function _sfc_ssrRender$n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_jet_action_message = vue.resolveComponent("jet-action-message");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.updateTeam }, _attrs), vue.createSlots({
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Company `);
      } else {
        return [
          vue.createTextVNode(" Company ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update your base company information. `);
      } else {
        return [
          vue.createTextVNode(" Update your base company information. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, { value: "Primary Account Manager" }, null, _parent2, _scopeId));
        _push2(`<div class="flex items-center mt-2"${_scopeId}><input type="file" class="hidden"${_scopeId}><div class="relative h-16"${_scopeId}><img class="h-full object-cover"${serverRenderer.ssrRenderAttr("src", $data.logoUrl)}${serverRenderer.ssrRenderAttr("alt", $props.team.name)}${_scopeId}><button type="button" class="absolute top-0 left-0 inline-flex items-center justify-center w-6 h-6 border border-2 border-gray-400 text-gray-500 transition-colors duration-150 bg-white rounded-full focus:shadow-outline hover:bg-gray-100"${serverRenderer.ssrIncludeBooleanAttr($data.isLogoUploading) ? " disabled" : ""}${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" fill="none" viewBox="0 0 24 24" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.078 4.232l-12.64 12.639-1.438 7.129 7.127-1.438 12.641-12.64-5.69-5.69zm-10.369 14.893l-.85-.85 11.141-11.125.849.849-11.14 11.126zm2.008 2.008l-.85-.85 11.141-11.125.85.85-11.141 11.125zm18.283-15.444l-2.816 2.818-5.691-5.691 2.816-2.816 5.691 5.689z"${_scopeId}></path></svg></button></div><div class="ml-4 leading-tight"${_scopeId}><div${_scopeId}>${serverRenderer.ssrInterpolate($props.team.owner.name)}</div><div class="text-gray-700 text-sm"${_scopeId}>${serverRenderer.ssrInterpolate($props.team.owner.email)}</div></div></div></div><div class="col-span-6 sm:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Company Name*"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          disabled: !$props.permissions.canUpdateTeam
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 grid grid-cols-6 gap-y-2 gap-x-6"${_scopeId}><h3 class="col-span-6 text-lg font-bold"${_scopeId}> Contact Information </h3><div class="col-span-6 sm:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "website",
          value: "Company Website"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "website",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.website,
          "onUpdate:modelValue": ($event) => $data.form.website = $event,
          placeholder: "https://example.com",
          disabled: !$props.permissions.canUpdateTeam
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.website,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Company Email"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "email",
          type: "email",
          class: "mt-1 block w-full",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          required: "",
          placeholder: "yourcompany@email.com",
          disabled: !$props.permissions.canUpdateTeam
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.email,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "phone",
          value: "Company Phone"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "phone",
          type: "text",
          class: "mt-1 block w-full",
          placeholder: "(123) 456-7890",
          modelValue: $data.form.phone,
          "onUpdate:modelValue": ($event) => $data.form.phone = $event,
          disabled: !$props.permissions.canUpdateTeam
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.phone,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="col-span-6 grid grid-cols-6 gap-y-2 gap-x-6"${_scopeId}><h3 class="col-span-6 text-lg font-bold"${_scopeId}>Company Address</h3><div class="col-span-6 sm:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "address_line_1",
          value: "Address Line 1"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "address_line_1",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.address_line_1,
          "onUpdate:modelValue": ($event) => $data.form.address_line_1 = $event,
          placeholder: "123 Main St",
          disabled: !$props.permissions.canUpdateTeam
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.address_line_1,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "address_line_2",
          value: "Address Line 2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "address_line_2",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.address_line_2,
          "onUpdate:modelValue": ($event) => $data.form.address_line_2 = $event,
          disabled: !$props.permissions.canUpdateTeam
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.address_line_2,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "city",
          value: "Company City"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "city",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.city,
          "onUpdate:modelValue": ($event) => $data.form.city = $event,
          placeholder: "New York",
          disabled: !$props.permissions.canUpdateTeam
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.city,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "state",
          value: "Company State"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "state",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.state,
          "onUpdate:modelValue": ($event) => $data.form.state = $event,
          placeholder: "NY",
          disabled: !$props.permissions.canUpdateTeam
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.state,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "zip",
          value: "Company Zip"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "zip",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.zip,
          "onUpdate:modelValue": ($event) => $data.form.zip = $event,
          placeholder: "12345",
          disabled: !$props.permissions.canUpdateTeam
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.zip,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "country",
          value: "Company Country"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "country",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.country,
          "onUpdate:modelValue": ($event) => $data.form.country = $event,
          placeholder: "United States",
          disabled: !$props.permissions.canUpdateTeam
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.country,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode(_component_jet_label, { value: "Primary Account Manager" }),
            vue.createVNode("div", { class: "flex items-center mt-2" }, [
              vue.createVNode("input", {
                type: "file",
                ref: "logo",
                class: "hidden",
                onChange: $options.uploadLogo
              }, null, 40, ["onChange"]),
              vue.createVNode("div", { class: "relative h-16" }, [
                vue.createVNode("img", {
                  class: "h-full object-cover",
                  src: $data.logoUrl,
                  alt: $props.team.name
                }, null, 8, ["src", "alt"]),
                vue.createVNode("button", {
                  type: "button",
                  class: "absolute top-0 left-0 inline-flex items-center justify-center w-6 h-6 border border-2 border-gray-400 text-gray-500 transition-colors duration-150 bg-white rounded-full focus:shadow-outline hover:bg-gray-100",
                  disabled: $data.isLogoUploading,
                  onClick: $options.chooseLogo
                }, [
                  (vue.openBlock(), vue.createBlock("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    class: "h-3 w-3",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    stroke: "currentColor"
                  }, [
                    vue.createVNode("path", {
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round",
                      "stroke-width": "2",
                      d: "M14.078 4.232l-12.64 12.639-1.438 7.129 7.127-1.438 12.641-12.64-5.69-5.69zm-10.369 14.893l-.85-.85 11.141-11.125.849.849-11.14 11.126zm2.008 2.008l-.85-.85 11.141-11.125.85.85-11.141 11.125zm18.283-15.444l-2.816 2.818-5.691-5.691 2.816-2.816 5.691 5.689z"
                    })
                  ]))
                ], 8, ["disabled", "onClick"])
              ]),
              vue.createVNode("div", { class: "ml-4 leading-tight" }, [
                vue.createVNode("div", null, vue.toDisplayString($props.team.owner.name), 1),
                vue.createVNode("div", { class: "text-gray-700 text-sm" }, vue.toDisplayString($props.team.owner.email), 1)
              ])
            ])
          ]),
          vue.createVNode("div", { class: "col-span-6 sm:col-span-3" }, [
            vue.createVNode(_component_jet_label, {
              for: "name",
              value: "Company Name*"
            }),
            vue.createVNode(_component_jet_input, {
              id: "name",
              type: "text",
              class: "mt-1 block w-full",
              modelValue: $data.form.name,
              "onUpdate:modelValue": ($event) => $data.form.name = $event,
              disabled: !$props.permissions.canUpdateTeam
            }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"]),
            vue.createVNode(_component_jet_input_error, {
              message: $data.form.errors.name,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          vue.createVNode("div", { class: "col-span-6 grid grid-cols-6 gap-y-2 gap-x-6" }, [
            vue.createVNode("h3", { class: "col-span-6 text-lg font-bold" }, " Contact Information "),
            vue.createVNode("div", { class: "col-span-6 sm:col-span-3" }, [
              vue.createVNode(_component_jet_label, {
                for: "website",
                value: "Company Website"
              }),
              vue.createVNode(_component_jet_input, {
                id: "website",
                type: "text",
                class: "mt-1 block w-full",
                modelValue: $data.form.website,
                "onUpdate:modelValue": ($event) => $data.form.website = $event,
                placeholder: "https://example.com",
                disabled: !$props.permissions.canUpdateTeam
              }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.form.errors.website,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            vue.createVNode("div", { class: "col-span-6 sm:col-span-3" }, [
              vue.createVNode(_component_jet_label, {
                for: "email",
                value: "Company Email"
              }),
              vue.createVNode(_component_jet_input, {
                id: "email",
                type: "email",
                class: "mt-1 block w-full",
                modelValue: $data.form.email,
                "onUpdate:modelValue": ($event) => $data.form.email = $event,
                required: "",
                placeholder: "yourcompany@email.com",
                disabled: !$props.permissions.canUpdateTeam
              }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.form.errors.email,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            vue.createVNode("div", { class: "col-span-6 sm:col-span-3" }, [
              vue.createVNode(_component_jet_label, {
                for: "phone",
                value: "Company Phone"
              }),
              vue.createVNode(_component_jet_input, {
                id: "phone",
                type: "text",
                class: "mt-1 block w-full",
                placeholder: "(123) 456-7890",
                modelValue: $data.form.phone,
                "onUpdate:modelValue": ($event) => $data.form.phone = $event,
                disabled: !$props.permissions.canUpdateTeam
              }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.form.errors.phone,
                class: "mt-2"
              }, null, 8, ["message"])
            ])
          ]),
          vue.createVNode("div", { class: "col-span-6 grid grid-cols-6 gap-y-2 gap-x-6" }, [
            vue.createVNode("h3", { class: "col-span-6 text-lg font-bold" }, "Company Address"),
            vue.createVNode("div", { class: "col-span-6 sm:col-span-3" }, [
              vue.createVNode(_component_jet_label, {
                for: "address_line_1",
                value: "Address Line 1"
              }),
              vue.createVNode(_component_jet_input, {
                id: "address_line_1",
                type: "text",
                class: "mt-1 block w-full",
                modelValue: $data.form.address_line_1,
                "onUpdate:modelValue": ($event) => $data.form.address_line_1 = $event,
                placeholder: "123 Main St",
                disabled: !$props.permissions.canUpdateTeam
              }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.form.errors.address_line_1,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            vue.createVNode("div", { class: "col-span-6 sm:col-span-3" }, [
              vue.createVNode(_component_jet_label, {
                for: "address_line_2",
                value: "Address Line 2"
              }),
              vue.createVNode(_component_jet_input, {
                id: "address_line_2",
                type: "text",
                class: "mt-1 block w-full",
                modelValue: $data.form.address_line_2,
                "onUpdate:modelValue": ($event) => $data.form.address_line_2 = $event,
                disabled: !$props.permissions.canUpdateTeam
              }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.form.errors.address_line_2,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            vue.createVNode("div", { class: "col-span-6 sm:col-span-3" }, [
              vue.createVNode(_component_jet_label, {
                for: "city",
                value: "Company City"
              }),
              vue.createVNode(_component_jet_input, {
                id: "city",
                type: "text",
                class: "mt-1 block w-full",
                modelValue: $data.form.city,
                "onUpdate:modelValue": ($event) => $data.form.city = $event,
                placeholder: "New York",
                disabled: !$props.permissions.canUpdateTeam
              }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.form.errors.city,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            vue.createVNode("div", { class: "col-span-6 sm:col-span-3" }, [
              vue.createVNode(_component_jet_label, {
                for: "state",
                value: "Company State"
              }),
              vue.createVNode(_component_jet_input, {
                id: "state",
                type: "text",
                class: "mt-1 block w-full",
                modelValue: $data.form.state,
                "onUpdate:modelValue": ($event) => $data.form.state = $event,
                placeholder: "NY",
                disabled: !$props.permissions.canUpdateTeam
              }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.form.errors.state,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            vue.createVNode("div", { class: "col-span-6 sm:col-span-3" }, [
              vue.createVNode(_component_jet_label, {
                for: "zip",
                value: "Company Zip"
              }),
              vue.createVNode(_component_jet_input, {
                id: "zip",
                type: "text",
                class: "mt-1 block w-full",
                modelValue: $data.form.zip,
                "onUpdate:modelValue": ($event) => $data.form.zip = $event,
                placeholder: "12345",
                disabled: !$props.permissions.canUpdateTeam
              }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.form.errors.zip,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            vue.createVNode("div", { class: "col-span-6 sm:col-span-3" }, [
              vue.createVNode(_component_jet_label, {
                for: "country",
                value: "Company Country"
              }),
              vue.createVNode(_component_jet_input, {
                id: "country",
                type: "text",
                class: "mt-1 block w-full",
                modelValue: $data.form.country,
                "onUpdate:modelValue": ($event) => $data.form.country = $event,
                placeholder: "United States",
                disabled: !$props.permissions.canUpdateTeam
              }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"]),
              vue.createVNode(_component_jet_input_error, {
                message: $data.form.errors.country,
                class: "mt-2"
              }, null, 8, ["message"])
            ])
          ])
        ];
      }
    }),
    _: 2
  }, [
    $props.permissions.canUpdateTeam ? {
      name: "actions",
      fn: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(serverRenderer.ssrRenderComponent(_component_jet_action_message, {
            on: $data.form.recentlySuccessful,
            class: "mr-3"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Saved. `);
              } else {
                return [
                  vue.createTextVNode(" Saved. ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Save `);
              } else {
                return [
                  vue.createTextVNode(" Save ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          return [
            vue.createVNode(_component_jet_action_message, {
              on: $data.form.recentlySuccessful,
              class: "mr-3"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Saved. ")
              ]),
              _: 1
            }, 8, ["on"]),
            vue.createVNode(_component_jet_button, {
              class: { "opacity-25": $data.form.processing },
              disabled: $data.form.processing
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Save ")
              ]),
              _: 1
            }, 8, ["class", "disabled"])
          ];
        }
      })
    } : void 0
  ]), _parent));
}
const _sfc_setup$n = _sfc_main$n.setup;
_sfc_main$n.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/UpdateTeamForm.vue");
  return _sfc_setup$n ? _sfc_setup$n(props, ctx) : void 0;
};
var UpdateTeamForm = /* @__PURE__ */ _export_sfc(_sfc_main$n, [["ssrRender", _sfc_ssrRender$n]]);
var UpdateTeamForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateTeamForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$m = {
  props: ["team", "availableRoles", "permissions"],
  components: {
    AppLayout,
    DeleteTeamForm,
    JetSectionBorder,
    TeamMemberManager,
    UpdateTeamForm,
    ConnectAccounting: _sfc_main$t
  }
};
function _sfc_ssrRender$m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_connect_accounting = vue.resolveComponent("connect-accounting");
  const _component_jet_section_border = vue.resolveComponent("jet-section-border");
  const _component_update_team_form = vue.resolveComponent("update-team-form");
  const _component_team_member_manager = vue.resolveComponent("team-member-manager");
  const _component_delete_team_form = vue.resolveComponent("delete-team-form");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> Company Settings </h2>`);
      } else {
        return [
          vue.createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " Company Settings ")
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="overflow-y-auto h-full"${_scopeId}><div class="max-w-7xl py-10 sm:px-6 lg:px-8"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_connect_accounting, { team: $props.team }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_update_team_form, {
          team: $props.team,
          permissions: $props.permissions
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_team_member_manager, {
          class: "mt-10 sm:mt-0",
          team: $props.team,
          "available-roles": $props.availableRoles,
          "user-permissions": $props.permissions
        }, null, _parent2, _scopeId));
        if ($props.permissions.canDeleteTeam && !$props.team.personal_team) {
          _push2(`<!--[-->`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_delete_team_form, {
            class: "mt-10 sm:mt-0",
            team: $props.team
          }, null, _parent2, _scopeId));
          _push2(`<!--]-->`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div>`);
      } else {
        return [
          vue.createVNode("div", { class: "overflow-y-auto h-full" }, [
            vue.createVNode("div", { class: "max-w-7xl py-10 sm:px-6 lg:px-8" }, [
              vue.createVNode(_component_connect_accounting, { team: $props.team }, null, 8, ["team"]),
              vue.createVNode(_component_jet_section_border),
              vue.createVNode(_component_update_team_form, {
                team: $props.team,
                permissions: $props.permissions
              }, null, 8, ["team", "permissions"]),
              vue.createVNode(_component_team_member_manager, {
                class: "mt-10 sm:mt-0",
                team: $props.team,
                "available-roles": $props.availableRoles,
                "user-permissions": $props.permissions
              }, null, 8, ["team", "available-roles", "user-permissions"]),
              $props.permissions.canDeleteTeam && !$props.team.personal_team ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 0 }, [
                vue.createVNode(_component_jet_section_border),
                vue.createVNode(_component_delete_team_form, {
                  class: "mt-10 sm:mt-0",
                  team: $props.team
                }, null, 8, ["team"])
              ], 64)) : vue.createCommentVNode("", true)
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$m = _sfc_main$m.setup;
_sfc_main$m.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/Show.vue");
  return _sfc_setup$m ? _sfc_setup$m(props, ctx) : void 0;
};
var Show$4 = /* @__PURE__ */ _export_sfc(_sfc_main$m, [["ssrRender", _sfc_ssrRender$m]]);
var Show$5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$4
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$l = {
  components: {
    PageAside,
    AsideLink,
    ButtonLink,
    TabContainer,
    TabLink,
    SearchInput,
    EmptyState,
    JetSectionTitle: SectionTitle
  },
  props: {
    vendors: Array
  },
  computed: {
    vendorsLength: function() {
      return this.vendors.length;
    }
  },
  data() {
    return {
      search: "",
      filteredVendors: this.vendors
    };
  },
  methods: {
    updateVendors() {
      this.filteredVendors = this.vendors.filter((vendor) => {
        var _a;
        if (vendor.name.toLowerCase().includes(this.search.toLowerCase()) || ((_a = vendor.state) == null ? void 0 : _a.toLowerCase().includes(this.search.toLowerCase()))) {
          return true;
        } else {
          return false;
        }
      });
    }
  }
};
function _sfc_ssrRender$l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_page_aside = vue.resolveComponent("page-aside");
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_button_link = vue.resolveComponent("button-link");
  const _component_search_input = vue.resolveComponent("search-input");
  const _component_tab_container = vue.resolveComponent("tab-container");
  const _component_tab_link = vue.resolveComponent("tab-link");
  const _component_aside_link = vue.resolveComponent("aside-link");
  const _component_empty_state = vue.resolveComponent("empty-state");
  _push(serverRenderer.ssrRenderComponent(_component_page_aside, vue.mergeProps({
    showOnMobile: _ctx.route().current("vendors.index") || _ctx.route().current("archived-vendors.index")
  }, _attrs), {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, vue.createSlots({
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Vendor Directory`);
            } else {
              return [
                vue.createTextVNode("Vendor Directory")
              ];
            }
          }),
          aside: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_button_link, {
                href: _ctx.route("vendors.create")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`New Vendor`);
                  } else {
                    return [
                      vue.createTextVNode("New Vendor")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_button_link, {
                  href: _ctx.route("vendors.create")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("New Vendor")
                  ]),
                  _: 1
                }, 8, ["href"])
              ];
            }
          }),
          _: 2
        }, [
          $options.vendorsLength > 0 ? {
            name: "description",
            fn: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Search ${serverRenderer.ssrInterpolate($options.vendorsLength)} ${serverRenderer.ssrInterpolate($options.vendorsLength > 1 ? "Vendors" : "Vendor")}`);
              } else {
                return [
                  vue.createTextVNode("Search " + vue.toDisplayString($options.vendorsLength) + " " + vue.toDisplayString($options.vendorsLength > 1 ? "Vendors" : "Vendor"), 1)
                ];
              }
            })
          } : void 0
        ]), _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_search_input, {
          modelValue: $data.search,
          "onUpdate:modelValue": ($event) => $data.search = $event,
          onInput: $options.updateVendors,
          placeholder: "Search by vendor name or state."
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_section_title, null, vue.createSlots({
            title: vue.withCtx(() => [
              vue.createTextVNode("Vendor Directory")
            ]),
            aside: vue.withCtx(() => [
              vue.createVNode(_component_button_link, {
                href: _ctx.route("vendors.create")
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New Vendor")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            _: 2
          }, [
            $options.vendorsLength > 0 ? {
              name: "description",
              fn: vue.withCtx(() => [
                vue.createTextVNode("Search " + vue.toDisplayString($options.vendorsLength) + " " + vue.toDisplayString($options.vendorsLength > 1 ? "Vendors" : "Vendor"), 1)
              ])
            } : void 0
          ]), 1024),
          vue.createVNode(_component_search_input, {
            modelValue: $data.search,
            "onUpdate:modelValue": ($event) => $data.search = $event,
            onInput: $options.updateVendors,
            placeholder: "Search by vendor name or state."
          }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_tab_container, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_tab_link, {
                href: _ctx.route("vendors.index"),
                current: _ctx.route().current("vendors.*")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Active`);
                  } else {
                    return [
                      vue.createTextVNode("Active")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_tab_link, {
                href: _ctx.route("archived-vendors.index"),
                current: _ctx.route().current("archived-vendors.*")
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Archived`);
                  } else {
                    return [
                      vue.createTextVNode("Archived")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("vendors.index"),
                  current: _ctx.route().current("vendors.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Active")
                  ]),
                  _: 1
                }, 8, ["href", "current"]),
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("archived-vendors.index"),
                  current: _ctx.route().current("archived-vendors.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Archived")
                  ]),
                  _: 1
                }, 8, ["href", "current"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<ul class="divide-y divide-gray-200"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($data.filteredVendors, (vendor) => {
          _push2(`<li class="bg-white"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_aside_link, {
            href: vendor.deleted_at ? _ctx.route("archived-vendors.show", vendor.id) : _ctx.route("vendors.show", vendor.id),
            current: _ctx.route().current("vendors.show", vendor.id) || _ctx.route().current("archived-vendors.show", vendor.id)
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex-1 min-w-0"${_scopeId2}><div class="focus:outline-none"${_scopeId2}><span class="absolute inset-0" aria-hidden="true"${_scopeId2}></span><p class="text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate(vendor.name)}</p>`);
                if (vendor.state) {
                  _push3(`<p class="text-sm text-gray-500 truncate"${_scopeId2}>${serverRenderer.ssrInterpolate(vendor.state)}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                    vue.createVNode("div", { class: "focus:outline-none" }, [
                      vue.createVNode("span", {
                        class: "absolute inset-0",
                        "aria-hidden": "true"
                      }),
                      vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(vendor.name), 1),
                      vendor.state ? (vue.openBlock(), vue.createBlock("p", {
                        key: 0,
                        class: "text-sm text-gray-500 truncate"
                      }, vue.toDisplayString(vendor.state), 1)) : vue.createCommentVNode("", true)
                    ])
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</li>`);
        });
        _push2(`<!--]--></ul></div>`);
        if ($options.vendorsLength < 1 && _ctx.route().current("vendors.index")) {
          _push2(serverRenderer.ssrRenderComponent(_component_empty_state, {
            heading: "No Vendors",
            subtitle: "Get started by creating a new vendor.",
            "button-text": "New Vendor",
            href: _ctx.route("vendors.create")
          }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode("div", { class: "bg-white" }, [
            vue.createVNode(_component_tab_container, null, {
              default: vue.withCtx(() => [
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("vendors.index"),
                  current: _ctx.route().current("vendors.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Active")
                  ]),
                  _: 1
                }, 8, ["href", "current"]),
                vue.createVNode(_component_tab_link, {
                  href: _ctx.route("archived-vendors.index"),
                  current: _ctx.route().current("archived-vendors.*")
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Archived")
                  ]),
                  _: 1
                }, 8, ["href", "current"])
              ]),
              _: 1
            }),
            vue.createVNode("ul", { class: "divide-y divide-gray-200" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.filteredVendors, (vendor) => {
                return vue.openBlock(), vue.createBlock("li", {
                  key: vendor.id,
                  class: "bg-white"
                }, [
                  vue.createVNode(_component_aside_link, {
                    href: vendor.deleted_at ? _ctx.route("archived-vendors.show", vendor.id) : _ctx.route("vendors.show", vendor.id),
                    current: _ctx.route().current("vendors.show", vendor.id) || _ctx.route().current("archived-vendors.show", vendor.id)
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                        vue.createVNode("div", { class: "focus:outline-none" }, [
                          vue.createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(vendor.name), 1),
                          vendor.state ? (vue.openBlock(), vue.createBlock("p", {
                            key: 0,
                            class: "text-sm text-gray-500 truncate"
                          }, vue.toDisplayString(vendor.state), 1)) : vue.createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 2
                  }, 1032, ["href", "current"])
                ]);
              }), 128))
            ])
          ]),
          $options.vendorsLength < 1 && _ctx.route().current("vendors.index") ? (vue.openBlock(), vue.createBlock(_component_empty_state, {
            key: 0,
            heading: "No Vendors",
            subtitle: "Get started by creating a new vendor.",
            "button-text": "New Vendor",
            href: _ctx.route("vendors.create")
          }, null, 8, ["href"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$l = _sfc_main$l.setup;
_sfc_main$l.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Vendors/VendorsAside.vue");
  return _sfc_setup$l ? _sfc_setup$l(props, ctx) : void 0;
};
var VendorsAside = /* @__PURE__ */ _export_sfc(_sfc_main$l, [["ssrRender", _sfc_ssrRender$l]]);
var VendorsAside$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": VendorsAside
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$k = {
  components: {
    VendorsAside,
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    vendors() {
      return this.$page.props.vendors;
    },
    isIndex() {
      return route().current("vendors.index") || route().current("archived-vendors.index");
    }
  }
};
function _sfc_ssrRender$k(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  const _component_vendors_aside = vue.resolveComponent("vendors-aside");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb" class="xl:hidden"${_scopeId2}><div class="px-4 md:pb-2"${_scopeId2}>`);
                if (_ctx.route().current("vendors.*")) {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("vendors.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Vendors`);
                      } else {
                        return [
                          vue.createTextVNode("Vendors")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("archived-vendors.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Archived vendors`);
                      } else {
                        return [
                          vue.createTextVNode("Archived vendors")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                }
                _push3(`</div></nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("vendors.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("vendors.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Vendors")
                      ]),
                      _: 1
                    }, 8, ["href"])) : (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 1,
                      href: _ctx.route("archived-vendors.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Archived vendors")
                      ]),
                      _: 1
                    }, 8, ["href"]))
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_vendors_aside, { vendors: $options.vendors }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
              default: vue.withCtx(() => [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "xl:hidden"
                }, [
                  vue.createVNode("div", { class: "px-4 md:pb-2" }, [
                    _ctx.route().current("vendors.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("vendors.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Vendors")
                      ]),
                      _: 1
                    }, 8, ["href"])) : (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 1,
                      href: _ctx.route("archived-vendors.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Archived vendors")
                      ]),
                      _: 1
                    }, 8, ["href"]))
                  ])
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ]),
              _: 3
            }, 8, ["dontShowOnMobile"]),
            vue.createVNode(_component_vendors_aside, { vendors: $options.vendors }, null, 8, ["vendors"])
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$k = _sfc_main$k.setup;
_sfc_main$k.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Vendors/VendorsLayout.vue");
  return _sfc_setup$k ? _sfc_setup$k(props, ctx) : void 0;
};
var VendorsLayout = /* @__PURE__ */ _export_sfc(_sfc_main$k, [["ssrRender", _sfc_ssrRender$k]]);
var VendorsLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": VendorsLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$j = {
  props: ["vendor"],
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingVendorRestoration: false,
      restoring: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmVendorRestoration() {
      this.confirmingVendorRestoration = true;
    },
    restoreVendor() {
      this.form.post(route("archived-vendors.restore", this.vendor.id), {
        errorBag: "restoreVendor"
      });
    }
  }
};
function _sfc_ssrRender$j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_button = vue.resolveComponent("jet-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Restore Vendor `);
      } else {
        return [
          vue.createTextVNode("Restore Vendor ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Restore this vendor. You will be able to bring in new inventory with this vendor and it will no longer be archived.`);
      } else {
        return [
          vue.createTextVNode("Restore this vendor. You will be able to bring in new inventory with this vendor and it will no longer be archived.")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a vendor is restored, you will be able to bring in inventory from this vendor. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, { onClick: $options.confirmVendorRestoration }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Restore Vendor `);
            } else {
              return [
                vue.createTextVNode(" Restore Vendor ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingVendorRestoration,
          onClose: ($event) => $data.confirmingVendorRestoration = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Restore Vendor `);
            } else {
              return [
                vue.createTextVNode(" Restore Vendor ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to restore this vendor? `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to restore this vendor? ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingVendorRestoration = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.restoreVendor,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Restore Vendor `);
                  } else {
                    return [
                      vue.createTextVNode(" Restore Vendor ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingVendorRestoration = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.restoreVendor,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Restore Vendor ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a vendor is restored, you will be able to bring in inventory from this vendor. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_button, { onClick: $options.confirmVendorRestoration }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Restore Vendor ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingVendorRestoration,
            onClose: ($event) => $data.confirmingVendorRestoration = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Restore Vendor ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to restore this vendor? ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingVendorRestoration = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.restoreVendor,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Restore Vendor ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$j = _sfc_main$j.setup;
_sfc_main$j.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Vendors/RestoreVendorForm.vue");
  return _sfc_setup$j ? _sfc_setup$j(props, ctx) : void 0;
};
var RestoreVendorForm = /* @__PURE__ */ _export_sfc(_sfc_main$j, [["ssrRender", _sfc_ssrRender$j]]);
var RestoreVendorForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": RestoreVendorForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$i = {
  components: {
    PaperClipIcon: solid.PaperClipIcon,
    VendorsLayout,
    DetailsSection,
    RestoreVendorForm
  },
  props: { vendor: Object }
};
function _sfc_ssrRender$i(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_vendors_layout = vue.resolveComponent("vendors-layout");
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_restore_vendor_form = vue.resolveComponent("restore-vendor-form");
  _push(serverRenderer.ssrRenderComponent(_component_vendors_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_details_section, null, {
          header: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${serverRenderer.ssrInterpolate($props.vendor.name)}`);
            } else {
              return [
                vue.createTextVNode(vue.toDisplayString($props.vendor.name), 1)
              ];
            }
          }),
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="sm:col-span-2"${_scopeId2}><dt class="text-sm text-gray-500"${_scopeId2}>Vendor name</dt><dd class="mt-1 text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate($props.vendor.name)}</dd></div><div class="sm:col-span-1"${_scopeId2}><dt class="text-sm text-gray-500"${_scopeId2}>Vendor Address</dt><dd class="mt-1 text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate($props.vendor.address)}</dd><dd class="mt-1 text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate($props.vendor.city)} ${serverRenderer.ssrInterpolate($props.vendor.state)} ${serverRenderer.ssrInterpolate($props.vendor.zip)}</dd></div><div class="sm:col-span-2"${_scopeId2}><dt class="text-sm text-gray-500"${_scopeId2}>Notes</dt><dd class="mt-1 text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate($props.vendor.notes)}</dd></div>`);
            } else {
              return [
                vue.createVNode("div", { class: "sm:col-span-2" }, [
                  vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Vendor name"),
                  vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.vendor.name), 1)
                ]),
                vue.createVNode("div", { class: "sm:col-span-1" }, [
                  vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Vendor Address"),
                  vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.vendor.address), 1),
                  vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.vendor.city) + " " + vue.toDisplayString($props.vendor.state) + " " + vue.toDisplayString($props.vendor.zip), 1)
                ]),
                vue.createVNode("div", { class: "sm:col-span-2" }, [
                  vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Notes"),
                  vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.vendor.notes), 1)
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_restore_vendor_form, {
          vendor: $props.vendor,
          class: "mt-6"
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_details_section, null, {
            header: vue.withCtx(() => [
              vue.createTextVNode(vue.toDisplayString($props.vendor.name), 1)
            ]),
            default: vue.withCtx(() => [
              vue.createVNode("div", { class: "sm:col-span-2" }, [
                vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Vendor name"),
                vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.vendor.name), 1)
              ]),
              vue.createVNode("div", { class: "sm:col-span-1" }, [
                vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Vendor Address"),
                vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.vendor.address), 1),
                vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.vendor.city) + " " + vue.toDisplayString($props.vendor.state) + " " + vue.toDisplayString($props.vendor.zip), 1)
              ]),
              vue.createVNode("div", { class: "sm:col-span-2" }, [
                vue.createVNode("dt", { class: "text-sm text-gray-500" }, "Notes"),
                vue.createVNode("dd", { class: "mt-1 text-sm text-gray-900" }, vue.toDisplayString($props.vendor.notes), 1)
              ])
            ]),
            _: 1
          }),
          vue.createVNode(_component_restore_vendor_form, {
            vendor: $props.vendor,
            class: "mt-6"
          }, null, 8, ["vendor"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$i = _sfc_main$i.setup;
_sfc_main$i.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Vendors/ArchivedShow.vue");
  return _sfc_setup$i ? _sfc_setup$i(props, ctx) : void 0;
};
var ArchivedShow = /* @__PURE__ */ _export_sfc(_sfc_main$i, [["ssrRender", _sfc_ssrRender$i]]);
var ArchivedShow$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ArchivedShow
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$h = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    Switch: vue$1.Switch,
    SwitchDescription: vue$1.SwitchDescription,
    SwitchGroup: vue$1.SwitchGroup,
    SwitchLabel: vue$1.SwitchLabel,
    TextAreaInput,
    SelectBox
  },
  data() {
    return {
      form: this.$inertia.form({
        _method: "POST",
        name: "",
        vendor_code: "",
        address: "",
        city: "",
        state: "",
        zip: "",
        mailing_same_as_primary: true,
        mailing_address: "",
        mailing_city: "",
        mailing_state: "",
        mailing_zip: "",
        notes: "",
        use_for_block_transfers: false
      })
    };
  },
  methods: {
    createVendor() {
      this.form.post(route("vendors.store"), {
        errorBag: "createVendor",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_SwitchGroup = vue.resolveComponent("SwitchGroup");
  const _component_SwitchLabel = vue.resolveComponent("SwitchLabel");
  const _component_SwitchDescription = vue.resolveComponent("SwitchDescription");
  const _component_Switch = vue.resolveComponent("Switch");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.createVendor }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Create a Vendor`);
      } else {
        return [
          vue.createTextVNode("Create a Vendor")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a new vendor to purchase products from. `);
      } else {
        return [
          vue.createTextVNode(" Create a new vendor to purchase products from. ")
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Vendor Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "organization"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "notes",
          value: "Vendor Notes"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "notes",
          class: "mt-1 block w-full",
          modelValue: $data.form.notes,
          "onUpdate:modelValue": ($event) => $data.form.notes = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.notes,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-between col-span-3"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="flex-grow flex flex-col"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-900"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Use vendor for block inventory transfers?`);
                  } else {
                    return [
                      vue.createTextVNode("Use vendor for block inventory transfers?")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchDescription, {
                as: "span",
                class: "text-sm text-gray-500"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Indicate whether this vendor will be used for transfers from the block inventory.`);
                  } else {
                    return [
                      vue.createTextVNode("Indicate whether this vendor will be used for transfers from the block inventory.")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</span>`);
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.form.use_for_block_transfers,
                "onUpdate:modelValue": ($event) => $data.form.use_for_block_transfers = $event,
                class: [
                  $data.form.use_for_block_transfers ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.form.use_for_block_transfers ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.use_for_block_transfers ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("span", { class: "flex-grow flex flex-col" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Use vendor for block inventory transfers?")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchDescription, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Indicate whether this vendor will be used for transfers from the block inventory.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.form.use_for_block_transfers,
                  "onUpdate:modelValue": ($event) => $data.form.use_for_block_transfers = $event,
                  class: [
                    $data.form.use_for_block_transfers ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.form.use_for_block_transfers ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 text-gray-900"${_scopeId}> Primary Address </h3></div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "address",
          value: "Street Address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "address",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.address,
          "onUpdate:modelValue": ($event) => $data.form.address = $event,
          autocomplete: "address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.address,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "city",
          value: "City"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "city",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.city,
          "onUpdate:modelValue": ($event) => $data.form.city = $event,
          autocomplete: "address-level2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.city,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "state",
          value: "State"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "state",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.state,
          "onUpdate:modelValue": ($event) => $data.form.state = $event,
          autocomplete: "address-level1"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.state,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "zip",
          value: "Zip"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "zip",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.zip,
          "onUpdate:modelValue": ($event) => $data.form.zip = $event,
          autocomplete: "postal-code"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.zip,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-between col-span-3"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="flex-grow flex flex-col"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-900"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Mailing same as primary`);
                  } else {
                    return [
                      vue.createTextVNode("Mailing same as primary")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchDescription, {
                as: "span",
                class: "text-sm text-gray-500"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Indicate whether the mailing address of this vendor is the same as the primary address.`);
                  } else {
                    return [
                      vue.createTextVNode("Indicate whether the mailing address of this vendor is the same as the primary address.")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</span>`);
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.form.mailing_same_as_primary,
                "onUpdate:modelValue": ($event) => $data.form.mailing_same_as_primary = $event,
                class: [
                  $data.form.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.form.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("span", { class: "flex-grow flex flex-col" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Mailing same as primary")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchDescription, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Indicate whether the mailing address of this vendor is the same as the primary address.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.form.mailing_same_as_primary,
                  "onUpdate:modelValue": ($event) => $data.form.mailing_same_as_primary = $event,
                  class: [
                    $data.form.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.form.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        if (!$data.form.mailing_same_as_primary) {
          _push2(`<div class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 text-gray-900"${_scopeId}> Mailing Address </h3></div><div class="col-span-3"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "mailing_address",
            value: "Mailing Street Address"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "mailing_address",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.mailing_address,
            "onUpdate:modelValue": ($event) => $data.form.mailing_address = $event,
            autocomplete: "address"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.mailing_address,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "mailing_city",
            value: "Mailing City"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "mailing_city",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.mailing_city,
            "onUpdate:modelValue": ($event) => $data.form.mailing_city = $event,
            autocomplete: "address-level2"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.mailing_city,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "mailing_state",
            value: "Mailing State"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "mailing_state",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.mailing_state,
            "onUpdate:modelValue": ($event) => $data.form.mailing_state = $event,
            autocomplete: "address-level1"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.mailing_state,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "mailing_zip",
            value: "Mailing Zip"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "mailing_zip",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.mailing_zip,
            "onUpdate:modelValue": ($event) => $data.form.mailing_zip = $event,
            autocomplete: "postal-code"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.mailing_zip,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Vendor Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "organization"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "notes",
                  value: "Vendor Notes"
                }),
                vue.createVNode(_component_text_area_input, {
                  id: "notes",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.notes,
                  "onUpdate:modelValue": ($event) => $data.form.notes = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.notes,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode(_component_SwitchGroup, {
                as: "div",
                class: "flex items-center justify-between col-span-3"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "flex-grow flex flex-col" }, [
                    vue.createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm text-gray-900"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Use vendor for block inventory transfers?")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_SwitchDescription, {
                      as: "span",
                      class: "text-sm text-gray-500"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Indicate whether this vendor will be used for transfers from the block inventory.")
                      ]),
                      _: 1
                    })
                  ]),
                  vue.createVNode(_component_Switch, {
                    modelValue: $data.form.use_for_block_transfers,
                    "onUpdate:modelValue": ($event) => $data.form.use_for_block_transfers = $event,
                    class: [
                      $data.form.use_for_block_transfers ? "bg-green-600" : "bg-gray-200",
                      "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                    ]
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.use_for_block_transfers ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ]),
                    _: 1
                  }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                ]),
                _: 1
              })
            ]),
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                vue.createVNode("h3", { class: "text-lg leading-6 text-gray-900" }, " Primary Address ")
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "address",
                  value: "Street Address"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "address",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.address,
                  "onUpdate:modelValue": ($event) => $data.form.address = $event,
                  autocomplete: "address"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.address,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "city",
                  value: "City"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "city",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.city,
                  "onUpdate:modelValue": ($event) => $data.form.city = $event,
                  autocomplete: "address-level2"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.city,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "state",
                  value: "State"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "state",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.state,
                  "onUpdate:modelValue": ($event) => $data.form.state = $event,
                  autocomplete: "address-level1"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.state,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "zip",
                  value: "Zip"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "zip",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.zip,
                  "onUpdate:modelValue": ($event) => $data.form.zip = $event,
                  autocomplete: "postal-code"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.zip,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode(_component_SwitchGroup, {
                as: "div",
                class: "flex items-center justify-between col-span-3"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "flex-grow flex flex-col" }, [
                    vue.createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm text-gray-900"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Mailing same as primary")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_SwitchDescription, {
                      as: "span",
                      class: "text-sm text-gray-500"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Indicate whether the mailing address of this vendor is the same as the primary address.")
                      ]),
                      _: 1
                    })
                  ]),
                  vue.createVNode(_component_Switch, {
                    modelValue: $data.form.mailing_same_as_primary,
                    "onUpdate:modelValue": ($event) => $data.form.mailing_same_as_primary = $event,
                    class: [
                      $data.form.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                      "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                    ]
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ]),
                    _: 1
                  }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                ]),
                _: 1
              })
            ]),
            !$data.form.mailing_same_as_primary ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "grid gap-4"
            }, [
              vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                vue.createVNode("h3", { class: "text-lg leading-6 text-gray-900" }, " Mailing Address ")
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_address",
                  value: "Mailing Street Address"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_address",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.mailing_address,
                  "onUpdate:modelValue": ($event) => $data.form.mailing_address = $event,
                  autocomplete: "address"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.mailing_address,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_city",
                  value: "Mailing City"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_city",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.mailing_city,
                  "onUpdate:modelValue": ($event) => $data.form.mailing_city = $event,
                  autocomplete: "address-level2"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.mailing_city,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_state",
                  value: "Mailing State"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_state",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.mailing_state,
                  "onUpdate:modelValue": ($event) => $data.form.mailing_state = $event,
                  autocomplete: "address-level1"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.mailing_state,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_zip",
                  value: "Mailing Zip"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_zip",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.mailing_zip,
                  "onUpdate:modelValue": ($event) => $data.form.mailing_zip = $event,
                  autocomplete: "postal-code"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.mailing_zip,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])) : vue.createCommentVNode("", true)
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Vendor`);
            } else {
              return [
                vue.createTextVNode("Save Vendor")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Vendor")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$h = _sfc_main$h.setup;
_sfc_main$h.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Vendors/CreateVendorForm.vue");
  return _sfc_setup$h ? _sfc_setup$h(props, ctx) : void 0;
};
var CreateVendorForm = /* @__PURE__ */ _export_sfc(_sfc_main$h, [["ssrRender", _sfc_ssrRender$h]]);
var CreateVendorForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": CreateVendorForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$g = {
  components: {
    CreateVendorForm,
    VendorsLayout
  }
};
function _sfc_ssrRender$g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_vendors_layout = vue.resolveComponent("vendors-layout");
  const _component_create_vendor_form = vue.resolveComponent("create-vendor-form");
  _push(serverRenderer.ssrRenderComponent(_component_vendors_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_create_vendor_form, null, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_create_vendor_form)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$g = _sfc_main$g.setup;
_sfc_main$g.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Vendors/Create.vue");
  return _sfc_setup$g ? _sfc_setup$g(props, ctx) : void 0;
};
var Create = /* @__PURE__ */ _export_sfc(_sfc_main$g, [["ssrRender", _sfc_ssrRender$g]]);
var Create$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Create
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$f = {
  props: { vendor: Object },
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingVendorDeletion: false,
      deleting: false,
      form: this.$inertia.form()
    };
  },
  methods: {
    confirmVendorDeletion() {
      this.confirmingVendorDeletion = true;
    },
    deleteVendor() {
      this.form.delete(route("vendors.destroy", this.vendor), {
        errorBag: "deleteVendor"
      });
    }
  }
};
function _sfc_ssrRender$f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = vue.resolveComponent("jet-action-section");
  const _component_jet_danger_button = vue.resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = vue.resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = vue.resolveComponent("jet-secondary-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Vendor `);
      } else {
        return [
          vue.createTextVNode(" Delete Vendor ")
        ];
      }
    }),
    description: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete this vendor. `);
      } else {
        return [
          vue.createTextVNode(" Delete this vendor. ")
        ];
      }
    }),
    content: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a vendor is deleted, you will be unable to bring product in from this vendor. Past purchases will still contain this vendor information. </div><div class="mt-5"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmVendorDeletion }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Vendor `);
            } else {
              return [
                vue.createTextVNode(" Delete Vendor ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingVendorDeletion,
          onClose: ($event) => $data.confirmingVendorDeletion = false
        }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Vendor `);
            } else {
              return [
                vue.createTextVNode(" Delete Vendor ")
              ];
            }
          }),
          content: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this vendor? `);
            } else {
              return [
                vue.createTextVNode(" Are you sure you want to delete this vendor? ")
              ];
            }
          }),
          footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingVendorDeletion = false
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      vue.createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteVendor,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Vendor `);
                  } else {
                    return [
                      vue.createTextVNode(" Delete Vendor ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingVendorDeletion = false
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                vue.createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  onClick: $options.deleteVendor,
                  disabled: $data.form.processing
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Delete Vendor ")
                  ]),
                  _: 1
                }, 8, ["onClick", "class", "disabled"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a vendor is deleted, you will be unable to bring product in from this vendor. Past purchases will still contain this vendor information. "),
          vue.createVNode("div", { class: "mt-5" }, [
            vue.createVNode(_component_jet_danger_button, { onClick: $options.confirmVendorDeletion }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(" Delete Vendor ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          vue.createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingVendorDeletion,
            onClose: ($event) => $data.confirmingVendorDeletion = false
          }, {
            title: vue.withCtx(() => [
              vue.createTextVNode(" Delete Vendor ")
            ]),
            content: vue.withCtx(() => [
              vue.createTextVNode(" Are you sure you want to delete this vendor? ")
            ]),
            footer: vue.withCtx(() => [
              vue.createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingVendorDeletion = false
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              vue.createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                onClick: $options.deleteVendor,
                disabled: $data.form.processing
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Delete Vendor ")
                ]),
                _: 1
              }, 8, ["onClick", "class", "disabled"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$f = _sfc_main$f.setup;
_sfc_main$f.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Vendors/DeleteVendorForm.vue");
  return _sfc_setup$f ? _sfc_setup$f(props, ctx) : void 0;
};
var DeleteVendorForm = /* @__PURE__ */ _export_sfc(_sfc_main$f, [["ssrRender", _sfc_ssrRender$f]]);
var DeleteVendorForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": DeleteVendorForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$e = {
  components: {
    VendorsLayout
  }
};
function _sfc_ssrRender$e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_vendors_layout = vue.resolveComponent("vendors-layout");
  _push(serverRenderer.ssrRenderComponent(_component_vendors_layout, _attrs, null, _parent));
}
const _sfc_setup$e = _sfc_main$e.setup;
_sfc_main$e.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Vendors/Index.vue");
  return _sfc_setup$e ? _sfc_setup$e(props, ctx) : void 0;
};
var Index$2 = /* @__PURE__ */ _export_sfc(_sfc_main$e, [["ssrRender", _sfc_ssrRender$e]]);
var Index$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index$2
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$d = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    Switch: vue$1.Switch,
    SwitchDescription: vue$1.SwitchDescription,
    SwitchGroup: vue$1.SwitchGroup,
    SwitchLabel: vue$1.SwitchLabel,
    TextAreaInput,
    SelectBox
  },
  props: { vendor: Object },
  data() {
    return {
      form: this.$inertia.form({
        _method: "PATCH",
        name: this.vendor.name,
        vendor_code: this.vendor.vendor_code,
        address: this.vendor.address,
        city: this.vendor.city,
        state: this.vendor.state,
        zip: this.vendor.zip,
        mailing_same_as_primary: this.vendor.mailing_same_as_primary,
        mailing_address: this.vendor.mailing_address,
        mailing_city: this.vendor.mailing_city,
        mailing_state: this.vendor.mailing_state,
        mailing_zip: this.vendor.mailing_zip,
        notes: this.vendor.notes,
        use_for_block_transfers: this.vendor.use_for_block_transfers
      })
    };
  },
  methods: {
    updateVendor() {
      this.form.patch(route("vendors.update", this.vendor), {
        errorBag: "updateVendor",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = vue.resolveComponent("jet-form-section");
  const _component_jet_label = vue.resolveComponent("jet-label");
  const _component_jet_input = vue.resolveComponent("jet-input");
  const _component_jet_input_error = vue.resolveComponent("jet-input-error");
  const _component_text_area_input = vue.resolveComponent("text-area-input");
  const _component_SwitchGroup = vue.resolveComponent("SwitchGroup");
  const _component_SwitchLabel = vue.resolveComponent("SwitchLabel");
  const _component_SwitchDescription = vue.resolveComponent("SwitchDescription");
  const _component_Switch = vue.resolveComponent("Switch");
  const _component_jet_button = vue.resolveComponent("jet-button");
  _push(serverRenderer.ssrRenderComponent(_component_jet_form_section, vue.mergeProps({ onSubmitted: $options.updateVendor }, _attrs), {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${serverRenderer.ssrInterpolate($props.vendor.name)}`);
      } else {
        return [
          vue.createTextVNode(vue.toDisplayString($props.vendor.name), 1)
        ];
      }
    }),
    form: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}><div class="grid gap-4"${_scopeId}><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Vendor Name"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "name",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          required: "",
          autocomplete: "organization"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "notes",
          value: "Vendor Notes"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_text_area_input, {
          id: "notes",
          class: "mt-1 block w-full",
          modelValue: $data.form.notes,
          "onUpdate:modelValue": ($event) => $data.form.notes = $event
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.notes,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-between col-span-3"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="flex-grow flex flex-col"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-900"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Use vendor for block inventory transfers?`);
                  } else {
                    return [
                      vue.createTextVNode("Use vendor for block inventory transfers?")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchDescription, {
                as: "span",
                class: "text-sm text-gray-500"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Indicate whether this vendor will be used for transfers from the block inventory.`);
                  } else {
                    return [
                      vue.createTextVNode("Indicate whether this vendor will be used for transfers from the block inventory.")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</span>`);
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.form.use_for_block_transfers,
                "onUpdate:modelValue": ($event) => $data.form.use_for_block_transfers = $event,
                class: [
                  $data.form.use_for_block_transfers ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.form.use_for_block_transfers ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.use_for_block_transfers ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("span", { class: "flex-grow flex flex-col" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Use vendor for block inventory transfers?")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchDescription, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Indicate whether this vendor will be used for transfers from the block inventory.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.form.use_for_block_transfers,
                  "onUpdate:modelValue": ($event) => $data.form.use_for_block_transfers = $event,
                  class: [
                    $data.form.use_for_block_transfers ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.form.use_for_block_transfers ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 text-gray-900"${_scopeId}> Primary Address </h3></div><div class="col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "address",
          value: "Street Address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "address",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.address,
          "onUpdate:modelValue": ($event) => $data.form.address = $event,
          autocomplete: "address"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.address,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "city",
          value: "City"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "city",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.city,
          "onUpdate:modelValue": ($event) => $data.form.city = $event,
          autocomplete: "address-level2"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.city,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "state",
          value: "State"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "state",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.state,
          "onUpdate:modelValue": ($event) => $data.form.state = $event,
          autocomplete: "address-level1"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.state,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
          for: "zip",
          value: "Zip"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
          id: "zip",
          type: "text",
          class: "mt-1 block w-full",
          modelValue: $data.form.zip,
          "onUpdate:modelValue": ($event) => $data.form.zip = $event,
          autocomplete: "postal-code"
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.zip,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center justify-between col-span-3"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="flex-grow flex flex-col"${_scopeId2}>`);
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchLabel, {
                as: "span",
                class: "text-sm text-gray-900"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Mailing same as primary`);
                  } else {
                    return [
                      vue.createTextVNode("Mailing same as primary")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_SwitchDescription, {
                as: "span",
                class: "text-sm text-gray-500"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Indicate whether the mailing address of this vendor is the same as the primary address.`);
                  } else {
                    return [
                      vue.createTextVNode("Indicate whether the mailing address of this vendor is the same as the primary address.")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</span>`);
              _push3(serverRenderer.ssrRenderComponent(_component_Switch, {
                modelValue: $data.form.mailing_same_as_primary,
                "onUpdate:modelValue": ($event) => $data.form.mailing_same_as_primary = $event,
                class: [
                  $data.form.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span aria-hidden="true" class="${serverRenderer.ssrRenderClass([
                      $data.form.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}></span>`);
                  } else {
                    return [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode("span", { class: "flex-grow flex flex-col" }, [
                  vue.createVNode(_component_SwitchLabel, {
                    as: "span",
                    class: "text-sm text-gray-900"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Mailing same as primary")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_SwitchDescription, {
                    as: "span",
                    class: "text-sm text-gray-500"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Indicate whether the mailing address of this vendor is the same as the primary address.")
                    ]),
                    _: 1
                  })
                ]),
                vue.createVNode(_component_Switch, {
                  modelValue: $data.form.mailing_same_as_primary,
                  "onUpdate:modelValue": ($event) => $data.form.mailing_same_as_primary = $event,
                  class: [
                    $data.form.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode("span", {
                      "aria-hidden": "true",
                      class: [
                        $data.form.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, null, 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        if (!$data.form.mailing_same_as_primary) {
          _push2(`<div class="grid gap-4"${_scopeId}><div class="col-span-3 pt-6"${_scopeId}><h3 class="text-lg leading-6 text-gray-900"${_scopeId}> Mailing Address </h3></div><div class="col-span-3"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "mailing_address",
            value: "Mailing Street Address"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "mailing_address",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.mailing_address,
            "onUpdate:modelValue": ($event) => $data.form.mailing_address = $event,
            autocomplete: "address"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.mailing_address,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "mailing_city",
            value: "Mailing City"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "mailing_city",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.mailing_city,
            "onUpdate:modelValue": ($event) => $data.form.mailing_city = $event,
            autocomplete: "address-level2"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.mailing_city,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "mailing_state",
            value: "Mailing State"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "mailing_state",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.mailing_state,
            "onUpdate:modelValue": ($event) => $data.form.mailing_state = $event,
            autocomplete: "address-level1"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.mailing_state,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="col-span-3 sm:col-span-1"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_jet_label, {
            for: "mailing_zip",
            value: "Mailing Zip"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input, {
            id: "mailing_zip",
            type: "text",
            class: "mt-1 block w-full",
            modelValue: $data.form.mailing_zip,
            "onUpdate:modelValue": ($event) => $data.form.mailing_zip = $event,
            autocomplete: "postal-code"
          }, null, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.mailing_zip,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6" }, [
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "name",
                  value: "Vendor Name"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "name",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.name,
                  "onUpdate:modelValue": ($event) => $data.form.name = $event,
                  required: "",
                  autocomplete: "organization"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "notes",
                  value: "Vendor Notes"
                }),
                vue.createVNode(_component_text_area_input, {
                  id: "notes",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.notes,
                  "onUpdate:modelValue": ($event) => $data.form.notes = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.notes,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode(_component_SwitchGroup, {
                as: "div",
                class: "flex items-center justify-between col-span-3"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "flex-grow flex flex-col" }, [
                    vue.createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm text-gray-900"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Use vendor for block inventory transfers?")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_SwitchDescription, {
                      as: "span",
                      class: "text-sm text-gray-500"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Indicate whether this vendor will be used for transfers from the block inventory.")
                      ]),
                      _: 1
                    })
                  ]),
                  vue.createVNode(_component_Switch, {
                    modelValue: $data.form.use_for_block_transfers,
                    "onUpdate:modelValue": ($event) => $data.form.use_for_block_transfers = $event,
                    class: [
                      $data.form.use_for_block_transfers ? "bg-green-600" : "bg-gray-200",
                      "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                    ]
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.use_for_block_transfers ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ]),
                    _: 1
                  }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                ]),
                _: 1
              })
            ]),
            vue.createVNode("div", { class: "grid gap-4" }, [
              vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                vue.createVNode("h3", { class: "text-lg leading-6 text-gray-900" }, " Primary Address ")
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "address",
                  value: "Street Address"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "address",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.address,
                  "onUpdate:modelValue": ($event) => $data.form.address = $event,
                  autocomplete: "address"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.address,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "city",
                  value: "City"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "city",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.city,
                  "onUpdate:modelValue": ($event) => $data.form.city = $event,
                  autocomplete: "address-level2"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.city,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "state",
                  value: "State"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "state",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.state,
                  "onUpdate:modelValue": ($event) => $data.form.state = $event,
                  autocomplete: "address-level1"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.state,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "zip",
                  value: "Zip"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "zip",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.zip,
                  "onUpdate:modelValue": ($event) => $data.form.zip = $event,
                  autocomplete: "postal-code"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.zip,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode(_component_SwitchGroup, {
                as: "div",
                class: "flex items-center justify-between col-span-3"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode("span", { class: "flex-grow flex flex-col" }, [
                    vue.createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm text-gray-900"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Mailing same as primary")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_SwitchDescription, {
                      as: "span",
                      class: "text-sm text-gray-500"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Indicate whether the mailing address of this vendor is the same as the primary address.")
                      ]),
                      _: 1
                    })
                  ]),
                  vue.createVNode(_component_Switch, {
                    modelValue: $data.form.mailing_same_as_primary,
                    "onUpdate:modelValue": ($event) => $data.form.mailing_same_as_primary = $event,
                    class: [
                      $data.form.mailing_same_as_primary ? "bg-green-600" : "bg-gray-200",
                      "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                    ]
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("span", {
                        "aria-hidden": "true",
                        class: [
                          $data.form.mailing_same_as_primary ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, null, 2)
                    ]),
                    _: 1
                  }, 8, ["modelValue", "onUpdate:modelValue", "class"])
                ]),
                _: 1
              })
            ]),
            !$data.form.mailing_same_as_primary ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "grid gap-4"
            }, [
              vue.createVNode("div", { class: "col-span-3 pt-6" }, [
                vue.createVNode("h3", { class: "text-lg leading-6 text-gray-900" }, " Mailing Address ")
              ]),
              vue.createVNode("div", { class: "col-span-3" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_address",
                  value: "Mailing Street Address"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_address",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.mailing_address,
                  "onUpdate:modelValue": ($event) => $data.form.mailing_address = $event,
                  autocomplete: "address"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.mailing_address,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_city",
                  value: "Mailing City"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_city",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.mailing_city,
                  "onUpdate:modelValue": ($event) => $data.form.mailing_city = $event,
                  autocomplete: "address-level2"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.mailing_city,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_state",
                  value: "Mailing State"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_state",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.mailing_state,
                  "onUpdate:modelValue": ($event) => $data.form.mailing_state = $event,
                  autocomplete: "address-level1"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.mailing_state,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              vue.createVNode("div", { class: "col-span-3 sm:col-span-1" }, [
                vue.createVNode(_component_jet_label, {
                  for: "mailing_zip",
                  value: "Mailing Zip"
                }),
                vue.createVNode(_component_jet_input, {
                  id: "mailing_zip",
                  type: "text",
                  class: "mt-1 block w-full",
                  modelValue: $data.form.mailing_zip,
                  "onUpdate:modelValue": ($event) => $data.form.mailing_zip = $event,
                  autocomplete: "postal-code"
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vue.createVNode(_component_jet_input_error, {
                  message: $data.form.errors.mailing_zip,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])) : vue.createCommentVNode("", true)
          ])
        ];
      }
    }),
    actions: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_button, {
          type: "submit",
          class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
          disabled: $data.form.processing || !$data.form.isDirty
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Save Vendor`);
            } else {
              return [
                vue.createTextVNode("Save Vendor")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_button, {
            type: "submit",
            class: { "opacity-25": $data.form.processing || !$data.form.isDirty },
            disabled: $data.form.processing || !$data.form.isDirty
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Save Vendor")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$d = _sfc_main$d.setup;
_sfc_main$d.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Vendors/UpdateVendorForm.vue");
  return _sfc_setup$d ? _sfc_setup$d(props, ctx) : void 0;
};
var UpdateVendorForm = /* @__PURE__ */ _export_sfc(_sfc_main$d, [["ssrRender", _sfc_ssrRender$d]]);
var UpdateVendorForm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": UpdateVendorForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$c = {
  components: {
    VendorsLayout,
    UpdateVendorForm,
    ButtonLink,
    DeleteVendorForm,
    ContactAside
  },
  props: {
    vendor: Object
  }
};
function _sfc_ssrRender$c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_vendors_layout = vue.resolveComponent("vendors-layout");
  const _component_update_vendor_form = vue.resolveComponent("update-vendor-form");
  const _component_contact_aside = vue.resolveComponent("contact-aside");
  const _component_delete_vendor_form = vue.resolveComponent("delete-vendor-form");
  _push(serverRenderer.ssrRenderComponent(_component_vendors_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="lg:grid lg:grid-cols-8 gap-4"${_scopeId}><div class="lg:col-span-5 mb-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_update_vendor_form, { vendor: $props.vendor }, null, _parent2, _scopeId));
        _push2(`</div><div class="lg:col-span-3"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_contact_aside, {
          "contactable-type": "vendors",
          "contactable-id": $props.vendor.id,
          contacts: $props.vendor.contacts
        }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_delete_vendor_form, { vendor: $props.vendor }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", null, [
            vue.createVNode("div", { class: "lg:grid lg:grid-cols-8 gap-4" }, [
              vue.createVNode("div", { class: "lg:col-span-5 mb-6" }, [
                vue.createVNode(_component_update_vendor_form, { vendor: $props.vendor }, null, 8, ["vendor"])
              ]),
              vue.createVNode("div", { class: "lg:col-span-3" }, [
                vue.createVNode(_component_contact_aside, {
                  "contactable-type": "vendors",
                  "contactable-id": $props.vendor.id,
                  contacts: $props.vendor.contacts
                }, null, 8, ["contactable-id", "contacts"])
              ])
            ]),
            vue.createVNode(_component_delete_vendor_form, { vendor: $props.vendor }, null, 8, ["vendor"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$c = _sfc_main$c.setup;
_sfc_main$c.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Vendors/Show.vue");
  return _sfc_setup$c ? _sfc_setup$c(props, ctx) : void 0;
};
var Show$2 = /* @__PURE__ */ _export_sfc(_sfc_main$c, [["ssrRender", _sfc_ssrRender$c]]);
var Show$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show$2
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$b = {
  components: {
    PageAside,
    AsideLink,
    ButtonLink,
    SearchInput,
    JetSectionTitle: SectionTitle
  },
  computed: {
    productsLength: function() {
      return this.products.length;
    }
  },
  data() {
    return {
      products: this.$page.props.products,
      search: "",
      filteredProducts: this.$page.props.products
    };
  },
  watch: {
    search() {
      this.updateProducts();
    }
  },
  methods: {
    updateProducts() {
      this.filteredProducts = this.products.filter((product) => {
        if (product.name.toLowerCase().includes(this.search.toLowerCase())) {
          return true;
        } else {
          return false;
        }
      });
    }
  }
};
function _sfc_ssrRender$b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_page_aside = vue.resolveComponent("page-aside");
  const _component_jet_section_title = vue.resolveComponent("jet-section-title");
  const _component_search_input = vue.resolveComponent("search-input");
  const _component_aside_link = vue.resolveComponent("aside-link");
  _push(serverRenderer.ssrRenderComponent(_component_page_aside, vue.mergeProps({
    showOnMobile: _ctx.route().current("view.index")
  }, _attrs), {
    header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_jet_section_title, null, vue.createSlots({
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Products`);
            } else {
              return [
                vue.createTextVNode("Products")
              ];
            }
          }),
          _: 2
        }, [
          $options.productsLength > 0 ? {
            name: "description",
            fn: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Search ${serverRenderer.ssrInterpolate($options.productsLength)} ${serverRenderer.ssrInterpolate($options.productsLength > 1 ? "Products" : "Product")}`);
              } else {
                return [
                  vue.createTextVNode("Search " + vue.toDisplayString($options.productsLength) + " " + vue.toDisplayString($options.productsLength > 1 ? "Products" : "Product"), 1)
                ];
              }
            })
          } : void 0
        ]), _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_search_input, {
          modelValue: $data.search,
          "onUpdate:modelValue": ($event) => $data.search = $event,
          placeholder: "Search products"
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_jet_section_title, null, vue.createSlots({
            title: vue.withCtx(() => [
              vue.createTextVNode("Products")
            ]),
            _: 2
          }, [
            $options.productsLength > 0 ? {
              name: "description",
              fn: vue.withCtx(() => [
                vue.createTextVNode("Search " + vue.toDisplayString($options.productsLength) + " " + vue.toDisplayString($options.productsLength > 1 ? "Products" : "Product"), 1)
              ])
            } : void 0
          ]), 1024),
          vue.createVNode(_component_search_input, {
            modelValue: $data.search,
            "onUpdate:modelValue": ($event) => $data.search = $event,
            placeholder: "Search products"
          }, null, 8, ["modelValue", "onUpdate:modelValue"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white"${_scopeId}><ul class="divide-y divide-gray-200"${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($data.filteredProducts, (product) => {
          _push2(`<li class="bg-white"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_aside_link, {
            href: _ctx.route("view.show", product.id),
            current: _ctx.route().current("view.show", product.id)
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex-1 min-w-0"${_scopeId2}><div class="focus:outline-none"${_scopeId2}><span class="absolute inset-0" aria-hidden="true"${_scopeId2}></span><p class="text-sm text-gray-900"${_scopeId2}>${serverRenderer.ssrInterpolate(product.name)}</p>`);
                if (product.description) {
                  _push3(`<p class="text-sm text-gray-500 truncate"${_scopeId2}>${serverRenderer.ssrInterpolate(product.description)}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></div>`);
              } else {
                return [
                  vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                    vue.createVNode("div", { class: "focus:outline-none" }, [
                      vue.createVNode("span", {
                        class: "absolute inset-0",
                        "aria-hidden": "true"
                      }),
                      vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(product.name), 1),
                      product.description ? (vue.openBlock(), vue.createBlock("p", {
                        key: 0,
                        class: "text-sm text-gray-500 truncate"
                      }, vue.toDisplayString(product.description), 1)) : vue.createCommentVNode("", true)
                    ])
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</li>`);
        });
        _push2(`<!--]--></ul>`);
        if ($data.search != "" && $data.filteredProducts.length < 1) {
          _push2(`<div class="p-6"${_scopeId}> No items match that search. <span class="underline cursor-pointer"${_scopeId}>Clear search?</span></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "bg-white" }, [
            vue.createVNode("ul", { class: "divide-y divide-gray-200" }, [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.filteredProducts, (product) => {
                return vue.openBlock(), vue.createBlock("li", {
                  key: product.id,
                  class: "bg-white"
                }, [
                  vue.createVNode(_component_aside_link, {
                    href: _ctx.route("view.show", product.id),
                    current: _ctx.route().current("view.show", product.id)
                  }, {
                    default: vue.withCtx(() => [
                      vue.createVNode("div", { class: "flex-1 min-w-0" }, [
                        vue.createVNode("div", { class: "focus:outline-none" }, [
                          vue.createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          vue.createVNode("p", { class: "text-sm text-gray-900" }, vue.toDisplayString(product.name), 1),
                          product.description ? (vue.openBlock(), vue.createBlock("p", {
                            key: 0,
                            class: "text-sm text-gray-500 truncate"
                          }, vue.toDisplayString(product.description), 1)) : vue.createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 2
                  }, 1032, ["href", "current"])
                ]);
              }), 128))
            ]),
            $data.search != "" && $data.filteredProducts.length < 1 ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "p-6"
            }, [
              vue.createTextVNode(" No items match that search. "),
              vue.createVNode("span", {
                onClick: ($event) => $data.search = "",
                class: "underline cursor-pointer"
              }, "Clear search?", 8, ["onClick"])
            ])) : vue.createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$b = _sfc_main$b.setup;
_sfc_main$b.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/View/ViewAside.vue");
  return _sfc_setup$b ? _sfc_setup$b(props, ctx) : void 0;
};
var ViewAside = /* @__PURE__ */ _export_sfc(_sfc_main$b, [["ssrRender", _sfc_ssrRender$b]]);
var ViewAside$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ViewAside
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$a = {
  components: {
    ViewAside,
    AppLayout,
    BackLink,
    MainArea
  },
  computed: {
    isIndex() {
      return route().current("view.index");
    }
  }
};
function _sfc_ssrRender$a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = vue.resolveComponent("app-layout");
  const _component_main_area = vue.resolveComponent("main-area");
  const _component_back_link = vue.resolveComponent("back-link");
  const _component_view_aside = vue.resolveComponent("view-aside");
  _push(serverRenderer.ssrRenderComponent(_component_app_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex-1 relative z-0 flex overflow-hidden"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (!$options.isIndex) {
                _push3(`<nav aria-label="Breadcrumb" class="px-4 md:pb-2 flex items-center justify-between"${_scopeId2}><div class="xl:hidden"${_scopeId2}>`);
                if (_ctx.route().current("view.*")) {
                  _push3(serverRenderer.ssrRenderComponent(_component_back_link, {
                    href: _ctx.route("view.index")
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Products`);
                      } else {
                        return [
                          vue.createTextVNode("Products")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div>`);
                serverRenderer.ssrRenderSlot(_ctx.$slots, "nav", {}, null, _push3, _parent3, _scopeId2);
                _push3(`</nav>`);
              } else {
                _push3(`<!---->`);
              }
              _push3(`<div class="py-2"${_scopeId2}>`);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              _push3(`</div>`);
            } else {
              return [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "px-4 md:pb-2 flex items-center justify-between"
                }, [
                  vue.createVNode("div", { class: "xl:hidden" }, [
                    _ctx.route().current("view.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("view.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Products")
                      ]),
                      _: 1
                    }, 8, ["href"])) : vue.createCommentVNode("", true)
                  ]),
                  vue.renderSlot(_ctx.$slots, "nav")
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_view_aside, null, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "flex-1 relative z-0 flex overflow-hidden" }, [
            vue.createVNode(_component_main_area, { dontShowOnMobile: $options.isIndex }, {
              default: vue.withCtx(() => [
                !$options.isIndex ? (vue.openBlock(), vue.createBlock("nav", {
                  key: 0,
                  "aria-label": "Breadcrumb",
                  class: "px-4 md:pb-2 flex items-center justify-between"
                }, [
                  vue.createVNode("div", { class: "xl:hidden" }, [
                    _ctx.route().current("view.*") ? (vue.openBlock(), vue.createBlock(_component_back_link, {
                      key: 0,
                      href: _ctx.route("view.index")
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Products")
                      ]),
                      _: 1
                    }, 8, ["href"])) : vue.createCommentVNode("", true)
                  ]),
                  vue.renderSlot(_ctx.$slots, "nav")
                ])) : vue.createCommentVNode("", true),
                vue.createVNode("div", { class: "py-2" }, [
                  vue.renderSlot(_ctx.$slots, "default")
                ])
              ]),
              _: 3
            }, 8, ["dontShowOnMobile"]),
            vue.createVNode(_component_view_aside)
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$a = _sfc_main$a.setup;
_sfc_main$a.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/View/ViewLayout.vue");
  return _sfc_setup$a ? _sfc_setup$a(props, ctx) : void 0;
};
var ViewLayout = /* @__PURE__ */ _export_sfc(_sfc_main$a, [["ssrRender", _sfc_ssrRender$a]]);
var ViewLayout$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ViewLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$9 = {
  components: {
    ViewLayout
  }
};
function _sfc_ssrRender$9(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_view_layout = vue.resolveComponent("view-layout");
  _push(serverRenderer.ssrRenderComponent(_component_view_layout, _attrs, null, _parent));
}
const _sfc_setup$9 = _sfc_main$9.setup;
_sfc_main$9.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/View/Index.vue");
  return _sfc_setup$9 ? _sfc_setup$9(props, ctx) : void 0;
};
var Index = /* @__PURE__ */ _export_sfc(_sfc_main$9, [["ssrRender", _sfc_ssrRender$9]]);
var Index$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Index
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$8 = {
  components: {
    SectionTitle,
    TableTable,
    TableHead,
    TableH,
    TableD
  },
  props: {
    productQuantities: {
      type: Array,
      required: true
    },
    selectedSize: {
      type: [Object],
      required: false,
      default: {}
    }
  },
  methods: {
    updateSize(sizeId) {
      this.$emit("updateSize", sizeId);
    }
  }
};
function _sfc_ssrRender$8(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_section_title = vue.resolveComponent("section-title");
  const _component_table_table = vue.resolveComponent("table-table");
  const _component_table_head = vue.resolveComponent("table-head");
  const _component_table_h = vue.resolveComponent("table-h");
  const _component_table_d = vue.resolveComponent("table-d");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "overflow-auto" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_section_title, null, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Inventory Availability`);
      } else {
        return [
          vue.createTextVNode("Inventory Availability")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_table, { class: "col-span-6 overflow-auto" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_table_head, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Size`);
                  } else {
                    return [
                      vue.createTextVNode("Size")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Inventory`);
                  } else {
                    return [
                      vue.createTextVNode("Inventory")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Ready`);
                  } else {
                    return [
                      vue.createTextVNode("Ready")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`On Hold`);
                  } else {
                    return [
                      vue.createTextVNode("On Hold")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, {
                "data-tip": "Quantity of inventory items that have not been removed from inventory, but are sold.",
                class: "tooltip tooltip-left"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Unmatched`);
                  } else {
                    return [
                      vue.createTextVNode("Unmatched")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, { title: "All available inventory with inventory ready date in the future." }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Available`);
                  } else {
                    return [
                      vue.createTextVNode("Available")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Size")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Inventory")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Ready")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("On Hold")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, {
                  "data-tip": "Quantity of inventory items that have not been removed from inventory, but are sold.",
                  class: "tooltip tooltip-left"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Unmatched")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, { title: "All available inventory with inventory ready date in the future." }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Available")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<tbody${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($props.productQuantities, (quantity, index) => {
          var _a;
          _push2(`<tr${serverRenderer.ssrRenderAttr("tabindex", index + 1)} class="${serverRenderer.ssrRenderClass([
            "cursor-pointer hover:bg-gray-50",
            quantity.size_id == ((_a = $props.selectedSize) == null ? void 0 : _a.id) ? "bg-gray-50" : ""
          ])}"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(quantity.size_name)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(quantity.size_name), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(quantity.total)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(quantity.total), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(quantity.ready)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(quantity.ready), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(quantity.on_hold)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(quantity.on_hold), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, {
            "data-tip": "Inventory items that have not been removed from inventory, but are sold.",
            class: "tooltip tooltip-left"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(quantity.sold)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(quantity.sold), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(quantity.available)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(quantity.available), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</tr>`);
        });
        _push2(`<!--]--></tbody>`);
      } else {
        return [
          vue.createVNode(_component_table_head, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_table_h, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Size")
                ]),
                _: 1
              }),
              vue.createVNode(_component_table_h, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Inventory")
                ]),
                _: 1
              }),
              vue.createVNode(_component_table_h, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Ready")
                ]),
                _: 1
              }),
              vue.createVNode(_component_table_h, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("On Hold")
                ]),
                _: 1
              }),
              vue.createVNode(_component_table_h, {
                "data-tip": "Quantity of inventory items that have not been removed from inventory, but are sold.",
                class: "tooltip tooltip-left"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Unmatched")
                ]),
                _: 1
              }),
              vue.createVNode(_component_table_h, { title: "All available inventory with inventory ready date in the future." }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Available")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode("tbody", null, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.productQuantities, (quantity, index) => {
              var _a;
              return vue.openBlock(), vue.createBlock("tr", {
                onClick: ($event) => $options.updateSize(quantity.size_id),
                onFocus: ($event) => $options.updateSize(quantity.size_id),
                tabindex: index + 1,
                class: [
                  "cursor-pointer hover:bg-gray-50",
                  quantity.size_id == ((_a = $props.selectedSize) == null ? void 0 : _a.id) ? "bg-gray-50" : ""
                ]
              }, [
                vue.createVNode(_component_table_d, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(quantity.size_name), 1)
                  ]),
                  _: 2
                }, 1024),
                vue.createVNode(_component_table_d, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(quantity.total), 1)
                  ]),
                  _: 2
                }, 1024),
                vue.createVNode(_component_table_d, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(quantity.ready), 1)
                  ]),
                  _: 2
                }, 1024),
                vue.createVNode(_component_table_d, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(quantity.on_hold), 1)
                  ]),
                  _: 2
                }, 1024),
                vue.createVNode(_component_table_d, {
                  "data-tip": "Inventory items that have not been removed from inventory, but are sold.",
                  class: "tooltip tooltip-left"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(quantity.sold), 1)
                  ]),
                  _: 2
                }, 1024),
                vue.createVNode(_component_table_d, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(quantity.available), 1)
                  ]),
                  _: 2
                }, 1024)
              ], 42, ["onClick", "onFocus", "tabindex"]);
            }), 256))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$8 = _sfc_main$8.setup;
_sfc_main$8.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/View/Components/AvailabilitySection.vue");
  return _sfc_setup$8 ? _sfc_setup$8(props, ctx) : void 0;
};
var AvailabilitySection = /* @__PURE__ */ _export_sfc(_sfc_main$8, [["ssrRender", _sfc_ssrRender$8]]);
var AvailabilitySection$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": AvailabilitySection
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$7 = {
  components: {
    SectionTitle,
    TableTable,
    TableHead,
    TableH,
    TableD
  },
  props: {
    product: {
      type: Object,
      required: true
    },
    productQuantities: {
      type: Array,
      required: true
    },
    selectedSize: {
      type: Object,
      required: false,
      default: {}
    },
    priceLevels: {
      type: Array,
      required: true
    }
  },
  methods: {
    updateSize(sizeId) {
      this.$emit("updateSize", sizeId);
    },
    getSizeBasePrice(sizeId) {
      const basePrice = this.product.base_prices.find((basePrice2) => {
        return basePrice2.size_id == sizeId;
      });
      return basePrice ? basePrice.unit_price : 0;
    },
    getSizePriceForPriceLevel(sizeId, level) {
      return this.getSizeBasePrice(sizeId) * level.percentage_more / 100 + this.getSizeBasePrice(sizeId);
    }
  }
};
function _sfc_ssrRender$7(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_section_title = vue.resolveComponent("section-title");
  const _component_table_table = vue.resolveComponent("table-table");
  const _component_table_head = vue.resolveComponent("table-head");
  const _component_table_h = vue.resolveComponent("table-h");
  const _component_table_d = vue.resolveComponent("table-d");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "pt-6 overflow-auto" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_section_title, null, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Pricing Details`);
      } else {
        return [
          vue.createTextVNode("Pricing Details")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_table_table, { class: "col-span-6 overflow-auto" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_table_head, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Size`);
                  } else {
                    return [
                      vue.createTextVNode("Size")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              if (!$props.priceLevels.length) {
                _push3(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`Price`);
                    } else {
                      return [
                        vue.createTextVNode("Price")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
              } else {
                _push3(`<!---->`);
              }
              _push3(`<!--[-->`);
              serverRenderer.ssrRenderList($props.priceLevels, (priceLevel) => {
                _push3(serverRenderer.ssrRenderComponent(_component_table_h, {
                  key: priceLevel.id,
                  title: priceLevel.name + " pricing"
                }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(priceLevel.name)}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(priceLevel.name), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
              });
              _push3(`<!--]-->`);
            } else {
              return [
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Size")
                  ]),
                  _: 1
                }),
                !$props.priceLevels.length ? (vue.openBlock(), vue.createBlock(_component_table_h, { key: 0 }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Price")
                  ]),
                  _: 1
                })) : vue.createCommentVNode("", true),
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.priceLevels, (priceLevel) => {
                  return vue.openBlock(), vue.createBlock(_component_table_h, {
                    key: priceLevel.id,
                    title: priceLevel.name + " pricing"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(vue.toDisplayString(priceLevel.name), 1)
                    ]),
                    _: 2
                  }, 1032, ["title"]);
                }), 128))
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<tbody${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($props.productQuantities, (size, index) => {
          var _a;
          _push2(`<tr${serverRenderer.ssrRenderAttr("tabindex", index + 1)} class="${serverRenderer.ssrRenderClass([
            "cursor-pointer hover:bg-gray-50",
            size.size_id == ((_a = $props.selectedSize) == null ? void 0 : _a.id) ? "bg-gray-50" : ""
          ])}"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(size.size_name)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(size.size_name), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          if (!$props.priceLevels.length) {
            _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`$${serverRenderer.ssrInterpolate($options.getSizeBasePrice(size.size_id))}`);
                } else {
                  return [
                    vue.createTextVNode("$" + vue.toDisplayString($options.getSizeBasePrice(size.size_id)), 1)
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
          _push2(`<!--[-->`);
          serverRenderer.ssrRenderList($props.priceLevels, (priceLevel) => {
            _push2(serverRenderer.ssrRenderComponent(_component_table_d, {
              key: priceLevel.id,
              title: priceLevel.name + " pricing"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`${serverRenderer.ssrInterpolate(_ctx.formatMoney(
                    $options.getSizePriceForPriceLevel(
                      size.size_id,
                      priceLevel
                    )
                  ))}`);
                } else {
                  return [
                    vue.createTextVNode(vue.toDisplayString(_ctx.formatMoney(
                      $options.getSizePriceForPriceLevel(
                        size.size_id,
                        priceLevel
                      )
                    )), 1)
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
          });
          _push2(`<!--]--></tr>`);
        });
        _push2(`<!--]--></tbody>`);
      } else {
        return [
          vue.createVNode(_component_table_head, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_table_h, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Size")
                ]),
                _: 1
              }),
              !$props.priceLevels.length ? (vue.openBlock(), vue.createBlock(_component_table_h, { key: 0 }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Price")
                ]),
                _: 1
              })) : vue.createCommentVNode("", true),
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.priceLevels, (priceLevel) => {
                return vue.openBlock(), vue.createBlock(_component_table_h, {
                  key: priceLevel.id,
                  title: priceLevel.name + " pricing"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(priceLevel.name), 1)
                  ]),
                  _: 2
                }, 1032, ["title"]);
              }), 128))
            ]),
            _: 1
          }),
          vue.createVNode("tbody", null, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.productQuantities, (size, index) => {
              var _a;
              return vue.openBlock(), vue.createBlock("tr", {
                onClick: ($event) => $options.updateSize(size.size_id),
                onFocus: ($event) => $options.updateSize(size.size_id),
                tabindex: index + 1,
                class: [
                  "cursor-pointer hover:bg-gray-50",
                  size.size_id == ((_a = $props.selectedSize) == null ? void 0 : _a.id) ? "bg-gray-50" : ""
                ]
              }, [
                vue.createVNode(_component_table_d, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(size.size_name), 1)
                  ]),
                  _: 2
                }, 1024),
                !$props.priceLevels.length ? (vue.openBlock(), vue.createBlock(_component_table_d, { key: 0 }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("$" + vue.toDisplayString($options.getSizeBasePrice(size.size_id)), 1)
                  ]),
                  _: 2
                }, 1024)) : vue.createCommentVNode("", true),
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.priceLevels, (priceLevel) => {
                  return vue.openBlock(), vue.createBlock(_component_table_d, {
                    key: priceLevel.id,
                    title: priceLevel.name + " pricing"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(vue.toDisplayString(_ctx.formatMoney(
                        $options.getSizePriceForPriceLevel(
                          size.size_id,
                          priceLevel
                        )
                      )), 1)
                    ]),
                    _: 2
                  }, 1032, ["title"]);
                }), 128))
              ], 42, ["onClick", "onFocus", "tabindex"]);
            }), 256))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$7 = _sfc_main$7.setup;
_sfc_main$7.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/View/Components/PricingSection.vue");
  return _sfc_setup$7 ? _sfc_setup$7(props, ctx) : void 0;
};
var PricingSection = /* @__PURE__ */ _export_sfc(_sfc_main$7, [["ssrRender", _sfc_ssrRender$7]]);
var PricingSection$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": PricingSection
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$6 = {
  components: {
    SectionTitle,
    TableTable,
    TableHead,
    TableH,
    TableD
  },
  props: {
    product: {
      type: Object,
      required: true
    },
    inventory: {
      type: Array,
      required: true
    },
    selectedSize: {
      type: Object,
      required: false
    }
  },
  computed: {
    groupInventoryDetails() {
      return this.inventory.filter((inventory) => {
        return inventory.size_id == this.selectedSize.id && inventory.type == "group";
      });
    },
    individualInventoryDetails() {
      return this.inventory.filter((inventory) => {
        return inventory.size_id == this.selectedSize.id && inventory.type == "individual";
      });
    },
    areInventoryDetails() {
      return this.groupInventoryDetails.length || this.individualInventoryDetails.length;
    }
  }
};
function _sfc_ssrRender$6(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_section_title = vue.resolveComponent("section-title");
  const _component_table_table = vue.resolveComponent("table-table");
  const _component_table_head = vue.resolveComponent("table-head");
  const _component_table_h = vue.resolveComponent("table-h");
  const _component_table_d = vue.resolveComponent("table-d");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid gap-4 divide-y divide-gray-100 col-span-6 overflow-hidden"${_scopeId}>`);
        if (!$options.areInventoryDetails) {
          _push2(`<div class="flex justify-center"${_scopeId}><div class="text-center"${_scopeId}><h3 class="text-xl font-semibold text-gray-500"${_scopeId}> No Inventory </h3><p class="text-gray-500"${_scopeId}> There are no inventory items in this size. </p></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($options.groupInventoryDetails.length) {
          _push2(`<div class="overflow-hidden"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_section_title, null, {
            title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Group Inventory Sized ${serverRenderer.ssrInterpolate($props.selectedSize.name)}`);
              } else {
                return [
                  vue.createTextVNode("Group Inventory Sized " + vue.toDisplayString($props.selectedSize.name), 1)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_table, { class: "max-h-96 block w-full relative overflow-auto" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(serverRenderer.ssrRenderComponent(_component_table_head, { class: "z-30" }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(serverRenderer.ssrRenderComponent(_component_table_h, { class: "sticky left-0 bg-white" }, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`ID`);
                          } else {
                            return [
                              vue.createTextVNode("ID")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`Location`);
                          } else {
                            return [
                              vue.createTextVNode("Location")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`Qty`);
                          } else {
                            return [
                              vue.createTextVNode("Qty")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`Ready`);
                          } else {
                            return [
                              vue.createTextVNode("Ready")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                    } else {
                      return [
                        vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("ID")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_table_h, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Location")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_table_h, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Qty")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_table_h, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Ready")
                          ]),
                          _: 1
                        })
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`<tbody${_scopeId2}><!--[-->`);
                serverRenderer.ssrRenderList($options.groupInventoryDetails, (inventory) => {
                  _push3(`<tr${_scopeId2}>`);
                  _push3(serverRenderer.ssrRenderComponent(_component_table_d, { class: "sticky left-0 z-10 bg-white" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`${serverRenderer.ssrInterpolate(inventory.id)}`);
                      } else {
                        return [
                          vue.createTextVNode(vue.toDisplayString(inventory.id), 1)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_table_d, { class: "truncate" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      var _a, _b;
                      if (_push4) {
                        _push4(`${serverRenderer.ssrInterpolate((_a = inventory.block) == null ? void 0 : _a.name)}`);
                      } else {
                        return [
                          vue.createTextVNode(vue.toDisplayString((_b = inventory.block) == null ? void 0 : _b.name), 1)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_table_d, { class: "truncate max-w-20" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`${serverRenderer.ssrInterpolate(inventory.quantity)}`);
                      } else {
                        return [
                          vue.createTextVNode(vue.toDisplayString(inventory.quantity), 1)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_table_d, {
                    "data-tip": "Inventory is estimated to be ready to sell by: " + _ctx.formatDate(inventory.ready_date),
                    class: "tooltip tooltip-left tooltip-small z-20"
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`${serverRenderer.ssrInterpolate(_ctx.formatDate(inventory.ready_date))}`);
                      } else {
                        return [
                          vue.createTextVNode(vue.toDisplayString(_ctx.formatDate(inventory.ready_date)), 1)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent3, _scopeId2));
                  _push3(`</tr>`);
                });
                _push3(`<!--]--></tbody>`);
              } else {
                return [
                  vue.createVNode(_component_table_head, { class: "z-30" }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("ID")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Location")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Qty")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Ready")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  vue.createVNode("tbody", null, [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($options.groupInventoryDetails, (inventory) => {
                      return vue.openBlock(), vue.createBlock("tr", null, [
                        vue.createVNode(_component_table_d, { class: "sticky left-0 z-10 bg-white" }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode(vue.toDisplayString(inventory.id), 1)
                          ]),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, { class: "truncate" }, {
                          default: vue.withCtx(() => {
                            var _a;
                            return [
                              vue.createTextVNode(vue.toDisplayString((_a = inventory.block) == null ? void 0 : _a.name), 1)
                            ];
                          }),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, { class: "truncate max-w-20" }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode(vue.toDisplayString(inventory.quantity), 1)
                          ]),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, {
                          "data-tip": "Inventory is estimated to be ready to sell by: " + _ctx.formatDate(inventory.ready_date),
                          class: "tooltip tooltip-left tooltip-small z-20"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode(vue.toDisplayString(_ctx.formatDate(inventory.ready_date)), 1)
                          ]),
                          _: 2
                        }, 1032, ["data-tip"])
                      ]);
                    }), 256))
                  ])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($options.individualInventoryDetails.length) {
          _push2(`<div class="${serverRenderer.ssrRenderClass([
            $options.groupInventoryDetails.length ? "pt-6" : "",
            "overflow-hidden"
          ])}"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_section_title, null, {
            title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Individual Inventory Sized ${serverRenderer.ssrInterpolate($props.selectedSize.name)}`);
              } else {
                return [
                  vue.createTextVNode("Individual Inventory Sized " + vue.toDisplayString($props.selectedSize.name), 1)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_table, { class: "max-h-96 block w-full relative overflow-auto" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(serverRenderer.ssrRenderComponent(_component_table_head, { class: "z-30" }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(serverRenderer.ssrRenderComponent(_component_table_h, { class: "sticky left-0 bg-white" }, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`ID`);
                          } else {
                            return [
                              vue.createTextVNode("ID")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`Location`);
                          } else {
                            return [
                              vue.createTextVNode("Location")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`Row`);
                          } else {
                            return [
                              vue.createTextVNode("Row")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`Plant #`);
                          } else {
                            return [
                              vue.createTextVNode("Plant #")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`Ready`);
                          } else {
                            return [
                              vue.createTextVNode("Ready")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                    } else {
                      return [
                        vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("ID")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_table_h, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Location")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_table_h, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Row")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_table_h, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Plant #")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_table_h, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Ready")
                          ]),
                          _: 1
                        })
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`<tbody${_scopeId2}><!--[-->`);
                serverRenderer.ssrRenderList($options.individualInventoryDetails, (inventory) => {
                  _push3(`<tr${_scopeId2}>`);
                  _push3(serverRenderer.ssrRenderComponent(_component_table_d, { class: "sticky left-0 z-10 bg-white" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`${serverRenderer.ssrInterpolate(inventory.id)}`);
                      } else {
                        return [
                          vue.createTextVNode(vue.toDisplayString(inventory.id), 1)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_table_d, { class: "truncate max-w-20" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      var _a, _b;
                      if (_push4) {
                        _push4(`${serverRenderer.ssrInterpolate((_a = inventory.block) == null ? void 0 : _a.name)}`);
                      } else {
                        return [
                          vue.createTextVNode(vue.toDisplayString((_b = inventory.block) == null ? void 0 : _b.name), 1)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_table_d, { class: "truncate max-w-20" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      var _a, _b;
                      if (_push4) {
                        _push4(`${serverRenderer.ssrInterpolate((_a = inventory.place) == null ? void 0 : _a.row_number)}`);
                      } else {
                        return [
                          vue.createTextVNode(vue.toDisplayString((_b = inventory.place) == null ? void 0 : _b.row_number), 1)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_table_d, { class: "truncate max-w-20" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      var _a, _b;
                      if (_push4) {
                        _push4(`${serverRenderer.ssrInterpolate((_a = inventory.place) == null ? void 0 : _a.plant_number)}`);
                      } else {
                        return [
                          vue.createTextVNode(vue.toDisplayString((_b = inventory.place) == null ? void 0 : _b.plant_number), 1)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_table_d, {
                    "data-tip": "Inventory is estimated to be ready to sell by: " + _ctx.formatDate(inventory.ready_date),
                    class: "tooltip tooltip-left tooltip-small z-20"
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`${serverRenderer.ssrInterpolate(_ctx.formatDate(inventory.ready_date))}`);
                      } else {
                        return [
                          vue.createTextVNode(vue.toDisplayString(_ctx.formatDate(inventory.ready_date)), 1)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent3, _scopeId2));
                  _push3(`</tr>`);
                });
                _push3(`<!--]--></tbody>`);
              } else {
                return [
                  vue.createVNode(_component_table_head, { class: "z-30" }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("ID")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Location")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Row")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Plant #")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Ready")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  vue.createVNode("tbody", null, [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($options.individualInventoryDetails, (inventory) => {
                      return vue.openBlock(), vue.createBlock("tr", null, [
                        vue.createVNode(_component_table_d, { class: "sticky left-0 z-10 bg-white" }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode(vue.toDisplayString(inventory.id), 1)
                          ]),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, { class: "truncate max-w-20" }, {
                          default: vue.withCtx(() => {
                            var _a;
                            return [
                              vue.createTextVNode(vue.toDisplayString((_a = inventory.block) == null ? void 0 : _a.name), 1)
                            ];
                          }),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, { class: "truncate max-w-20" }, {
                          default: vue.withCtx(() => {
                            var _a;
                            return [
                              vue.createTextVNode(vue.toDisplayString((_a = inventory.place) == null ? void 0 : _a.row_number), 1)
                            ];
                          }),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, { class: "truncate max-w-20" }, {
                          default: vue.withCtx(() => {
                            var _a;
                            return [
                              vue.createTextVNode(vue.toDisplayString((_a = inventory.place) == null ? void 0 : _a.plant_number), 1)
                            ];
                          }),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, {
                          "data-tip": "Inventory is estimated to be ready to sell by: " + _ctx.formatDate(inventory.ready_date),
                          class: "tooltip tooltip-left tooltip-small z-20"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode(vue.toDisplayString(_ctx.formatDate(inventory.ready_date)), 1)
                          ]),
                          _: 2
                        }, 1032, ["data-tip"])
                      ]);
                    }), 256))
                  ])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid gap-4 divide-y divide-gray-100 col-span-6 overflow-hidden" }, [
            !$options.areInventoryDetails ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "flex justify-center"
            }, [
              vue.createVNode("div", { class: "text-center" }, [
                vue.createVNode("h3", { class: "text-xl font-semibold text-gray-500" }, " No Inventory "),
                vue.createVNode("p", { class: "text-gray-500" }, " There are no inventory items in this size. ")
              ])
            ])) : vue.createCommentVNode("", true),
            $options.groupInventoryDetails.length ? (vue.openBlock(), vue.createBlock("div", {
              key: 1,
              class: "overflow-hidden"
            }, [
              vue.createVNode(_component_section_title, null, {
                title: vue.withCtx(() => [
                  vue.createTextVNode("Group Inventory Sized " + vue.toDisplayString($props.selectedSize.name), 1)
                ]),
                _: 1
              }),
              vue.createVNode(_component_table_table, { class: "max-h-96 block w-full relative overflow-auto" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_table_head, { class: "z-30" }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("ID")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Location")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Qty")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Ready")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  vue.createVNode("tbody", null, [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($options.groupInventoryDetails, (inventory) => {
                      return vue.openBlock(), vue.createBlock("tr", null, [
                        vue.createVNode(_component_table_d, { class: "sticky left-0 z-10 bg-white" }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode(vue.toDisplayString(inventory.id), 1)
                          ]),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, { class: "truncate" }, {
                          default: vue.withCtx(() => {
                            var _a;
                            return [
                              vue.createTextVNode(vue.toDisplayString((_a = inventory.block) == null ? void 0 : _a.name), 1)
                            ];
                          }),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, { class: "truncate max-w-20" }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode(vue.toDisplayString(inventory.quantity), 1)
                          ]),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, {
                          "data-tip": "Inventory is estimated to be ready to sell by: " + _ctx.formatDate(inventory.ready_date),
                          class: "tooltip tooltip-left tooltip-small z-20"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode(vue.toDisplayString(_ctx.formatDate(inventory.ready_date)), 1)
                          ]),
                          _: 2
                        }, 1032, ["data-tip"])
                      ]);
                    }), 256))
                  ])
                ]),
                _: 1
              })
            ])) : vue.createCommentVNode("", true),
            $options.individualInventoryDetails.length ? (vue.openBlock(), vue.createBlock("div", {
              key: 2,
              class: [
                $options.groupInventoryDetails.length ? "pt-6" : "",
                "overflow-hidden"
              ]
            }, [
              vue.createVNode(_component_section_title, null, {
                title: vue.withCtx(() => [
                  vue.createTextVNode("Individual Inventory Sized " + vue.toDisplayString($props.selectedSize.name), 1)
                ]),
                _: 1
              }),
              vue.createVNode(_component_table_table, { class: "max-h-96 block w-full relative overflow-auto" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_table_head, { class: "z-30" }, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_table_h, { class: "sticky left-0 bg-white" }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("ID")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Location")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Row")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Plant #")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Ready")
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  vue.createVNode("tbody", null, [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($options.individualInventoryDetails, (inventory) => {
                      return vue.openBlock(), vue.createBlock("tr", null, [
                        vue.createVNode(_component_table_d, { class: "sticky left-0 z-10 bg-white" }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode(vue.toDisplayString(inventory.id), 1)
                          ]),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, { class: "truncate max-w-20" }, {
                          default: vue.withCtx(() => {
                            var _a;
                            return [
                              vue.createTextVNode(vue.toDisplayString((_a = inventory.block) == null ? void 0 : _a.name), 1)
                            ];
                          }),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, { class: "truncate max-w-20" }, {
                          default: vue.withCtx(() => {
                            var _a;
                            return [
                              vue.createTextVNode(vue.toDisplayString((_a = inventory.place) == null ? void 0 : _a.row_number), 1)
                            ];
                          }),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, { class: "truncate max-w-20" }, {
                          default: vue.withCtx(() => {
                            var _a;
                            return [
                              vue.createTextVNode(vue.toDisplayString((_a = inventory.place) == null ? void 0 : _a.plant_number), 1)
                            ];
                          }),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_table_d, {
                          "data-tip": "Inventory is estimated to be ready to sell by: " + _ctx.formatDate(inventory.ready_date),
                          class: "tooltip tooltip-left tooltip-small z-20"
                        }, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode(vue.toDisplayString(_ctx.formatDate(inventory.ready_date)), 1)
                          ]),
                          _: 2
                        }, 1032, ["data-tip"])
                      ]);
                    }), 256))
                  ])
                ]),
                _: 1
              })
            ], 2)) : vue.createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$6 = _sfc_main$6.setup;
_sfc_main$6.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/View/Components/InventoryLocationsSection.vue");
  return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
};
var InventoryLocationsSection = /* @__PURE__ */ _export_sfc(_sfc_main$6, [["ssrRender", _sfc_ssrRender$6]]);
var InventoryLocationsSection$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventoryLocationsSection
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$5 = {
  components: {
    DetailsSection,
    SectionTitle,
    ProductHoldView
  },
  props: {
    product: {
      type: [Object, Boolean],
      required: false
    },
    size: {
      type: [Object, Boolean],
      required: false
    }
  }
};
function _sfc_ssrRender$5(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_section_title = vue.resolveComponent("section-title");
  const _component_ProductHoldView = vue.resolveComponent("ProductHoldView");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, vue.mergeProps({ class: "mb-4" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_section_title, { class: "mb-0" }, {
          title: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            var _a, _b;
            if (_push3) {
              _push3(`Product Orders for size ${serverRenderer.ssrInterpolate((_a = $props.size) == null ? void 0 : _a.name)}`);
            } else {
              return [
                vue.createTextVNode("Product Orders for size " + vue.toDisplayString((_b = $props.size) == null ? void 0 : _b.name), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_ProductHoldView, {
          product: $props.product,
          size: $props.size
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_section_title, { class: "mb-0" }, {
            title: vue.withCtx(() => {
              var _a;
              return [
                vue.createTextVNode("Product Orders for size " + vue.toDisplayString((_a = $props.size) == null ? void 0 : _a.name), 1)
              ];
            }),
            _: 1
          }),
          vue.createVNode(_component_ProductHoldView, {
            product: $props.product,
            size: $props.size
          }, null, 8, ["product", "size"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$5 = _sfc_main$5.setup;
_sfc_main$5.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/View/Components/ProductOrdersSection.vue");
  return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
};
var ProductOrdersSection = /* @__PURE__ */ _export_sfc(_sfc_main$5, [["ssrRender", _sfc_ssrRender$5]]);
var ProductOrdersSection$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": ProductOrdersSection
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$4 = {
  components: {
    DetailsSection,
    AvailabilitySection,
    PricingSection,
    InventoryLocationsSection,
    ProductOrdersSection
  },
  data() {
    var _a;
    return {
      product: this.$page.props.product,
      productQuantities: this.$page.props.productQuantities,
      inventorySizes: this.$page.props.inventorySizes,
      inventory: this.$page.props.inventory,
      selectedSize: (_a = this.$page.props.inventorySizes[0]) != null ? _a : null,
      priceLevels: this.$page.props.priceLevels
    };
  },
  methods: {
    updateSize(sizeId) {
      this.selectedSize = this.inventorySizes.find(
        (size) => size.id == sizeId
      );
    }
  }
};
function _sfc_ssrRender$4(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_availability_section = vue.resolveComponent("availability-section");
  const _component_pricing_section = vue.resolveComponent("pricing-section");
  const _component_ProductOrdersSection = vue.resolveComponent("ProductOrdersSection");
  const _component_inventory_locations_section = vue.resolveComponent("inventory-locations-section");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "grid gap-6 col-span-6 grid-cols-12 items-start" }, _attrs))}><div class="lg:col-span-7 col-span-12 sticky top-0">`);
  _push(serverRenderer.ssrRenderComponent(_component_details_section, { class: "h-full" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid gap-4 divide-y divide-gray-100"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_availability_section, {
          "product-quantities": $data.productQuantities,
          "selected-size": $data.selectedSize,
          onUpdateSize: $options.updateSize
        }, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_pricing_section, {
          product: $data.product,
          "product-quantities": $data.productQuantities,
          "selected-size": $data.selectedSize,
          "price-levels": $data.priceLevels,
          onUpdateSize: $options.updateSize
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid gap-4 divide-y divide-gray-100" }, [
            vue.createVNode(_component_availability_section, {
              "product-quantities": $data.productQuantities,
              "selected-size": $data.selectedSize,
              onUpdateSize: $options.updateSize
            }, null, 8, ["product-quantities", "selected-size", "onUpdateSize"]),
            vue.createVNode(_component_pricing_section, {
              product: $data.product,
              "product-quantities": $data.productQuantities,
              "selected-size": $data.selectedSize,
              "price-levels": $data.priceLevels,
              onUpdateSize: $options.updateSize
            }, null, 8, ["product", "product-quantities", "selected-size", "price-levels", "onUpdateSize"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="lg:col-span-5 col-span-12">`);
  _push(serverRenderer.ssrRenderComponent(_component_ProductOrdersSection, {
    product: $data.product,
    size: $data.selectedSize
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_inventory_locations_section, {
    product: $data.product,
    inventory: $data.inventory,
    "selected-size": $data.selectedSize
  }, null, _parent));
  _push(`</div></div>`);
}
const _sfc_setup$4 = _sfc_main$4.setup;
_sfc_main$4.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/View/Components/InventoryDetail.vue");
  return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
};
var InventoryDetail = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["ssrRender", _sfc_ssrRender$4]]);
var InventoryDetail$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventoryDetail
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$3 = {
  components: {
    ProductDetails,
    JetButton,
    ViewLayout,
    InventoryDetail
  },
  props: ["products", "product", "productQuantities", "inventorySizes", "inventory", "priceLevels", "selectedSize"]
};
function _sfc_ssrRender$3(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_view_layout = vue.resolveComponent("view-layout");
  const _component_product_details = vue.resolveComponent("product-details");
  const _component_InventoryDetail = vue.resolveComponent("InventoryDetail");
  _push(serverRenderer.ssrRenderComponent(_component_view_layout, _attrs, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid gap-6"${_scopeId}><div class="col-span-6"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_product_details, { product: $props.product }, null, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(serverRenderer.ssrRenderComponent(_component_InventoryDetail, {
          product: $props.product,
          productQuantities: $props.productQuantities,
          inventorySizes: $props.inventorySizes,
          inventory: $props.inventory,
          priceLevels: $props.priceLevels
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "grid gap-6" }, [
            vue.createVNode("div", { class: "col-span-6" }, [
              vue.createVNode(_component_product_details, { product: $props.product }, null, 8, ["product"])
            ]),
            vue.createVNode(_component_InventoryDetail, {
              product: $props.product,
              productQuantities: $props.productQuantities,
              inventorySizes: $props.inventorySizes,
              inventory: $props.inventory,
              priceLevels: $props.priceLevels
            }, null, 8, ["product", "productQuantities", "inventorySizes", "inventory", "priceLevels"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3 = _sfc_main$3.setup;
_sfc_main$3.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/View/Show.vue");
  return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
};
var Show = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["ssrRender", _sfc_ssrRender$3]]);
var Show$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": Show
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2 = {
  components: {
    ExternalLinkIcon: outline.ExternalLinkIcon,
    ArrowDownIcon: outline.ArrowDownIcon,
    ArrowUpIcon: outline.ArrowUpIcon,
    DetailsSection,
    TableTable,
    TableHead,
    TableH,
    TableD,
    SearchInput,
    Pagination
  },
  props: {
    inventory: {
      type: Object
    },
    filters: {
      type: Object
    }
  },
  data() {
    var _a, _b, _c;
    return {
      search: ((_a = this.filters) == null ? void 0 : _a.search) || "",
      orderBy: ((_b = this.filters) == null ? void 0 : _b.orderBy) || "",
      orderByDirection: ((_c = this.filters) == null ? void 0 : _c.orderByDirection) || ""
    };
  },
  watch: {
    search: _debounce__default["default"](function(value) {
      this.updateSearch();
    }, 300)
  },
  methods: {
    updateItemBy(value) {
      if (this.orderBy === value) {
        this.orderByDirection = this.orderByDirection === "desc" ? "asc" : "desc";
      } else {
        this.orderBy = value;
        this.orderByDirection = "desc";
      }
      this.updateSearch();
    },
    updateSearch() {
      this.$inertia.get(
        this.route("inventory.index"),
        {
          search: this.search,
          orderBy: this.orderBy,
          orderByDirection: this.orderByDirection
        },
        {
          preserveState: true,
          replace: true
        }
      );
    },
    showItem(item) {
      this.$inertia.get(route("inventory.show", item));
    }
  }
};
function _sfc_ssrRender$2(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_details_section = vue.resolveComponent("details-section");
  const _component_search_input = vue.resolveComponent("search-input");
  const _component_table_table = vue.resolveComponent("table-table");
  const _component_table_head = vue.resolveComponent("table-head");
  const _component_table_h = vue.resolveComponent("table-h");
  const _component_table_d = vue.resolveComponent("table-d");
  const _component_pagination = vue.resolveComponent("pagination");
  _push(serverRenderer.ssrRenderComponent(_component_details_section, _attrs, {
    title: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, () => {
          _push2(`Inventory`);
        }, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "title", {}, () => [
            vue.createTextVNode("Inventory")
          ])
        ];
      }
    }),
    aside: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_search_input, {
          modelValue: $data.search,
          "onUpdate:modelValue": ($event) => $data.search = $event
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_search_input, {
            modelValue: $data.search,
            "onUpdate:modelValue": ($event) => $data.search = $event
          }, null, 8, ["modelValue", "onUpdate:modelValue"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      var _a, _b, _c, _d;
      if (_push2) {
        _push2(`<div class="col-span-6 overflow-auto"${_scopeId}>`);
        _push2(serverRenderer.ssrRenderComponent(_component_table_table, { class: "text-left" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_table_head, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Inventory ID`);
                        } else {
                          return [
                            vue.createTextVNode("Inventory ID")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Date Added`);
                        } else {
                          return [
                            vue.createTextVNode("Date Added")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Product Name`);
                        } else {
                          return [
                            vue.createTextVNode("Product Name")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Size`);
                        } else {
                          return [
                            vue.createTextVNode("Size")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Block Location`);
                        } else {
                          return [
                            vue.createTextVNode("Block Location")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Inventory ID")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Date Added")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Product Name")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Size")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_table_h, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Block Location")
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<tbody${_scopeId2}><!--[-->`);
              serverRenderer.ssrRenderList($props.inventory.data, (item) => {
                _push3(`<tr tabindex="0" class="px-2 border-b border-gray-50 last:border-transparent hover:border-black focus:border-black transition cursor-pointer"${_scopeId2}>`);
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(item.id)}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(item.id), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(_ctx.formatDate(item.created_at))}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(_ctx.formatDate(item.created_at)), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(item.product_name)}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(item.product_name), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(item.size_name)}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(item.size_name), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(serverRenderer.ssrRenderComponent(_component_table_d, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate(item.block.name)}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString(item.block.name), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
                _push3(`</tr>`);
              });
              _push3(`<!--]--></tbody>`);
            } else {
              return [
                vue.createVNode(_component_table_head, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Inventory ID")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Date Added")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Product Name")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Size")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Block Location")
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                vue.createVNode("tbody", null, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.inventory.data, (item) => {
                    return vue.openBlock(), vue.createBlock("tr", {
                      key: item.id,
                      tabindex: "0",
                      class: "px-2 border-b border-gray-50 last:border-transparent hover:border-black focus:border-black transition cursor-pointer",
                      onClick: ($event) => $options.showItem(item)
                    }, [
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(item.id), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(_ctx.formatDate(item.created_at)), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(item.product_name), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(item.size_name), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(item.block.name), 1)
                        ]),
                        _: 2
                      }, 1024)
                    ], 8, ["onClick"]);
                  }), 128))
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        if (((_b = (_a = $props.inventory) == null ? void 0 : _a.data) == null ? void 0 : _b.length) < 1) {
          _push2(`<div class="p-4"${_scopeId}><div class="text-gray-500"${_scopeId}>No Inventory found.</div></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.inventory.data) {
          _push2(serverRenderer.ssrRenderComponent(_component_pagination, { items: $props.inventory }, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          vue.createVNode("div", { class: "col-span-6 overflow-auto" }, [
            vue.createVNode(_component_table_table, { class: "text-left" }, {
              default: vue.withCtx(() => [
                vue.createVNode(_component_table_head, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Inventory ID")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Date Added")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Product Name")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Size")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_table_h, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Block Location")
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                vue.createVNode("tbody", null, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.inventory.data, (item) => {
                    return vue.openBlock(), vue.createBlock("tr", {
                      key: item.id,
                      tabindex: "0",
                      class: "px-2 border-b border-gray-50 last:border-transparent hover:border-black focus:border-black transition cursor-pointer",
                      onClick: ($event) => $options.showItem(item)
                    }, [
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(item.id), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(_ctx.formatDate(item.created_at)), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(item.product_name), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(item.size_name), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_table_d, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(item.block.name), 1)
                        ]),
                        _: 2
                      }, 1024)
                    ], 8, ["onClick"]);
                  }), 128))
                ])
              ]),
              _: 1
            }),
            ((_d = (_c = $props.inventory) == null ? void 0 : _c.data) == null ? void 0 : _d.length) < 1 ? (vue.openBlock(), vue.createBlock("div", {
              key: 0,
              class: "p-4"
            }, [
              vue.createVNode("div", { class: "text-gray-500" }, "No Inventory found.")
            ])) : vue.createCommentVNode("", true),
            $props.inventory.data ? (vue.openBlock(), vue.createBlock(_component_pagination, {
              key: 1,
              items: $props.inventory
            }, null, 8, ["items"])) : vue.createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$2 = _sfc_main$2.setup;
_sfc_main$2.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Inventory/Components/InventoryView.vue");
  return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
};
var InventoryView = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["ssrRender", _sfc_ssrRender$2]]);
var InventoryView$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": InventoryView
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1 = {
  components: {
    CalendarIcon: solid.CalendarIcon,
    LocationMarkerIcon: solid.LocationMarkerIcon,
    UsersIcon: solid.UsersIcon
  },
  props: {
    orders: {
      type: Object
    }
  },
  methods: {
    formatDate: (value) => moment__default["default"](value).format("MM/DD/YYYY")
  }
};
function _sfc_ssrRender$1(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_CalendarIcon = vue.resolveComponent("CalendarIcon");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "bg-white shadow overflow-hidden sm:rounded-md" }, _attrs))}><ul role="list" class="divide-y divide-gray-200"><!--[-->`);
  serverRenderer.ssrRenderList($props.orders.data, (order) => {
    var _a;
    _push(`<li><a href="#" class="block hover:bg-gray-50"><div class="px-4 py-4 sm:px-6"><div class="flex items-center justify-between"><p class="text-sm font-medium text-indigo-600 truncate">${serverRenderer.ssrInterpolate(order.customer.name)}</p><div class="ml-2 flex-shrink-0 flex"><p class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">${serverRenderer.ssrInterpolate((_a = order.paymentStatus) == null ? void 0 : _a.name)}</p></div></div><div class="mt-2 sm:flex sm:justify-between"><div class="sm:flex"><p class="flex items-center text-sm text-gray-500"> # ${serverRenderer.ssrInterpolate(order.id)}</p><div class="mt-2 flex items-center text-sm text-gray-500 sm:mt-0">`);
    _push(serverRenderer.ssrRenderComponent(_component_CalendarIcon, {
      class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
      "aria-hidden": "true"
    }, null, _parent));
    _push(`<p><time${serverRenderer.ssrRenderAttr("datetime", order.date)}>${serverRenderer.ssrInterpolate(order.date)}</time></p></div></div><div class="mt-2 flex items-center text-sm text-gray-500 sm:mt-0">`);
    _push(serverRenderer.ssrRenderComponent(_component_CalendarIcon, {
      class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
      "aria-hidden": "true"
    }, null, _parent));
    _push(`<p><time${serverRenderer.ssrRenderAttr("datetime", order.date)}>${serverRenderer.ssrInterpolate(order.date)}</time></p></div></div></div></a></li>`);
  });
  _push(`<!--]--></ul></div>`);
}
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/OrdersList.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
var OrdersList = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["ssrRender", _sfc_ssrRender$1]]);
var OrdersList$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": OrdersList
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main = {
  props: {
    orders: {
      type: Object
    }
  },
  data() {
    return {
      orderBy: "id",
      orderByDirection: "asc"
    };
  },
  methods: {
    updateOrderBy(orderBy) {
      if (this.orderBy == orderBy) {
        this.orderByDirection = this.orderByDirection == "asc" ? "desc" : "asc";
      } else {
        this.orderBy = orderBy;
        this.orderByDirection = "asc";
      }
    }
  }
};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_table_table = vue.resolveComponent("table-table");
  const _component_table_head = vue.resolveComponent("table-head");
  const _component_table_h = vue.resolveComponent("table-h");
  const _component_ArrowUpIcon = vue.resolveComponent("ArrowUpIcon");
  const _component_ArrowDownIcon = vue.resolveComponent("ArrowDownIcon");
  const _component_table_d = vue.resolveComponent("table-d");
  _push(serverRenderer.ssrRenderComponent(_component_table_table, vue.mergeProps({ class: "text-left" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_table_head, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="${serverRenderer.ssrRenderClass([$data.orderBy == "id" ? "text-gray-900" : "", "select-none cursor-pointer flex items-center"])}"${_scopeId3}> Order # `);
                    if ($data.orderBy == "id" && $data.orderByDirection == "asc") {
                      _push4(serverRenderer.ssrRenderComponent(_component_ArrowUpIcon, { class: "ml-2 w-3 h-3" }, null, _parent4, _scopeId3));
                    } else {
                      _push4(serverRenderer.ssrRenderComponent(_component_ArrowDownIcon, { class: "ml-2 w-3 h-3" }, null, _parent4, _scopeId3));
                    }
                    _push4(`</div>`);
                  } else {
                    return [
                      vue.createVNode("div", {
                        class: ["select-none cursor-pointer flex items-center", $data.orderBy == "id" ? "text-gray-900" : ""],
                        onClick: ($event) => $options.updateOrderBy("id")
                      }, [
                        vue.createTextVNode(" Order # "),
                        $data.orderBy == "id" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                          key: 0,
                          class: "ml-2 w-3 h-3"
                        })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                          key: 1,
                          class: "ml-2 w-3 h-3"
                        }))
                      ], 10, ["onClick"])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="${serverRenderer.ssrRenderClass([$data.orderBy == "date" ? "text-gray-900" : "", "select-none cursor-pointer flex items-center"])}"${_scopeId3}> Date `);
                    if ($data.orderBy == "date" && $data.orderByDirection == "asc") {
                      _push4(serverRenderer.ssrRenderComponent(_component_ArrowUpIcon, { class: "ml-2 w-3 h-3" }, null, _parent4, _scopeId3));
                    } else {
                      _push4(serverRenderer.ssrRenderComponent(_component_ArrowDownIcon, { class: "ml-2 w-3 h-3" }, null, _parent4, _scopeId3));
                    }
                    _push4(`</div>`);
                  } else {
                    return [
                      vue.createVNode("div", {
                        class: ["select-none cursor-pointer flex items-center", $data.orderBy == "date" ? "text-gray-900" : ""],
                        onClick: ($event) => $options.updateOrderBy("date")
                      }, [
                        vue.createTextVNode(" Date "),
                        $data.orderBy == "date" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                          key: 0,
                          class: "ml-2 w-3 h-3"
                        })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                          key: 1,
                          class: "ml-2 w-3 h-3"
                        }))
                      ], 10, ["onClick"])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="${serverRenderer.ssrRenderClass([$data.orderBy == "customer" ? "text-gray-900" : "", "select-none cursor-pointer flex items-center"])}"${_scopeId3}> Customer `);
                    if ($data.orderBy == "customer" && $data.orderByDirection == "asc") {
                      _push4(serverRenderer.ssrRenderComponent(_component_ArrowUpIcon, { class: "ml-2 w-3 h-3" }, null, _parent4, _scopeId3));
                    } else {
                      _push4(serverRenderer.ssrRenderComponent(_component_ArrowDownIcon, { class: "ml-2 w-3 h-3" }, null, _parent4, _scopeId3));
                    }
                    _push4(`</div>`);
                  } else {
                    return [
                      vue.createVNode("div", {
                        class: ["select-none cursor-pointer flex items-center", $data.orderBy == "customer" ? "text-gray-900" : ""],
                        onClick: ($event) => $options.updateOrderBy("customer")
                      }, [
                        vue.createTextVNode(" Customer "),
                        $data.orderBy == "customer" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                          key: 0,
                          class: "ml-2 w-3 h-3"
                        })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                          key: 1,
                          class: "ml-2 w-3 h-3"
                        }))
                      ], 10, ["onClick"])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Status`);
                  } else {
                    return [
                      vue.createTextVNode("Status")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_table_h, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Total`);
                  } else {
                    return [
                      vue.createTextVNode("Total")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode("div", {
                      class: ["select-none cursor-pointer flex items-center", $data.orderBy == "id" ? "text-gray-900" : ""],
                      onClick: ($event) => $options.updateOrderBy("id")
                    }, [
                      vue.createTextVNode(" Order # "),
                      $data.orderBy == "id" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                        key: 0,
                        class: "ml-2 w-3 h-3"
                      })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                        key: 1,
                        class: "ml-2 w-3 h-3"
                      }))
                    ], 10, ["onClick"])
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode("div", {
                      class: ["select-none cursor-pointer flex items-center", $data.orderBy == "date" ? "text-gray-900" : ""],
                      onClick: ($event) => $options.updateOrderBy("date")
                    }, [
                      vue.createTextVNode(" Date "),
                      $data.orderBy == "date" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                        key: 0,
                        class: "ml-2 w-3 h-3"
                      })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                        key: 1,
                        class: "ml-2 w-3 h-3"
                      }))
                    ], 10, ["onClick"])
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode("div", {
                      class: ["select-none cursor-pointer flex items-center", $data.orderBy == "customer" ? "text-gray-900" : ""],
                      onClick: ($event) => $options.updateOrderBy("customer")
                    }, [
                      vue.createTextVNode(" Customer "),
                      $data.orderBy == "customer" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                        key: 0,
                        class: "ml-2 w-3 h-3"
                      })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                        key: 1,
                        class: "ml-2 w-3 h-3"
                      }))
                    ], 10, ["onClick"])
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Status")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_table_h, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Total")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<tbody${_scopeId}><!--[-->`);
        serverRenderer.ssrRenderList($props.orders.data, (order) => {
          _push2(`<tr tabindex="0" class="px-2 rounded-md hover:bg-gray-100 focus:bg-gray-100 transition cursor-pointer"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(order.id)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(order.id), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(_ctx.formatDate(order.date))}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(_ctx.formatDate(order.date)), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(order.customer.name)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(order.customer.name), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              var _a, _b;
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(order.is_quote ? order.status : (_a = order.deliveryStatus) == null ? void 0 : _a.name)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(order.is_quote ? order.status : (_b = order.deliveryStatus) == null ? void 0 : _b.name), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_table_d, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(order.grand_total)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(order.grand_total), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</tr>`);
        });
        _push2(`<!--]--></tbody>`);
      } else {
        return [
          vue.createVNode(_component_table_head, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_table_h, null, {
                default: vue.withCtx(() => [
                  vue.createVNode("div", {
                    class: ["select-none cursor-pointer flex items-center", $data.orderBy == "id" ? "text-gray-900" : ""],
                    onClick: ($event) => $options.updateOrderBy("id")
                  }, [
                    vue.createTextVNode(" Order # "),
                    $data.orderBy == "id" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                      key: 0,
                      class: "ml-2 w-3 h-3"
                    })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                      key: 1,
                      class: "ml-2 w-3 h-3"
                    }))
                  ], 10, ["onClick"])
                ]),
                _: 1
              }),
              vue.createVNode(_component_table_h, null, {
                default: vue.withCtx(() => [
                  vue.createVNode("div", {
                    class: ["select-none cursor-pointer flex items-center", $data.orderBy == "date" ? "text-gray-900" : ""],
                    onClick: ($event) => $options.updateOrderBy("date")
                  }, [
                    vue.createTextVNode(" Date "),
                    $data.orderBy == "date" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                      key: 0,
                      class: "ml-2 w-3 h-3"
                    })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                      key: 1,
                      class: "ml-2 w-3 h-3"
                    }))
                  ], 10, ["onClick"])
                ]),
                _: 1
              }),
              vue.createVNode(_component_table_h, null, {
                default: vue.withCtx(() => [
                  vue.createVNode("div", {
                    class: ["select-none cursor-pointer flex items-center", $data.orderBy == "customer" ? "text-gray-900" : ""],
                    onClick: ($event) => $options.updateOrderBy("customer")
                  }, [
                    vue.createTextVNode(" Customer "),
                    $data.orderBy == "customer" && $data.orderByDirection == "asc" ? (vue.openBlock(), vue.createBlock(_component_ArrowUpIcon, {
                      key: 0,
                      class: "ml-2 w-3 h-3"
                    })) : (vue.openBlock(), vue.createBlock(_component_ArrowDownIcon, {
                      key: 1,
                      class: "ml-2 w-3 h-3"
                    }))
                  ], 10, ["onClick"])
                ]),
                _: 1
              }),
              vue.createVNode(_component_table_h, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Status")
                ]),
                _: 1
              }),
              vue.createVNode(_component_table_h, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Total")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode("tbody", null, [
            (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($props.orders.data, (order) => {
              return vue.openBlock(), vue.createBlock("tr", {
                key: order.id,
                tabindex: "0",
                class: "px-2 rounded-md hover:bg-gray-100 focus:bg-gray-100 transition cursor-pointer",
                onClick: ($event) => _ctx.$inertia.get(_ctx.route("orders.show", order))
              }, [
                vue.createVNode(_component_table_d, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(order.id), 1)
                  ]),
                  _: 2
                }, 1024),
                vue.createVNode(_component_table_d, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(_ctx.formatDate(order.date)), 1)
                  ]),
                  _: 2
                }, 1024),
                vue.createVNode(_component_table_d, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(order.customer.name), 1)
                  ]),
                  _: 2
                }, 1024),
                vue.createVNode(_component_table_d, null, {
                  default: vue.withCtx(() => {
                    var _a;
                    return [
                      vue.createTextVNode(vue.toDisplayString(order.is_quote ? order.status : (_a = order.deliveryStatus) == null ? void 0 : _a.name), 1)
                    ];
                  }),
                  _: 2
                }, 1024),
                vue.createVNode(_component_table_d, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString(order.grand_total), 1)
                  ]),
                  _: 2
                }, 1024)
              ], 8, ["onClick"]);
            }), 128))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Orders/Components/OrdersTableList.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
var OrdersTableList = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
var OrdersTableList$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  "default": OrdersTableList
}, Symbol.toStringTag, { value: "Module" }));
